/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.111
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */

import{a as DA,b as ya}from"./chunk-HD2FRVT2.js";import{a as BY}from"./chunk-AHFCJPCJ.js";import{a as QZ,b as JZ}from"./chunk-YPNOAOY4.js";import{a as xW,b as wa,c as PW}from"./chunk-B2BCTP36.js";import{a as H}from"./chunk-CBR5UZ5M.js";import{b as wW,c as yW}from"./chunk-XJDXENOV.js";import{a as HW,b as qh,c as LW}from"./chunk-VYY5LEP7.js";import"./chunk-NN6SLFCO.js";import{a as TA}from"./chunk-XHQLW2L3.js";import"./chunk-C6RPXIM3.js";import{a as fW}from"./chunk-PA54BVTL.js";import{a as Oa}from"./chunk-N52FZRFP.js";import{a as qZ}from"./chunk-CQNJVU7J.js";import{a as MA}from"./chunk-IHABVUA3.js";import{a as SA}from"./chunk-3RMM272C.js";import"./chunk-6FTJPHAD.js";import"./chunk-M33QZY7H.js";import"./chunk-US4JQUQ6.js";import{a as _a}from"./chunk-TB7E5LLZ.js";import"./chunk-FE5EIIIR.js";import"./chunk-JQVYWZSJ.js";import{a as sn}from"./chunk-FN4WG2CM.js";import"./chunk-74YKVVJT.js";import{a as dn}from"./chunk-G7FEP2WW.js";import{a as Pm}from"./chunk-P2NLU4C5.js";import{a as XW}from"./chunk-3FWPHNAB.js";import{a as OW}from"./chunk-IWSOF7XY.js";import{a as rn}from"./chunk-G4DMKKUA.js";import{a as RY}from"./chunk-BWY4CO7K.js";import{a as vW}from"./chunk-3UAKIC5Y.js";import{a as jA,c as cA,d as zW}from"./chunk-43H44XVI.js";import{a as uW,b as Mm,c as sZ,d as xa,e as bW,g as BZ,h as CY,i as Sr,j as Ph,k as _W,l as Dm,m as vY,n as kZ,p as ki,q as zm,r as kh}from"./chunk-SN4TUFKS.js";import{a as Kh}from"./chunk-GBTWXPEH.js";import{a as q,b as QY,c as CZ,d as eZ,e as lY}from"./chunk-LNQJOB2G.js";import{a as WZ}from"./chunk-AUOFUFUP.js";import{a as _,b as nm,c as pA,d as Bm}from"./chunk-PTNIWY5H.js";import{a as gZ}from"./chunk-LAL3IUCV.js";import{a as S}from"./chunk-CG3JQAX7.js";import{a as Sm}from"./chunk-VSVNBI3J.js";import{a as l}from"./chunk-K36PKEJW.js";import{a as U,b as y}from"./chunk-YOLMPEQR.js";import{a as SW,c as DW,d as ba,e as _n,f as V}from"./chunk-DQETLSQS.js";var GR=DW((d1,RR)=>{"use strict";RR.exports=pE;var Mi=1e20;function pE(Z,m){m||(m={});var h=m.cutoff==null?.25:m.cutoff,n=m.radius==null?8:m.radius,i=m.channel||0,A,t,W,e,G,F,d,J,k,r,Q;if(ArrayBuffer.isView(Z)||Array.isArray(Z)){if(!m.width||!m.height)throw Error("For raw data width and height should be provided by options");A=m.width,t=m.height,e=Z,m.stride?F=m.stride:F=Math.floor(Z.length/A/t)}else window.HTMLCanvasElement&&Z instanceof window.HTMLCanvasElement?(J=Z,d=J.getContext("2d"),A=J.width,t=J.height,k=d.getImageData(0,0,A,t),e=k.data,F=4):window.CanvasRenderingContext2D&&Z instanceof window.CanvasRenderingContext2D?(J=Z.canvas,d=Z,A=J.width,t=J.height,k=d.getImageData(0,0,A,t),e=k.data,F=4):window.ImageData&&Z instanceof window.ImageData&&(k=Z,A=Z.width,t=Z.height,e=k.data,F=4);if(W=Math.max(A,t),window.Uint8ClampedArray&&e instanceof window.Uint8ClampedArray||window.Uint8Array&&e instanceof window.Uint8Array)for(G=e,e=Array(A*t),r=0,Q=Math.floor(G.length/F);r<Q;r++)e[r]=G[r*F+i]/255;else if(F!==1)throw Error("Raw data can have only 1 value per pixel");var p=Array(A*t),T=Array(A*t),I=Array(W),f=Array(W),b=Array(W+1),O=Array(W);for(r=0,Q=A*t;r<Q;r++){var v=e[r];p[r]=v===1?0:v===0?Mi:Math.pow(Math.max(0,.5-v),2),T[r]=v===1?Mi:v===0?0:Math.pow(Math.max(0,v-.5),2)}VR(p,A,t,I,f,O,b),VR(T,A,t,I,f,O,b);var hZ=window.Float32Array?new Float32Array(A*t):new Array(A*t);for(r=0,Q=A*t;r<Q;r++)hZ[r]=Math.min(Math.max(1-((p[r]-T[r])/n+h),0),1);return hZ}function VR(Z,m,h,n,i,A,t){for(var W=0;W<m;W++){for(var e=0;e<h;e++)n[e]=Z[e*m+W];for(lR(n,i,A,t,h),e=0;e<h;e++)Z[e*m+W]=i[e]}for(e=0;e<h;e++){for(W=0;W<m;W++)n[W]=Z[e*m+W];for(lR(n,i,A,t,m),W=0;W<m;W++)Z[e*m+W]=Math.sqrt(i[W])}}function lR(Z,m,h,n,i){h[0]=0,n[0]=-Mi,n[1]=+Mi;for(var A=1,t=0;A<i;A++){for(var W=(Z[A]+A*A-(Z[h[t]]+h[t]*h[t]))/(2*A-2*h[t]);W<=n[t];)t--,W=(Z[A]+A*A-(Z[h[t]]+h[t]*h[t]))/(2*A-2*h[t]);t++,h[t]=A,n[t]=W,n[t+1]=+Mi}for(A=0,t=0;A<i;A++){for(;n[t+1]<A;)t++;m[A]=(A-h[t])*(A-h[t])+Z[h[t]]}}});var FR=DW((s1,$A)=>{function jE(){var Z=0,m=1,h=2,n=3,i=4,A=5,t=6,W=7,e=8,G=9,F=10,d=11,J=12,k=13,r=14,Q=15,p=16,T=17,I=0,f=1,b=2,O=3,v=4;function hZ(Y,ZZ){return 55296<=Y.charCodeAt(ZZ)&&Y.charCodeAt(ZZ)<=56319&&56320<=Y.charCodeAt(ZZ+1)&&Y.charCodeAt(ZZ+1)<=57343}function K(Y,ZZ){ZZ===void 0&&(ZZ=0);var oZ=Y.charCodeAt(ZZ);if(55296<=oZ&&oZ<=56319&&ZZ<Y.length-1){var RZ=oZ,EZ=Y.charCodeAt(ZZ+1);return 56320<=EZ&&EZ<=57343?(RZ-55296)*1024+(EZ-56320)+65536:RZ}if(56320<=oZ&&oZ<=57343&&ZZ>=1){var RZ=Y.charCodeAt(ZZ-1),EZ=oZ;return 55296<=RZ&&RZ<=56319?(RZ-55296)*1024+(EZ-56320)+65536:EZ}return oZ}function tZ(Y,ZZ,oZ){var RZ=[Y].concat(ZZ).concat([oZ]),EZ=RZ[RZ.length-2],z=oZ,nZ=RZ.lastIndexOf(r);if(nZ>1&&RZ.slice(1,nZ).every(function(DZ){return DZ==n})&&[n,k,T].indexOf(Y)==-1)return b;var XZ=RZ.lastIndexOf(i);if(XZ>0&&RZ.slice(1,XZ).every(function(DZ){return DZ==i})&&[J,i].indexOf(EZ)==-1)return RZ.filter(function(DZ){return DZ==i}).length%2==1?O:v;if(EZ==Z&&z==m)return I;if(EZ==h||EZ==Z||EZ==m)return z==r&&ZZ.every(function(DZ){return DZ==n})?b:f;if(z==h||z==Z||z==m)return f;if(EZ==t&&(z==t||z==W||z==G||z==F))return I;if((EZ==G||EZ==W)&&(z==W||z==e))return I;if((EZ==F||EZ==e)&&z==e)return I;if(z==n||z==Q)return I;if(z==A)return I;if(EZ==J)return I;var wZ=RZ.indexOf(n)!=-1?RZ.lastIndexOf(n)-1:RZ.length-2;return[k,T].indexOf(RZ[wZ])!=-1&&RZ.slice(wZ+1,-1).every(function(DZ){return DZ==n})&&z==r||EZ==Q&&[p,T].indexOf(z)!=-1?I:ZZ.indexOf(i)!=-1?b:EZ==i&&z==i?I:f}this.nextBreak=function(Y,ZZ){if(ZZ===void 0&&(ZZ=0),ZZ<0)return 0;if(ZZ>=Y.length-1)return Y.length;for(var oZ=NZ(K(Y,ZZ)),RZ=[],EZ=ZZ+1;EZ<Y.length;EZ++)if(!hZ(Y,EZ-1)){var z=NZ(K(Y,EZ));if(tZ(oZ,RZ,z))return EZ;RZ.push(z)}return Y.length},this.splitGraphemes=function(Y){for(var ZZ=[],oZ=0,RZ;(RZ=this.nextBreak(Y,oZ))<Y.length;)ZZ.push(Y.slice(oZ,RZ)),oZ=RZ;return oZ<Y.length&&ZZ.push(Y.slice(oZ)),ZZ},this.iterateGraphemes=function(Y){var ZZ=0,oZ={next:function(){var RZ,EZ;return(EZ=this.nextBreak(Y,ZZ))<Y.length?(RZ=Y.slice(ZZ,EZ),ZZ=EZ,{value:RZ,done:!1}):ZZ<Y.length?(RZ=Y.slice(ZZ),ZZ=Y.length,{value:RZ,done:!1}):{value:void 0,done:!0}}.bind(this)};return typeof Symbol<"u"&&Symbol.iterator&&(oZ[Symbol.iterator]=function(){return oZ}),oZ},this.countGraphemes=function(Y){for(var ZZ=0,oZ=0,RZ;(RZ=this.nextBreak(Y,oZ))<Y.length;)oZ=RZ,ZZ++;return oZ<Y.length&&ZZ++,ZZ};function NZ(Y){return 1536<=Y&&Y<=1541||Y==1757||Y==1807||Y==2274||Y==3406||Y==69821||70082<=Y&&Y<=70083||Y==72250||72326<=Y&&Y<=72329||Y==73030?J:Y==13?Z:Y==10?m:0<=Y&&Y<=9||11<=Y&&Y<=12||14<=Y&&Y<=31||127<=Y&&Y<=159||Y==173||Y==1564||Y==6158||Y==8203||8206<=Y&&Y<=8207||Y==8232||Y==8233||8234<=Y&&Y<=8238||8288<=Y&&Y<=8292||Y==8293||8294<=Y&&Y<=8303||55296<=Y&&Y<=57343||Y==65279||65520<=Y&&Y<=65528||65529<=Y&&Y<=65531||113824<=Y&&Y<=113827||119155<=Y&&Y<=119162||Y==917504||Y==917505||917506<=Y&&Y<=917535||917632<=Y&&Y<=917759||918e3<=Y&&Y<=921599?h:768<=Y&&Y<=879||1155<=Y&&Y<=1159||1160<=Y&&Y<=1161||1425<=Y&&Y<=1469||Y==1471||1473<=Y&&Y<=1474||1476<=Y&&Y<=1477||Y==1479||1552<=Y&&Y<=1562||1611<=Y&&Y<=1631||Y==1648||1750<=Y&&Y<=1756||1759<=Y&&Y<=1764||1767<=Y&&Y<=1768||1770<=Y&&Y<=1773||Y==1809||1840<=Y&&Y<=1866||1958<=Y&&Y<=1968||2027<=Y&&Y<=2035||2070<=Y&&Y<=2073||2075<=Y&&Y<=2083||2085<=Y&&Y<=2087||2089<=Y&&Y<=2093||2137<=Y&&Y<=2139||2260<=Y&&Y<=2273||2275<=Y&&Y<=2306||Y==2362||Y==2364||2369<=Y&&Y<=2376||Y==2381||2385<=Y&&Y<=2391||2402<=Y&&Y<=2403||Y==2433||Y==2492||Y==2494||2497<=Y&&Y<=2500||Y==2509||Y==2519||2530<=Y&&Y<=2531||2561<=Y&&Y<=2562||Y==2620||2625<=Y&&Y<=2626||2631<=Y&&Y<=2632||2635<=Y&&Y<=2637||Y==2641||2672<=Y&&Y<=2673||Y==2677||2689<=Y&&Y<=2690||Y==2748||2753<=Y&&Y<=2757||2759<=Y&&Y<=2760||Y==2765||2786<=Y&&Y<=2787||2810<=Y&&Y<=2815||Y==2817||Y==2876||Y==2878||Y==2879||2881<=Y&&Y<=2884||Y==2893||Y==2902||Y==2903||2914<=Y&&Y<=2915||Y==2946||Y==3006||Y==3008||Y==3021||Y==3031||Y==3072||3134<=Y&&Y<=3136||3142<=Y&&Y<=3144||3146<=Y&&Y<=3149||3157<=Y&&Y<=3158||3170<=Y&&Y<=3171||Y==3201||Y==3260||Y==3263||Y==3266||Y==3270||3276<=Y&&Y<=3277||3285<=Y&&Y<=3286||3298<=Y&&Y<=3299||3328<=Y&&Y<=3329||3387<=Y&&Y<=3388||Y==3390||3393<=Y&&Y<=3396||Y==3405||Y==3415||3426<=Y&&Y<=3427||Y==3530||Y==3535||3538<=Y&&Y<=3540||Y==3542||Y==3551||Y==3633||3636<=Y&&Y<=3642||3655<=Y&&Y<=3662||Y==3761||3764<=Y&&Y<=3769||3771<=Y&&Y<=3772||3784<=Y&&Y<=3789||3864<=Y&&Y<=3865||Y==3893||Y==3895||Y==3897||3953<=Y&&Y<=3966||3968<=Y&&Y<=3972||3974<=Y&&Y<=3975||3981<=Y&&Y<=3991||3993<=Y&&Y<=4028||Y==4038||4141<=Y&&Y<=4144||4146<=Y&&Y<=4151||4153<=Y&&Y<=4154||4157<=Y&&Y<=4158||4184<=Y&&Y<=4185||4190<=Y&&Y<=4192||4209<=Y&&Y<=4212||Y==4226||4229<=Y&&Y<=4230||Y==4237||Y==4253||4957<=Y&&Y<=4959||5906<=Y&&Y<=5908||5938<=Y&&Y<=5940||5970<=Y&&Y<=5971||6002<=Y&&Y<=6003||6068<=Y&&Y<=6069||6071<=Y&&Y<=6077||Y==6086||6089<=Y&&Y<=6099||Y==6109||6155<=Y&&Y<=6157||6277<=Y&&Y<=6278||Y==6313||6432<=Y&&Y<=6434||6439<=Y&&Y<=6440||Y==6450||6457<=Y&&Y<=6459||6679<=Y&&Y<=6680||Y==6683||Y==6742||6744<=Y&&Y<=6750||Y==6752||Y==6754||6757<=Y&&Y<=6764||6771<=Y&&Y<=6780||Y==6783||6832<=Y&&Y<=6845||Y==6846||6912<=Y&&Y<=6915||Y==6964||6966<=Y&&Y<=6970||Y==6972||Y==6978||7019<=Y&&Y<=7027||7040<=Y&&Y<=7041||7074<=Y&&Y<=7077||7080<=Y&&Y<=7081||7083<=Y&&Y<=7085||Y==7142||7144<=Y&&Y<=7145||Y==7149||7151<=Y&&Y<=7153||7212<=Y&&Y<=7219||7222<=Y&&Y<=7223||7376<=Y&&Y<=7378||7380<=Y&&Y<=7392||7394<=Y&&Y<=7400||Y==7405||Y==7412||7416<=Y&&Y<=7417||7616<=Y&&Y<=7673||7675<=Y&&Y<=7679||Y==8204||8400<=Y&&Y<=8412||8413<=Y&&Y<=8416||Y==8417||8418<=Y&&Y<=8420||8421<=Y&&Y<=8432||11503<=Y&&Y<=11505||Y==11647||11744<=Y&&Y<=11775||12330<=Y&&Y<=12333||12334<=Y&&Y<=12335||12441<=Y&&Y<=12442||Y==42607||42608<=Y&&Y<=42610||42612<=Y&&Y<=42621||42654<=Y&&Y<=42655||42736<=Y&&Y<=42737||Y==43010||Y==43014||Y==43019||43045<=Y&&Y<=43046||43204<=Y&&Y<=43205||43232<=Y&&Y<=43249||43302<=Y&&Y<=43309||43335<=Y&&Y<=43345||43392<=Y&&Y<=43394||Y==43443||43446<=Y&&Y<=43449||Y==43452||Y==43493||43561<=Y&&Y<=43566||43569<=Y&&Y<=43570||43573<=Y&&Y<=43574||Y==43587||Y==43596||Y==43644||Y==43696||43698<=Y&&Y<=43700||43703<=Y&&Y<=43704||43710<=Y&&Y<=43711||Y==43713||43756<=Y&&Y<=43757||Y==43766||Y==44005||Y==44008||Y==44013||Y==64286||65024<=Y&&Y<=65039||65056<=Y&&Y<=65071||65438<=Y&&Y<=65439||Y==66045||Y==66272||66422<=Y&&Y<=66426||68097<=Y&&Y<=68099||68101<=Y&&Y<=68102||68108<=Y&&Y<=68111||68152<=Y&&Y<=68154||Y==68159||68325<=Y&&Y<=68326||Y==69633||69688<=Y&&Y<=69702||69759<=Y&&Y<=69761||69811<=Y&&Y<=69814||69817<=Y&&Y<=69818||69888<=Y&&Y<=69890||69927<=Y&&Y<=69931||69933<=Y&&Y<=69940||Y==70003||70016<=Y&&Y<=70017||70070<=Y&&Y<=70078||70090<=Y&&Y<=70092||70191<=Y&&Y<=70193||Y==70196||70198<=Y&&Y<=70199||Y==70206||Y==70367||70371<=Y&&Y<=70378||70400<=Y&&Y<=70401||Y==70460||Y==70462||Y==70464||Y==70487||70502<=Y&&Y<=70508||70512<=Y&&Y<=70516||70712<=Y&&Y<=70719||70722<=Y&&Y<=70724||Y==70726||Y==70832||70835<=Y&&Y<=70840||Y==70842||Y==70845||70847<=Y&&Y<=70848||70850<=Y&&Y<=70851||Y==71087||71090<=Y&&Y<=71093||71100<=Y&&Y<=71101||71103<=Y&&Y<=71104||71132<=Y&&Y<=71133||71219<=Y&&Y<=71226||Y==71229||71231<=Y&&Y<=71232||Y==71339||Y==71341||71344<=Y&&Y<=71349||Y==71351||71453<=Y&&Y<=71455||71458<=Y&&Y<=71461||71463<=Y&&Y<=71467||72193<=Y&&Y<=72198||72201<=Y&&Y<=72202||72243<=Y&&Y<=72248||72251<=Y&&Y<=72254||Y==72263||72273<=Y&&Y<=72278||72281<=Y&&Y<=72283||72330<=Y&&Y<=72342||72344<=Y&&Y<=72345||72752<=Y&&Y<=72758||72760<=Y&&Y<=72765||Y==72767||72850<=Y&&Y<=72871||72874<=Y&&Y<=72880||72882<=Y&&Y<=72883||72885<=Y&&Y<=72886||73009<=Y&&Y<=73014||Y==73018||73020<=Y&&Y<=73021||73023<=Y&&Y<=73029||Y==73031||92912<=Y&&Y<=92916||92976<=Y&&Y<=92982||94095<=Y&&Y<=94098||113821<=Y&&Y<=113822||Y==119141||119143<=Y&&Y<=119145||119150<=Y&&Y<=119154||119163<=Y&&Y<=119170||119173<=Y&&Y<=119179||119210<=Y&&Y<=119213||119362<=Y&&Y<=119364||121344<=Y&&Y<=121398||121403<=Y&&Y<=121452||Y==121461||Y==121476||121499<=Y&&Y<=121503||121505<=Y&&Y<=121519||122880<=Y&&Y<=122886||122888<=Y&&Y<=122904||122907<=Y&&Y<=122913||122915<=Y&&Y<=122916||122918<=Y&&Y<=122922||125136<=Y&&Y<=125142||125252<=Y&&Y<=125258||917536<=Y&&Y<=917631||917760<=Y&&Y<=917999?n:127462<=Y&&Y<=127487?i:Y==2307||Y==2363||2366<=Y&&Y<=2368||2377<=Y&&Y<=2380||2382<=Y&&Y<=2383||2434<=Y&&Y<=2435||2495<=Y&&Y<=2496||2503<=Y&&Y<=2504||2507<=Y&&Y<=2508||Y==2563||2622<=Y&&Y<=2624||Y==2691||2750<=Y&&Y<=2752||Y==2761||2763<=Y&&Y<=2764||2818<=Y&&Y<=2819||Y==2880||2887<=Y&&Y<=2888||2891<=Y&&Y<=2892||Y==3007||3009<=Y&&Y<=3010||3014<=Y&&Y<=3016||3018<=Y&&Y<=3020||3073<=Y&&Y<=3075||3137<=Y&&Y<=3140||3202<=Y&&Y<=3203||Y==3262||3264<=Y&&Y<=3265||3267<=Y&&Y<=3268||3271<=Y&&Y<=3272||3274<=Y&&Y<=3275||3330<=Y&&Y<=3331||3391<=Y&&Y<=3392||3398<=Y&&Y<=3400||3402<=Y&&Y<=3404||3458<=Y&&Y<=3459||3536<=Y&&Y<=3537||3544<=Y&&Y<=3550||3570<=Y&&Y<=3571||Y==3635||Y==3763||3902<=Y&&Y<=3903||Y==3967||Y==4145||4155<=Y&&Y<=4156||4182<=Y&&Y<=4183||Y==4228||Y==6070||6078<=Y&&Y<=6085||6087<=Y&&Y<=6088||6435<=Y&&Y<=6438||6441<=Y&&Y<=6443||6448<=Y&&Y<=6449||6451<=Y&&Y<=6456||6681<=Y&&Y<=6682||Y==6741||Y==6743||6765<=Y&&Y<=6770||Y==6916||Y==6965||Y==6971||6973<=Y&&Y<=6977||6979<=Y&&Y<=6980||Y==7042||Y==7073||7078<=Y&&Y<=7079||Y==7082||Y==7143||7146<=Y&&Y<=7148||Y==7150||7154<=Y&&Y<=7155||7204<=Y&&Y<=7211||7220<=Y&&Y<=7221||Y==7393||7410<=Y&&Y<=7411||Y==7415||43043<=Y&&Y<=43044||Y==43047||43136<=Y&&Y<=43137||43188<=Y&&Y<=43203||43346<=Y&&Y<=43347||Y==43395||43444<=Y&&Y<=43445||43450<=Y&&Y<=43451||43453<=Y&&Y<=43456||43567<=Y&&Y<=43568||43571<=Y&&Y<=43572||Y==43597||Y==43755||43758<=Y&&Y<=43759||Y==43765||44003<=Y&&Y<=44004||44006<=Y&&Y<=44007||44009<=Y&&Y<=44010||Y==44012||Y==69632||Y==69634||Y==69762||69808<=Y&&Y<=69810||69815<=Y&&Y<=69816||Y==69932||Y==70018||70067<=Y&&Y<=70069||70079<=Y&&Y<=70080||70188<=Y&&Y<=70190||70194<=Y&&Y<=70195||Y==70197||70368<=Y&&Y<=70370||70402<=Y&&Y<=70403||Y==70463||70465<=Y&&Y<=70468||70471<=Y&&Y<=70472||70475<=Y&&Y<=70477||70498<=Y&&Y<=70499||70709<=Y&&Y<=70711||70720<=Y&&Y<=70721||Y==70725||70833<=Y&&Y<=70834||Y==70841||70843<=Y&&Y<=70844||Y==70846||Y==70849||71088<=Y&&Y<=71089||71096<=Y&&Y<=71099||Y==71102||71216<=Y&&Y<=71218||71227<=Y&&Y<=71228||Y==71230||Y==71340||71342<=Y&&Y<=71343||Y==71350||71456<=Y&&Y<=71457||Y==71462||72199<=Y&&Y<=72200||Y==72249||72279<=Y&&Y<=72280||Y==72343||Y==72751||Y==72766||Y==72873||Y==72881||Y==72884||94033<=Y&&Y<=94078||Y==119142||Y==119149?A:4352<=Y&&Y<=4447||43360<=Y&&Y<=43388?t:4448<=Y&&Y<=4519||55216<=Y&&Y<=55238?W:4520<=Y&&Y<=4607||55243<=Y&&Y<=55291?e:Y==44032||Y==44060||Y==44088||Y==44116||Y==44144||Y==44172||Y==44200||Y==44228||Y==44256||Y==44284||Y==44312||Y==44340||Y==44368||Y==44396||Y==44424||Y==44452||Y==44480||Y==44508||Y==44536||Y==44564||Y==44592||Y==44620||Y==44648||Y==44676||Y==44704||Y==44732||Y==44760||Y==44788||Y==44816||Y==44844||Y==44872||Y==44900||Y==44928||Y==44956||Y==44984||Y==45012||Y==45040||Y==45068||Y==45096||Y==45124||Y==45152||Y==45180||Y==45208||Y==45236||Y==45264||Y==45292||Y==45320||Y==45348||Y==45376||Y==45404||Y==45432||Y==45460||Y==45488||Y==45516||Y==45544||Y==45572||Y==45600||Y==45628||Y==45656||Y==45684||Y==45712||Y==45740||Y==45768||Y==45796||Y==45824||Y==45852||Y==45880||Y==45908||Y==45936||Y==45964||Y==45992||Y==46020||Y==46048||Y==46076||Y==46104||Y==46132||Y==46160||Y==46188||Y==46216||Y==46244||Y==46272||Y==46300||Y==46328||Y==46356||Y==46384||Y==46412||Y==46440||Y==46468||Y==46496||Y==46524||Y==46552||Y==46580||Y==46608||Y==46636||Y==46664||Y==46692||Y==46720||Y==46748||Y==46776||Y==46804||Y==46832||Y==46860||Y==46888||Y==46916||Y==46944||Y==46972||Y==47e3||Y==47028||Y==47056||Y==47084||Y==47112||Y==47140||Y==47168||Y==47196||Y==47224||Y==47252||Y==47280||Y==47308||Y==47336||Y==47364||Y==47392||Y==47420||Y==47448||Y==47476||Y==47504||Y==47532||Y==47560||Y==47588||Y==47616||Y==47644||Y==47672||Y==47700||Y==47728||Y==47756||Y==47784||Y==47812||Y==47840||Y==47868||Y==47896||Y==47924||Y==47952||Y==47980||Y==48008||Y==48036||Y==48064||Y==48092||Y==48120||Y==48148||Y==48176||Y==48204||Y==48232||Y==48260||Y==48288||Y==48316||Y==48344||Y==48372||Y==48400||Y==48428||Y==48456||Y==48484||Y==48512||Y==48540||Y==48568||Y==48596||Y==48624||Y==48652||Y==48680||Y==48708||Y==48736||Y==48764||Y==48792||Y==48820||Y==48848||Y==48876||Y==48904||Y==48932||Y==48960||Y==48988||Y==49016||Y==49044||Y==49072||Y==49100||Y==49128||Y==49156||Y==49184||Y==49212||Y==49240||Y==49268||Y==49296||Y==49324||Y==49352||Y==49380||Y==49408||Y==49436||Y==49464||Y==49492||Y==49520||Y==49548||Y==49576||Y==49604||Y==49632||Y==49660||Y==49688||Y==49716||Y==49744||Y==49772||Y==49800||Y==49828||Y==49856||Y==49884||Y==49912||Y==49940||Y==49968||Y==49996||Y==50024||Y==50052||Y==50080||Y==50108||Y==50136||Y==50164||Y==50192||Y==50220||Y==50248||Y==50276||Y==50304||Y==50332||Y==50360||Y==50388||Y==50416||Y==50444||Y==50472||Y==50500||Y==50528||Y==50556||Y==50584||Y==50612||Y==50640||Y==50668||Y==50696||Y==50724||Y==50752||Y==50780||Y==50808||Y==50836||Y==50864||Y==50892||Y==50920||Y==50948||Y==50976||Y==51004||Y==51032||Y==51060||Y==51088||Y==51116||Y==51144||Y==51172||Y==51200||Y==51228||Y==51256||Y==51284||Y==51312||Y==51340||Y==51368||Y==51396||Y==51424||Y==51452||Y==51480||Y==51508||Y==51536||Y==51564||Y==51592||Y==51620||Y==51648||Y==51676||Y==51704||Y==51732||Y==51760||Y==51788||Y==51816||Y==51844||Y==51872||Y==51900||Y==51928||Y==51956||Y==51984||Y==52012||Y==52040||Y==52068||Y==52096||Y==52124||Y==52152||Y==52180||Y==52208||Y==52236||Y==52264||Y==52292||Y==52320||Y==52348||Y==52376||Y==52404||Y==52432||Y==52460||Y==52488||Y==52516||Y==52544||Y==52572||Y==52600||Y==52628||Y==52656||Y==52684||Y==52712||Y==52740||Y==52768||Y==52796||Y==52824||Y==52852||Y==52880||Y==52908||Y==52936||Y==52964||Y==52992||Y==53020||Y==53048||Y==53076||Y==53104||Y==53132||Y==53160||Y==53188||Y==53216||Y==53244||Y==53272||Y==53300||Y==53328||Y==53356||Y==53384||Y==53412||Y==53440||Y==53468||Y==53496||Y==53524||Y==53552||Y==53580||Y==53608||Y==53636||Y==53664||Y==53692||Y==53720||Y==53748||Y==53776||Y==53804||Y==53832||Y==53860||Y==53888||Y==53916||Y==53944||Y==53972||Y==54e3||Y==54028||Y==54056||Y==54084||Y==54112||Y==54140||Y==54168||Y==54196||Y==54224||Y==54252||Y==54280||Y==54308||Y==54336||Y==54364||Y==54392||Y==54420||Y==54448||Y==54476||Y==54504||Y==54532||Y==54560||Y==54588||Y==54616||Y==54644||Y==54672||Y==54700||Y==54728||Y==54756||Y==54784||Y==54812||Y==54840||Y==54868||Y==54896||Y==54924||Y==54952||Y==54980||Y==55008||Y==55036||Y==55064||Y==55092||Y==55120||Y==55148||Y==55176?G:44033<=Y&&Y<=44059||44061<=Y&&Y<=44087||44089<=Y&&Y<=44115||44117<=Y&&Y<=44143||44145<=Y&&Y<=44171||44173<=Y&&Y<=44199||44201<=Y&&Y<=44227||44229<=Y&&Y<=44255||44257<=Y&&Y<=44283||44285<=Y&&Y<=44311||44313<=Y&&Y<=44339||44341<=Y&&Y<=44367||44369<=Y&&Y<=44395||44397<=Y&&Y<=44423||44425<=Y&&Y<=44451||44453<=Y&&Y<=44479||44481<=Y&&Y<=44507||44509<=Y&&Y<=44535||44537<=Y&&Y<=44563||44565<=Y&&Y<=44591||44593<=Y&&Y<=44619||44621<=Y&&Y<=44647||44649<=Y&&Y<=44675||44677<=Y&&Y<=44703||44705<=Y&&Y<=44731||44733<=Y&&Y<=44759||44761<=Y&&Y<=44787||44789<=Y&&Y<=44815||44817<=Y&&Y<=44843||44845<=Y&&Y<=44871||44873<=Y&&Y<=44899||44901<=Y&&Y<=44927||44929<=Y&&Y<=44955||44957<=Y&&Y<=44983||44985<=Y&&Y<=45011||45013<=Y&&Y<=45039||45041<=Y&&Y<=45067||45069<=Y&&Y<=45095||45097<=Y&&Y<=45123||45125<=Y&&Y<=45151||45153<=Y&&Y<=45179||45181<=Y&&Y<=45207||45209<=Y&&Y<=45235||45237<=Y&&Y<=45263||45265<=Y&&Y<=45291||45293<=Y&&Y<=45319||45321<=Y&&Y<=45347||45349<=Y&&Y<=45375||45377<=Y&&Y<=45403||45405<=Y&&Y<=45431||45433<=Y&&Y<=45459||45461<=Y&&Y<=45487||45489<=Y&&Y<=45515||45517<=Y&&Y<=45543||45545<=Y&&Y<=45571||45573<=Y&&Y<=45599||45601<=Y&&Y<=45627||45629<=Y&&Y<=45655||45657<=Y&&Y<=45683||45685<=Y&&Y<=45711||45713<=Y&&Y<=45739||45741<=Y&&Y<=45767||45769<=Y&&Y<=45795||45797<=Y&&Y<=45823||45825<=Y&&Y<=45851||45853<=Y&&Y<=45879||45881<=Y&&Y<=45907||45909<=Y&&Y<=45935||45937<=Y&&Y<=45963||45965<=Y&&Y<=45991||45993<=Y&&Y<=46019||46021<=Y&&Y<=46047||46049<=Y&&Y<=46075||46077<=Y&&Y<=46103||46105<=Y&&Y<=46131||46133<=Y&&Y<=46159||46161<=Y&&Y<=46187||46189<=Y&&Y<=46215||46217<=Y&&Y<=46243||46245<=Y&&Y<=46271||46273<=Y&&Y<=46299||46301<=Y&&Y<=46327||46329<=Y&&Y<=46355||46357<=Y&&Y<=46383||46385<=Y&&Y<=46411||46413<=Y&&Y<=46439||46441<=Y&&Y<=46467||46469<=Y&&Y<=46495||46497<=Y&&Y<=46523||46525<=Y&&Y<=46551||46553<=Y&&Y<=46579||46581<=Y&&Y<=46607||46609<=Y&&Y<=46635||46637<=Y&&Y<=46663||46665<=Y&&Y<=46691||46693<=Y&&Y<=46719||46721<=Y&&Y<=46747||46749<=Y&&Y<=46775||46777<=Y&&Y<=46803||46805<=Y&&Y<=46831||46833<=Y&&Y<=46859||46861<=Y&&Y<=46887||46889<=Y&&Y<=46915||46917<=Y&&Y<=46943||46945<=Y&&Y<=46971||46973<=Y&&Y<=46999||47001<=Y&&Y<=47027||47029<=Y&&Y<=47055||47057<=Y&&Y<=47083||47085<=Y&&Y<=47111||47113<=Y&&Y<=47139||47141<=Y&&Y<=47167||47169<=Y&&Y<=47195||47197<=Y&&Y<=47223||47225<=Y&&Y<=47251||47253<=Y&&Y<=47279||47281<=Y&&Y<=47307||47309<=Y&&Y<=47335||47337<=Y&&Y<=47363||47365<=Y&&Y<=47391||47393<=Y&&Y<=47419||47421<=Y&&Y<=47447||47449<=Y&&Y<=47475||47477<=Y&&Y<=47503||47505<=Y&&Y<=47531||47533<=Y&&Y<=47559||47561<=Y&&Y<=47587||47589<=Y&&Y<=47615||47617<=Y&&Y<=47643||47645<=Y&&Y<=47671||47673<=Y&&Y<=47699||47701<=Y&&Y<=47727||47729<=Y&&Y<=47755||47757<=Y&&Y<=47783||47785<=Y&&Y<=47811||47813<=Y&&Y<=47839||47841<=Y&&Y<=47867||47869<=Y&&Y<=47895||47897<=Y&&Y<=47923||47925<=Y&&Y<=47951||47953<=Y&&Y<=47979||47981<=Y&&Y<=48007||48009<=Y&&Y<=48035||48037<=Y&&Y<=48063||48065<=Y&&Y<=48091||48093<=Y&&Y<=48119||48121<=Y&&Y<=48147||48149<=Y&&Y<=48175||48177<=Y&&Y<=48203||48205<=Y&&Y<=48231||48233<=Y&&Y<=48259||48261<=Y&&Y<=48287||48289<=Y&&Y<=48315||48317<=Y&&Y<=48343||48345<=Y&&Y<=48371||48373<=Y&&Y<=48399||48401<=Y&&Y<=48427||48429<=Y&&Y<=48455||48457<=Y&&Y<=48483||48485<=Y&&Y<=48511||48513<=Y&&Y<=48539||48541<=Y&&Y<=48567||48569<=Y&&Y<=48595||48597<=Y&&Y<=48623||48625<=Y&&Y<=48651||48653<=Y&&Y<=48679||48681<=Y&&Y<=48707||48709<=Y&&Y<=48735||48737<=Y&&Y<=48763||48765<=Y&&Y<=48791||48793<=Y&&Y<=48819||48821<=Y&&Y<=48847||48849<=Y&&Y<=48875||48877<=Y&&Y<=48903||48905<=Y&&Y<=48931||48933<=Y&&Y<=48959||48961<=Y&&Y<=48987||48989<=Y&&Y<=49015||49017<=Y&&Y<=49043||49045<=Y&&Y<=49071||49073<=Y&&Y<=49099||49101<=Y&&Y<=49127||49129<=Y&&Y<=49155||49157<=Y&&Y<=49183||49185<=Y&&Y<=49211||49213<=Y&&Y<=49239||49241<=Y&&Y<=49267||49269<=Y&&Y<=49295||49297<=Y&&Y<=49323||49325<=Y&&Y<=49351||49353<=Y&&Y<=49379||49381<=Y&&Y<=49407||49409<=Y&&Y<=49435||49437<=Y&&Y<=49463||49465<=Y&&Y<=49491||49493<=Y&&Y<=49519||49521<=Y&&Y<=49547||49549<=Y&&Y<=49575||49577<=Y&&Y<=49603||49605<=Y&&Y<=49631||49633<=Y&&Y<=49659||49661<=Y&&Y<=49687||49689<=Y&&Y<=49715||49717<=Y&&Y<=49743||49745<=Y&&Y<=49771||49773<=Y&&Y<=49799||49801<=Y&&Y<=49827||49829<=Y&&Y<=49855||49857<=Y&&Y<=49883||49885<=Y&&Y<=49911||49913<=Y&&Y<=49939||49941<=Y&&Y<=49967||49969<=Y&&Y<=49995||49997<=Y&&Y<=50023||50025<=Y&&Y<=50051||50053<=Y&&Y<=50079||50081<=Y&&Y<=50107||50109<=Y&&Y<=50135||50137<=Y&&Y<=50163||50165<=Y&&Y<=50191||50193<=Y&&Y<=50219||50221<=Y&&Y<=50247||50249<=Y&&Y<=50275||50277<=Y&&Y<=50303||50305<=Y&&Y<=50331||50333<=Y&&Y<=50359||50361<=Y&&Y<=50387||50389<=Y&&Y<=50415||50417<=Y&&Y<=50443||50445<=Y&&Y<=50471||50473<=Y&&Y<=50499||50501<=Y&&Y<=50527||50529<=Y&&Y<=50555||50557<=Y&&Y<=50583||50585<=Y&&Y<=50611||50613<=Y&&Y<=50639||50641<=Y&&Y<=50667||50669<=Y&&Y<=50695||50697<=Y&&Y<=50723||50725<=Y&&Y<=50751||50753<=Y&&Y<=50779||50781<=Y&&Y<=50807||50809<=Y&&Y<=50835||50837<=Y&&Y<=50863||50865<=Y&&Y<=50891||50893<=Y&&Y<=50919||50921<=Y&&Y<=50947||50949<=Y&&Y<=50975||50977<=Y&&Y<=51003||51005<=Y&&Y<=51031||51033<=Y&&Y<=51059||51061<=Y&&Y<=51087||51089<=Y&&Y<=51115||51117<=Y&&Y<=51143||51145<=Y&&Y<=51171||51173<=Y&&Y<=51199||51201<=Y&&Y<=51227||51229<=Y&&Y<=51255||51257<=Y&&Y<=51283||51285<=Y&&Y<=51311||51313<=Y&&Y<=51339||51341<=Y&&Y<=51367||51369<=Y&&Y<=51395||51397<=Y&&Y<=51423||51425<=Y&&Y<=51451||51453<=Y&&Y<=51479||51481<=Y&&Y<=51507||51509<=Y&&Y<=51535||51537<=Y&&Y<=51563||51565<=Y&&Y<=51591||51593<=Y&&Y<=51619||51621<=Y&&Y<=51647||51649<=Y&&Y<=51675||51677<=Y&&Y<=51703||51705<=Y&&Y<=51731||51733<=Y&&Y<=51759||51761<=Y&&Y<=51787||51789<=Y&&Y<=51815||51817<=Y&&Y<=51843||51845<=Y&&Y<=51871||51873<=Y&&Y<=51899||51901<=Y&&Y<=51927||51929<=Y&&Y<=51955||51957<=Y&&Y<=51983||51985<=Y&&Y<=52011||52013<=Y&&Y<=52039||52041<=Y&&Y<=52067||52069<=Y&&Y<=52095||52097<=Y&&Y<=52123||52125<=Y&&Y<=52151||52153<=Y&&Y<=52179||52181<=Y&&Y<=52207||52209<=Y&&Y<=52235||52237<=Y&&Y<=52263||52265<=Y&&Y<=52291||52293<=Y&&Y<=52319||52321<=Y&&Y<=52347||52349<=Y&&Y<=52375||52377<=Y&&Y<=52403||52405<=Y&&Y<=52431||52433<=Y&&Y<=52459||52461<=Y&&Y<=52487||52489<=Y&&Y<=52515||52517<=Y&&Y<=52543||52545<=Y&&Y<=52571||52573<=Y&&Y<=52599||52601<=Y&&Y<=52627||52629<=Y&&Y<=52655||52657<=Y&&Y<=52683||52685<=Y&&Y<=52711||52713<=Y&&Y<=52739||52741<=Y&&Y<=52767||52769<=Y&&Y<=52795||52797<=Y&&Y<=52823||52825<=Y&&Y<=52851||52853<=Y&&Y<=52879||52881<=Y&&Y<=52907||52909<=Y&&Y<=52935||52937<=Y&&Y<=52963||52965<=Y&&Y<=52991||52993<=Y&&Y<=53019||53021<=Y&&Y<=53047||53049<=Y&&Y<=53075||53077<=Y&&Y<=53103||53105<=Y&&Y<=53131||53133<=Y&&Y<=53159||53161<=Y&&Y<=53187||53189<=Y&&Y<=53215||53217<=Y&&Y<=53243||53245<=Y&&Y<=53271||53273<=Y&&Y<=53299||53301<=Y&&Y<=53327||53329<=Y&&Y<=53355||53357<=Y&&Y<=53383||53385<=Y&&Y<=53411||53413<=Y&&Y<=53439||53441<=Y&&Y<=53467||53469<=Y&&Y<=53495||53497<=Y&&Y<=53523||53525<=Y&&Y<=53551||53553<=Y&&Y<=53579||53581<=Y&&Y<=53607||53609<=Y&&Y<=53635||53637<=Y&&Y<=53663||53665<=Y&&Y<=53691||53693<=Y&&Y<=53719||53721<=Y&&Y<=53747||53749<=Y&&Y<=53775||53777<=Y&&Y<=53803||53805<=Y&&Y<=53831||53833<=Y&&Y<=53859||53861<=Y&&Y<=53887||53889<=Y&&Y<=53915||53917<=Y&&Y<=53943||53945<=Y&&Y<=53971||53973<=Y&&Y<=53999||54001<=Y&&Y<=54027||54029<=Y&&Y<=54055||54057<=Y&&Y<=54083||54085<=Y&&Y<=54111||54113<=Y&&Y<=54139||54141<=Y&&Y<=54167||54169<=Y&&Y<=54195||54197<=Y&&Y<=54223||54225<=Y&&Y<=54251||54253<=Y&&Y<=54279||54281<=Y&&Y<=54307||54309<=Y&&Y<=54335||54337<=Y&&Y<=54363||54365<=Y&&Y<=54391||54393<=Y&&Y<=54419||54421<=Y&&Y<=54447||54449<=Y&&Y<=54475||54477<=Y&&Y<=54503||54505<=Y&&Y<=54531||54533<=Y&&Y<=54559||54561<=Y&&Y<=54587||54589<=Y&&Y<=54615||54617<=Y&&Y<=54643||54645<=Y&&Y<=54671||54673<=Y&&Y<=54699||54701<=Y&&Y<=54727||54729<=Y&&Y<=54755||54757<=Y&&Y<=54783||54785<=Y&&Y<=54811||54813<=Y&&Y<=54839||54841<=Y&&Y<=54867||54869<=Y&&Y<=54895||54897<=Y&&Y<=54923||54925<=Y&&Y<=54951||54953<=Y&&Y<=54979||54981<=Y&&Y<=55007||55009<=Y&&Y<=55035||55037<=Y&&Y<=55063||55065<=Y&&Y<=55091||55093<=Y&&Y<=55119||55121<=Y&&Y<=55147||55149<=Y&&Y<=55175||55177<=Y&&Y<=55203?F:Y==9757||Y==9977||9994<=Y&&Y<=9997||Y==127877||127938<=Y&&Y<=127940||Y==127943||127946<=Y&&Y<=127948||128066<=Y&&Y<=128067||128070<=Y&&Y<=128080||Y==128110||128112<=Y&&Y<=128120||Y==128124||128129<=Y&&Y<=128131||128133<=Y&&Y<=128135||Y==128170||128372<=Y&&Y<=128373||Y==128378||Y==128400||128405<=Y&&Y<=128406||128581<=Y&&Y<=128583||128587<=Y&&Y<=128591||Y==128675||128692<=Y&&Y<=128694||Y==128704||Y==128716||129304<=Y&&Y<=129308||129310<=Y&&Y<=129311||Y==129318||129328<=Y&&Y<=129337||129341<=Y&&Y<=129342||129489<=Y&&Y<=129501?k:127995<=Y&&Y<=127999?r:Y==8205?Q:Y==9792||Y==9794||9877<=Y&&Y<=9878||Y==9992||Y==10084||Y==127752||Y==127806||Y==127859||Y==127891||Y==127908||Y==127912||Y==127979||Y==127981||Y==128139||128187<=Y&&Y<=128188||Y==128295||Y==128300||Y==128488||Y==128640||Y==128658?p:128102<=Y&&Y<=128105?T:d}return this}typeof $A<"u"&&$A.exports&&($A.exports=jE)});function fA(){U.throwInstantiationError()}Object.defineProperties(fA.prototype,{name:{get:U.throwInstantiationError},clock:{get:U.throwInstantiationError},entities:{get:U.throwInstantiationError},isLoading:{get:U.throwInstantiationError},changedEvent:{get:U.throwInstantiationError},errorEvent:{get:U.throwInstantiationError},loadingEvent:{get:U.throwInstantiationError},show:{get:U.throwInstantiationError},clustering:{get:U.throwInstantiationError}});fA.prototype.update=function(Z){U.throwInstantiationError()};fA.setLoading=function(Z,m){Z._isLoading!==m&&(m?Z._entityCollection.suspendEvents():Z._entityCollection.resumeEvents(),Z._isLoading=m,Z._loading.raiseEvent(Z,m))};var KW=fA;function Dr(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(Z){let m=Math.random()*16|0;return(Z==="x"?m:m&3|8).toString(16)})}var Km=Dr;function Bh(Z,m){Z=l(Z,0),this._near=Z,m=l(m,Number.MAX_VALUE),this._far=m}Object.defineProperties(Bh.prototype,{near:{get:function(){return this._near},set:function(Z){this._near=Z}},far:{get:function(){return this._far},set:function(Z){this._far=Z}}});Bh.packedLength=2;Bh.pack=function(Z,m,h){if(!V(Z))throw new U("value is required");if(!V(m))throw new U("array is required");return h=l(h,0),m[h++]=Z.near,m[h]=Z.far,m};Bh.unpack=function(Z,m,h){if(!V(Z))throw new U("array is required");return m=l(m,0),V(h)||(h=new Bh),h.near=Z[m++],h.far=Z[m],h};Bh.equals=function(Z,m){return Z===m||V(Z)&&V(m)&&Z.near===m.near&&Z.far===m.far};Bh.clone=function(Z,m){if(V(Z))return V(m)||(m=new Bh),m.near=Z.near,m.far=Z.far,m};Bh.prototype.clone=function(Z){return Bh.clone(this,Z)};Bh.prototype.equals=function(Z){return Bh.equals(this,Z)};var dh=Bh;function Sh(Z,m,h,n){this.near=l(Z,0),this.nearValue=l(m,0),this.far=l(h,1),this.farValue=l(n,0)}Sh.clone=function(Z,m){if(V(Z))return V(m)?(m.near=Z.near,m.nearValue=Z.nearValue,m.far=Z.far,m.farValue=Z.farValue,m):new Sh(Z.near,Z.nearValue,Z.far,Z.farValue)};Sh.packedLength=4;Sh.pack=function(Z,m,h){if(!V(Z))throw new U("value is required");if(!V(m))throw new U("array is required");return h=l(h,0),m[h++]=Z.near,m[h++]=Z.nearValue,m[h++]=Z.far,m[h]=Z.farValue,m};Sh.unpack=function(Z,m,h){if(!V(Z))throw new U("array is required");return m=l(m,0),V(h)||(h=new Sh),h.near=Z[m++],h.nearValue=Z[m++],h.far=Z[m++],h.farValue=Z[m],h};Sh.equals=function(Z,m){return Z===m||V(Z)&&V(m)&&Z.near===m.near&&Z.nearValue===m.nearValue&&Z.far===m.far&&Z.farValue===m.farValue};Sh.prototype.clone=function(Z){return Sh.clone(this,Z)};Sh.prototype.equals=function(Z){return Sh.equals(this,Z)};var bZ=Sh;var fr={NONE:0,CLAMP_TO_GROUND:1,RELATIVE_TO_GROUND:2},hh=Object.freeze(fr);var ur={CENTER:0,LEFT:1,RIGHT:-1},ah=Object.freeze(ur);var uA={MORPHING:0,COLUMBUS_VIEW:1,SCENE2D:2,SCENE3D:3};uA.getMorphTime=function(Z){return Z===uA.SCENE3D?1:Z===uA.MORPHING?void 0:0};var UZ=Object.freeze(uA);var th={},br=new CZ(0,0,0,1),oh=new CZ,xr=new qZ,Ha=new q,za=new q;th.wgs84ToWindowCoordinates=function(Z,m,h){return th.wgs84WithEyeOffsetToWindowCoordinates(Z,m,_.ZERO,h)};var qW=new CZ,$W=new _;function Ui(Z,m,h,n){let i=h.viewMatrix,A=eZ.multiplyByVector(i,CZ.fromElements(Z.x,Z.y,Z.z,1,qW),qW),t=_.multiplyComponents(m,_.normalize(A,$W),$W);return A.x+=m.x+t.x,A.y+=m.y+t.y,A.z+=t.z,eZ.multiplyByVector(h.frustum.projectionMatrix,A,n)}var _r=new nm(Math.PI,gZ.PI_OVER_TWO),Or=new _,wr=new _;th.wgs84WithEyeOffsetToWindowCoordinates=function(Z,m,h,n){if(!V(Z))throw new U("scene is required.");if(!V(m))throw new U("position is required.");let i=Z.frameState,A=th.computeActualWgs84Position(i,m,br);if(!V(A))return;let t=Z.canvas,W=xr;W.x=0,W.y=0,W.width=t.clientWidth,W.height=t.clientHeight;let e=Z.camera,G=!1;if(i.mode===UZ.SCENE2D){let F=Z.mapProjection,d=_r,J=F.project(d,Or),k=_.clone(e.position,wr),r=e.frustum.clone(),Q=eZ.computeViewportTransformation(W,0,1,new eZ),p=e.frustum.projectionMatrix,T=e.positionWC.y,I=_.fromElements(gZ.sign(T)*J.x-T,0,-e.positionWC.x),f=kh.pointToGLWindowCoordinates(p,Q,I);if(T===0||f.x<=0||f.x>=t.clientWidth)G=!0;else{if(f.x>t.clientWidth*.5){W.width=f.x,e.frustum.right=J.x-T,oh=Ui(A,h,e,oh),th.clipToGLWindowCoordinates(W,oh,Ha),W.x+=f.x,e.position.x=-e.position.x;let b=e.frustum.right;e.frustum.right=-e.frustum.left,e.frustum.left=-b,oh=Ui(A,h,e,oh),th.clipToGLWindowCoordinates(W,oh,za)}else{W.x+=f.x,W.width-=f.x,e.frustum.left=-J.x-T,oh=Ui(A,h,e,oh),th.clipToGLWindowCoordinates(W,oh,Ha),W.x=W.x-W.width,e.position.x=-e.position.x;let b=e.frustum.left;e.frustum.left=-e.frustum.right,e.frustum.right=-b,oh=Ui(A,h,e,oh),th.clipToGLWindowCoordinates(W,oh,za)}_.clone(k,e.position),e.frustum=r.clone(),n=q.clone(Ha,n),(n.x<0||n.x>t.clientWidth)&&(n.x=za.x)}}if(i.mode!==UZ.SCENE2D||G){if(oh=Ui(A,h,e,oh),oh.z<0&&!(e.frustum instanceof yW)&&!(e.frustum instanceof wW))return;n=th.clipToGLWindowCoordinates(W,oh,n)}return n.y=t.clientHeight-n.y,n};th.wgs84ToDrawingBufferCoordinates=function(Z,m,h){if(h=th.wgs84ToWindowCoordinates(Z,m,h),!!V(h))return th.transformWindowToDrawingBuffer(Z,h,h)};var gY=new _,yr=new nm;th.computeActualWgs84Position=function(Z,m,h){let n=Z.mode;if(n===UZ.SCENE3D)return _.clone(m,h);let i=Z.mapProjection,A=i.ellipsoid.cartesianToCartographic(m,yr);if(!V(A))return;if(i.project(A,gY),n===UZ.COLUMBUS_VIEW)return _.fromElements(gY.z,gY.x,gY.y,h);if(n===UZ.SCENE2D)return _.fromElements(0,gY.x,gY.y,h);let t=Z.morphTime;return _.fromElements(gZ.lerp(gY.z,m.x,t),gZ.lerp(gY.x,m.y,t),gZ.lerp(gY.y,m.z,t),h)};var Ze=new _,me=new _,he=new eZ;th.clipToGLWindowCoordinates=function(Z,m,h){return _.divideByScalar(m,m.w,Ze),eZ.computeViewportTransformation(Z,0,1,he),eZ.multiplyByPoint(he,Ze,me),q.fromCartesian3(me,h)};th.transformWindowToDrawingBuffer=function(Z,m,h){let n=Z.canvas,i=Z.drawingBufferWidth/n.clientWidth,A=Z.drawingBufferHeight/n.clientHeight;return q.fromElements(m.x*i,m.y*A,h)};var Hr=new CZ,Ye=new CZ;th.drawingBufferToWgs84Coordinates=function(Z,m,h,n){let A=Z.context.uniformState,t=A.currentFrustum,W=t.x,e=t.y;if(Z.frameState.useLogDepth){let k=h*A.log2FarDepthFromNearPlusOne,r=Math.pow(2,k)-1;h=e*(1-W/(r+W))/(e-W)}let G=Z.view.passState.viewport,F=CZ.clone(CZ.UNIT_W,Hr);F.x=(m.x-G.x)/G.width*2-1,F.y=(m.y-G.y)/G.height*2-1,F.z=h*2-1,F.w=1;let d,J=Z.camera.frustum;if(V(J.fovy)){d=eZ.multiplyByVector(A.inverseViewProjection,F,Ye);let k=1/d.w;_.multiplyByScalar(d,k,d)}else{let k=J.offCenterFrustum;V(k)&&(J=k),d=Ye,d.x=(F.x*(J.right-J.left)+J.left+J.right)*.5,d.y=(F.y*(J.top-J.bottom)+J.bottom+J.top)*.5,d.z=(F.z*(W-e)-W-e)*.5,d.w=1,d=eZ.multiplyByVector(A.inverseView,d,d)}return _.fromCartesian4(d,n)};var On=th;var zr={CENTER:0,BOTTOM:1,BASELINE:2,TOP:-1},im=Object.freeze(zr);function xZ(Z,m){if(Z=l(Z,l.EMPTY_OBJECT),V(Z.disableDepthTestDistance)&&Z.disableDepthTestDistance<0)throw new U("disableDepthTestDistance must be greater than or equal to 0.0.");let h=Z.translucencyByDistance,n=Z.pixelOffsetScaleByDistance,i=Z.scaleByDistance,A=Z.distanceDisplayCondition;if(V(h)){if(h.far<=h.near)throw new U("translucencyByDistance.far must be greater than translucencyByDistance.near.");h=bZ.clone(h)}if(V(n)){if(n.far<=n.near)throw new U("pixelOffsetScaleByDistance.far must be greater than pixelOffsetScaleByDistance.near.");n=bZ.clone(n)}if(V(i)){if(i.far<=i.near)throw new U("scaleByDistance.far must be greater than scaleByDistance.near.");i=bZ.clone(i)}if(V(A)){if(A.far<=A.near)throw new U("distanceDisplayCondition.far must be greater than distanceDisplayCondition.near.");A=dh.clone(A)}this._show=l(Z.show,!0),this._position=_.clone(l(Z.position,_.ZERO)),this._actualPosition=_.clone(this._position),this._pixelOffset=q.clone(l(Z.pixelOffset,q.ZERO)),this._translate=new q(0,0),this._eyeOffset=_.clone(l(Z.eyeOffset,_.ZERO)),this._heightReference=l(Z.heightReference,hh.NONE),this._verticalOrigin=l(Z.verticalOrigin,im.CENTER),this._horizontalOrigin=l(Z.horizontalOrigin,ah.CENTER),this._scale=l(Z.scale,1),this._color=H.clone(l(Z.color,H.WHITE)),this._rotation=l(Z.rotation,0),this._alignedAxis=_.clone(l(Z.alignedAxis,_.ZERO)),this._width=Z.width,this._height=Z.height,this._scaleByDistance=i,this._translucencyByDistance=h,this._pixelOffsetScaleByDistance=n,this._sizeInMeters=l(Z.sizeInMeters,!1),this._distanceDisplayCondition=A,this._disableDepthTestDistance=Z.disableDepthTestDistance,this._id=Z.id,this._collection=l(Z.collection,m),this._pickId=void 0,this._pickPrimitive=l(Z._pickPrimitive,this),this._billboardCollection=m,this._dirty=!1,this._index=-1,this._batchIndex=void 0,this._imageIndex=-1,this._imageIndexPromise=void 0,this._imageId=void 0,this._image=void 0,this._imageSubRegion=void 0,this._imageWidth=void 0,this._imageHeight=void 0,this._labelDimensions=void 0,this._labelHorizontalOrigin=void 0,this._labelTranslate=void 0;let t=Z.image,W=Z.imageId;V(t)&&(V(W)||(typeof t=="string"?W=t:V(t.src)?W=t.src:W=Km()),this._imageId=W,this._image=t),V(Z.imageSubRegion)&&(this._imageId=W,this._imageSubRegion=Z.imageSubRegion),V(this._billboardCollection._textureAtlas)&&this._loadImage(),this._actualClampedPosition=void 0,this._removeCallbackFunc=void 0,this._mode=UZ.SCENE3D,this._clusterShow=!0,this._outlineColor=H.clone(l(Z.outlineColor,H.BLACK)),this._outlineWidth=l(Z.outlineWidth,0),this._updateClamping()}var ne=xZ.SHOW_INDEX=0,xA=xZ.POSITION_INDEX=1,We=xZ.PIXEL_OFFSET_INDEX=2,Xr=xZ.EYE_OFFSET_INDEX=3,Lr=xZ.HORIZONTAL_ORIGIN_INDEX=4,vr=xZ.VERTICAL_ORIGIN_INDEX=5,Pr=xZ.SCALE_INDEX=6,_A=xZ.IMAGE_INDEX_INDEX=7,ie=xZ.COLOR_INDEX=8,Kr=xZ.ROTATION_INDEX=9,qr=xZ.ALIGNED_AXIS_INDEX=10,$r=xZ.SCALE_BY_DISTANCE_INDEX=11,ZN=xZ.TRANSLUCENCY_BY_DISTANCE_INDEX=12,mN=xZ.PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX=13,hN=xZ.DISTANCE_DISPLAY_CONDITION=14,YN=xZ.DISABLE_DEPTH_DISTANCE=15;xZ.TEXTURE_COORDINATE_BOUNDS=16;var Ae=xZ.SDF_INDEX=17;xZ.NUMBER_OF_PROPERTIES=18;function om(Z,m){let h=Z._billboardCollection;V(h)&&(h._updateBillboard(Z,m),Z._dirty=!0)}Object.defineProperties(xZ.prototype,{show:{get:function(){return this._show},set:function(Z){y.typeOf.bool("value",Z),this._show!==Z&&(this._show=Z,om(this,ne))}},position:{get:function(){return this._position},set:function(Z){y.typeOf.object("value",Z);let m=this._position;_.equals(m,Z)||(_.clone(Z,m),_.clone(Z,this._actualPosition),this._updateClamping(),om(this,xA))}},heightReference:{get:function(){return this._heightReference},set:function(Z){y.typeOf.number("value",Z);let m=this._heightReference;Z!==m&&(this._heightReference=Z,this._updateClamping(),om(this,xA))}},pixelOffset:{get:function(){return this._pixelOffset},set:function(Z){y.typeOf.object("value",Z);let m=this._pixelOffset;q.equals(m,Z)||(q.clone(Z,m),om(this,We))}},scaleByDistance:{get:function(){return this._scaleByDistance},set:function(Z){if(V(Z)&&(y.typeOf.object("value",Z),Z.far<=Z.near))throw new U("far distance must be greater than near distance.");let m=this._scaleByDistance;bZ.equals(m,Z)||(this._scaleByDistance=bZ.clone(Z,m),om(this,$r))}},translucencyByDistance:{get:function(){return this._translucencyByDistance},set:function(Z){if(V(Z)&&(y.typeOf.object("value",Z),Z.far<=Z.near))throw new U("far distance must be greater than near distance.");let m=this._translucencyByDistance;bZ.equals(m,Z)||(this._translucencyByDistance=bZ.clone(Z,m),om(this,ZN))}},pixelOffsetScaleByDistance:{get:function(){return this._pixelOffsetScaleByDistance},set:function(Z){if(V(Z)&&(y.typeOf.object("value",Z),Z.far<=Z.near))throw new U("far distance must be greater than near distance.");let m=this._pixelOffsetScaleByDistance;bZ.equals(m,Z)||(this._pixelOffsetScaleByDistance=bZ.clone(Z,m),om(this,mN))}},eyeOffset:{get:function(){return this._eyeOffset},set:function(Z){y.typeOf.object("value",Z);let m=this._eyeOffset;_.equals(m,Z)||(_.clone(Z,m),om(this,Xr))}},horizontalOrigin:{get:function(){return this._horizontalOrigin},set:function(Z){y.typeOf.number("value",Z),this._horizontalOrigin!==Z&&(this._horizontalOrigin=Z,om(this,Lr))}},verticalOrigin:{get:function(){return this._verticalOrigin},set:function(Z){y.typeOf.number("value",Z),this._verticalOrigin!==Z&&(this._verticalOrigin=Z,om(this,vr))}},scale:{get:function(){return this._scale},set:function(Z){y.typeOf.number("value",Z),this._scale!==Z&&(this._scale=Z,om(this,Pr))}},color:{get:function(){return this._color},set:function(Z){y.typeOf.object("value",Z);let m=this._color;H.equals(m,Z)||(H.clone(Z,m),om(this,ie))}},rotation:{get:function(){return this._rotation},set:function(Z){y.typeOf.number("value",Z),this._rotation!==Z&&(this._rotation=Z,om(this,Kr))}},alignedAxis:{get:function(){return this._alignedAxis},set:function(Z){y.typeOf.object("value",Z);let m=this._alignedAxis;_.equals(m,Z)||(_.clone(Z,m),om(this,qr))}},width:{get:function(){return l(this._width,this._imageWidth)},set:function(Z){V(Z)&&y.typeOf.number("value",Z),this._width!==Z&&(this._width=Z,om(this,_A))}},height:{get:function(){return l(this._height,this._imageHeight)},set:function(Z){V(Z)&&y.typeOf.number("value",Z),this._height!==Z&&(this._height=Z,om(this,_A))}},sizeInMeters:{get:function(){return this._sizeInMeters},set:function(Z){y.typeOf.bool("value",Z),this._sizeInMeters!==Z&&(this._sizeInMeters=Z,om(this,ie))}},distanceDisplayCondition:{get:function(){return this._distanceDisplayCondition},set:function(Z){if(!dh.equals(Z,this._distanceDisplayCondition)){if(V(Z)&&(y.typeOf.object("value",Z),Z.far<=Z.near))throw new U("far distance must be greater than near distance.");this._distanceDisplayCondition=dh.clone(Z,this._distanceDisplayCondition),om(this,hN)}}},disableDepthTestDistance:{get:function(){return this._disableDepthTestDistance},set:function(Z){if(V(Z)&&(y.typeOf.number("value",Z),Z<0))throw new U("disableDepthTestDistance must be greater than or equal to 0.0.");this._disableDepthTestDistance!==Z&&(this._disableDepthTestDistance=Z,om(this,YN))}},id:{get:function(){return this._id},set:function(Z){this._id=Z,V(this._pickId)&&(this._pickId.object.id=Z)}},pickPrimitive:{get:function(){return this._pickPrimitive},set:function(Z){this._pickPrimitive=Z,V(this._pickId)&&(this._pickId.object.primitive=Z)}},pickId:{get:function(){return this._pickId}},image:{get:function(){return this._imageId},set:function(Z){V(Z)?typeof Z=="string"?this.setImage(Z,Z):Z instanceof Dm?this.setImage(Z.url,Z):V(Z.src)?this.setImage(Z.src,Z):this.setImage(Km(),Z):(this._imageIndex=-1,this._imageSubRegion=void 0,this._imageId=void 0,this._image=void 0,this._imageIndexPromise=void 0,om(this,_A))}},ready:{get:function(){return this._imageIndex!==-1}},_clampedPosition:{get:function(){return this._actualClampedPosition},set:function(Z){this._actualClampedPosition=_.clone(Z,this._actualClampedPosition),om(this,xA)}},clusterShow:{get:function(){return this._clusterShow},set:function(Z){this._clusterShow!==Z&&(this._clusterShow=Z,om(this,ne))}},outlineColor:{get:function(){return this._outlineColor},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._outlineColor;H.equals(m,Z)||(H.clone(Z,m),om(this,Ae))}},outlineWidth:{get:function(){return this._outlineWidth},set:function(Z){this._outlineWidth!==Z&&(this._outlineWidth=Z,om(this,Ae))}}});xZ.prototype.getPickId=function(Z){return V(this._pickId)||(this._pickId=Z.createPickId({primitive:this._pickPrimitive,collection:this._collection,id:this._id})),this._pickId};xZ.prototype._updateClamping=function(){xZ._updateClamping(this._billboardCollection,this)};var Ji=new nm,ae=new _;xZ._updateClamping=function(Z,m){let h=Z._scene;if(!V(h)||!V(h.globe)){if(m._heightReference!==hh.NONE)throw new U("Height reference is not supported without a scene and globe.");return}let n=h.globe,i=n.ellipsoid,A=n._surface,t=h.frameState.mode,W=t!==m._mode;if(m._mode=t,(m._heightReference===hh.NONE||W)&&V(m._removeCallbackFunc)&&(m._removeCallbackFunc(),m._removeCallbackFunc=void 0,m._clampedPosition=void 0),m._heightReference===hh.NONE||!V(m._position))return;let e=i.cartesianToCartographic(m._position);if(!V(e)){m._actualClampedPosition=void 0;return}V(m._removeCallbackFunc)&&m._removeCallbackFunc();function G(d){if(m._heightReference===hh.RELATIVE_TO_GROUND)if(m._mode===UZ.SCENE3D){let J=i.cartesianToCartographic(d,Ji);J.height+=e.height,i.cartographicToCartesian(J,d)}else d.x+=e.height;m._clampedPosition=_.clone(d,m._clampedPosition)}m._removeCallbackFunc=A.updateHeight(e,G),nm.clone(e,Ji);let F=n.getHeight(e);V(F)&&(Ji.height=F),i.cartographicToCartesian(Ji,ae),G(ae)};xZ.prototype._loadImage=function(){let Z=this._billboardCollection._textureAtlas,m=this._imageId,h=this._image,n=this._imageSubRegion,i,A=this;function t(e){if(A._imageId!==m||A._image!==h||!qZ.equals(A._imageSubRegion,n))return;let G=Z.textureCoordinates[e];A._imageWidth=Z.texture.width*G.width,A._imageHeight=Z.texture.height*G.height,A._imageIndex=e,A._ready=!0,A._image=void 0,A._imageIndexPromise=void 0,om(A,_A);let F=A._billboardCollection._scene;V(F)&&F.frameState.afterRender.push(()=>!0)}if(V(h)&&(i=Z.addImage(m,h)),V(n)&&(i=Z.addSubRegion(m,n)),this._imageIndexPromise=i,!V(i))return;let W=Z.getImageIndex(m);if(V(W)&&!V(n)){t(W);return}i.then(t).catch(function(e){console.error(`Error loading image for billboard: ${e}`),A._imageIndexPromise=void 0})};xZ.prototype.setImage=function(Z,m){if(!V(Z))throw new U("id is required.");if(!V(m))throw new U("image is required.");this._imageId!==Z&&(this._imageIndex=-1,this._imageSubRegion=void 0,this._imageId=Z,this._image=m,V(this._billboardCollection._textureAtlas)&&this._loadImage())};xZ.prototype.setImageSubRegion=function(Z,m){if(!V(Z))throw new U("id is required.");if(!V(m))throw new U("subRegion is required.");this._imageId===Z&&qZ.equals(this._imageSubRegion,m)||(this._imageIndex=-1,this._imageId=Z,this._imageSubRegion=qZ.clone(m),V(this._billboardCollection._textureAtlas)&&this._loadImage())};xZ.prototype._setTranslate=function(Z){if(!V(Z))throw new U("value is required.");let m=this._translate;q.equals(m,Z)||(q.clone(Z,m),om(this,We))};xZ.prototype._getActualPosition=function(){return V(this._clampedPosition)?this._clampedPosition:this._actualPosition};xZ.prototype._setActualPosition=function(Z){V(this._clampedPosition)||_.clone(Z,this._actualPosition),om(this,xA)};var te=new CZ;xZ._computeActualPosition=function(Z,m,h,n){return V(Z._clampedPosition)?(h.mode!==Z._mode&&Z._updateClamping(),Z._clampedPosition):h.mode===UZ.SCENE3D?m:(eZ.multiplyByPoint(n,m,te),On.computeActualWgs84Position(h,te))};var ee=new _;xZ._computeScreenSpacePosition=function(Z,m,h,n,i,A){let t=eZ.multiplyByPoint(Z,m,ee),W=On.wgs84WithEyeOffsetToWindowCoordinates(i,t,h,A);if(V(W))return q.add(W,n,W),W};var bA=new q(0,0);xZ.prototype.computeScreenSpacePosition=function(Z,m){let h=this._billboardCollection;if(V(m)||(m=new q),!V(h))throw new U("Billboard must be in a collection.  Was it removed?");if(!V(Z))throw new U("scene is required.");q.clone(this._pixelOffset,bA),q.add(bA,this._translate,bA);let n=h.modelMatrix,i=this._position;if(V(this._clampedPosition)&&(i=this._clampedPosition,Z.mode!==UZ.SCENE3D)){let t=Z.mapProjection,W=t.ellipsoid,e=t.unproject(i,Ji);i=W.cartographicToCartesian(e,ee),n=eZ.IDENTITY}return xZ._computeScreenSpacePosition(n,i,this._eyeOffset,bA,Z,m)};xZ.getScreenSpaceBoundingBox=function(Z,m,h){let n=Z.width,i=Z.height,A=Z.scale;n*=A,i*=A;let t=m.x;Z.horizontalOrigin===ah.RIGHT?t-=n:Z.horizontalOrigin===ah.CENTER&&(t-=n*.5);let W=m.y;return Z.verticalOrigin===im.BOTTOM||Z.verticalOrigin===im.BASELINE?W-=i:Z.verticalOrigin===im.CENTER&&(W-=i*.5),V(h)||(h=new qZ),h.x=t,h.y=W,h.width=n,h.height=i,h};xZ.prototype.equals=function(Z){return this===Z||V(Z)&&this._id===Z._id&&_.equals(this._position,Z._position)&&this._imageId===Z._imageId&&this._show===Z._show&&this._scale===Z._scale&&this._verticalOrigin===Z._verticalOrigin&&this._horizontalOrigin===Z._horizontalOrigin&&this._heightReference===Z._heightReference&&qZ.equals(this._imageSubRegion,Z._imageSubRegion)&&H.equals(this._color,Z._color)&&q.equals(this._pixelOffset,Z._pixelOffset)&&q.equals(this._translate,Z._translate)&&_.equals(this._eyeOffset,Z._eyeOffset)&&bZ.equals(this._scaleByDistance,Z._scaleByDistance)&&bZ.equals(this._translucencyByDistance,Z._translucencyByDistance)&&bZ.equals(this._pixelOffsetScaleByDistance,Z._pixelOffsetScaleByDistance)&&dh.equals(this._distanceDisplayCondition,Z._distanceDisplayCondition)&&this._disableDepthTestDistance===Z._disableDepthTestDistance};xZ.prototype._destroy=function(){V(this._customData)&&(this._billboardCollection._scene.globe._surface.removeTileCustomData(this._customData),this._customData=void 0),V(this._removeCallbackFunc)&&(this._removeCallbackFunc(),this._removeCallbackFunc=void 0),this.image=void 0,this._pickId=this._pickId&&this._pickId.destroy(),this._billboardCollection=void 0};var em=xZ;function nN(){return!0}function iN(Z,m){m=l(m,"This object was destroyed, i.e., destroy() was called.");function h(){throw new U(m)}for(let n in Z)typeof Z[n]=="function"&&(Z[n]=h);Z.isDestroyed=nN}var cZ=iN;var OA={STREAM_DRAW:S.STREAM_DRAW,STATIC_DRAW:S.STATIC_DRAW,DYNAMIC_DRAW:S.DYNAMIC_DRAW,validate:function(Z){return Z===OA.STREAM_DRAW||Z===OA.STATIC_DRAW||Z===OA.DYNAMIC_DRAW}},jZ=Object.freeze(OA);function Dh(Z){if(Z=l(Z,l.EMPTY_OBJECT),y.defined("options.context",Z.context),!V(Z.typedArray)&&!V(Z.sizeInBytes))throw new U("Either options.sizeInBytes or options.typedArray is required.");if(V(Z.typedArray)&&V(Z.sizeInBytes))throw new U("Cannot pass in both options.sizeInBytes and options.typedArray.");if(V(Z.typedArray)&&(y.typeOf.object("options.typedArray",Z.typedArray),y.typeOf.number("options.typedArray.byteLength",Z.typedArray.byteLength)),!jZ.validate(Z.usage))throw new U("usage is invalid.");let m=Z.context._gl,h=Z.bufferTarget,n=Z.typedArray,i=Z.sizeInBytes,A=Z.usage,t=V(n);t&&(i=n.byteLength),y.typeOf.number.greaterThan("sizeInBytes",i,0);let W=m.createBuffer();m.bindBuffer(h,W),m.bufferData(h,t?n:i,A),m.bindBuffer(h,null),this._id=Km(),this._gl=m,this._webgl2=Z.context._webgl2,this._bufferTarget=h,this._sizeInBytes=i,this._usage=A,this._buffer=W,this.vertexArrayDestroyable=!0}Dh.createVertexBuffer=function(Z){return y.defined("options.context",Z.context),new Dh({context:Z.context,bufferTarget:S.ARRAY_BUFFER,typedArray:Z.typedArray,sizeInBytes:Z.sizeInBytes,usage:Z.usage})};Dh.createIndexBuffer=function(Z){if(y.defined("options.context",Z.context),!RY.validate(Z.indexDatatype))throw new U("Invalid indexDatatype.");if(Z.indexDatatype===RY.UNSIGNED_INT&&!Z.context.elementIndexUint)throw new U("IndexDatatype.UNSIGNED_INT requires OES_element_index_uint, which is not supported on this system.  Check context.elementIndexUint.");let m=Z.context,h=Z.indexDatatype,n=RY.getSizeInBytes(h),i=new Dh({context:m,bufferTarget:S.ELEMENT_ARRAY_BUFFER,typedArray:Z.typedArray,sizeInBytes:Z.sizeInBytes,usage:Z.usage}),A=i.sizeInBytes/n;return Object.defineProperties(i,{indexDatatype:{get:function(){return h}},bytesPerIndex:{get:function(){return n}},numberOfIndices:{get:function(){return A}}}),i};Object.defineProperties(Dh.prototype,{sizeInBytes:{get:function(){return this._sizeInBytes}},usage:{get:function(){return this._usage}}});Dh.prototype._getBuffer=function(){return this._buffer};Dh.prototype.copyFromArrayView=function(Z,m){m=l(m,0),y.defined("arrayView",Z),y.typeOf.number.lessThanOrEquals("offsetInBytes + arrayView.byteLength",m+Z.byteLength,this._sizeInBytes);let h=this._gl,n=this._bufferTarget;h.bindBuffer(n,this._buffer),h.bufferSubData(n,m,Z),h.bindBuffer(n,null)};Dh.prototype.copyFromBuffer=function(Z,m,h,n){if(!this._webgl2)throw new U("A WebGL 2 context is required.");if(!V(Z))throw new U("readBuffer must be defined.");if(!V(n)||n<=0)throw new U("sizeInBytes must be defined and be greater than zero.");if(!V(m)||m<0||m+n>Z._sizeInBytes)throw new U("readOffset must be greater than or equal to zero and readOffset + sizeInBytes must be less than of equal to readBuffer.sizeInBytes.");if(!V(h)||h<0||h+n>this._sizeInBytes)throw new U("writeOffset must be greater than or equal to zero and writeOffset + sizeInBytes must be less than of equal to this.sizeInBytes.");if(this._buffer===Z._buffer&&(h>=m&&h<m+n||m>h&&m<h+n))throw new U("When readBuffer is equal to this, the ranges [readOffset + sizeInBytes) and [writeOffset, writeOffset + sizeInBytes) must not overlap.");if(this._bufferTarget===S.ELEMENT_ARRAY_BUFFER&&Z._bufferTarget!==S.ELEMENT_ARRAY_BUFFER||this._bufferTarget!==S.ELEMENT_ARRAY_BUFFER&&Z._bufferTarget===S.ELEMENT_ARRAY_BUFFER)throw new U("Can not copy an index buffer into another buffer type.");let i=S.COPY_READ_BUFFER,A=S.COPY_WRITE_BUFFER,t=this._gl;t.bindBuffer(A,this._buffer),t.bindBuffer(i,Z._buffer),t.copyBufferSubData(i,A,m,h,n),t.bindBuffer(A,null),t.bindBuffer(i,null)};Dh.prototype.getBufferData=function(Z,m,h,n){if(m=l(m,0),h=l(h,0),!this._webgl2)throw new U("A WebGL 2 context is required.");if(!V(Z))throw new U("arrayView is required.");let i,A,t=Z.byteLength;if(V(n)?(i=n,V(t)?A=1:(t=Z.length,A=Z.BYTES_PER_ELEMENT)):V(t)?(i=t-h,A=1):(t=Z.length,i=t-h,A=Z.BYTES_PER_ELEMENT),h<0||h>t)throw new U("destinationOffset must be greater than zero and less than the arrayView length.");if(h+i>t)throw new U("destinationOffset + length must be less than or equal to the arrayViewLength.");if(m<0||m>this._sizeInBytes)throw new U("sourceOffset must be greater than zero and less than the buffers size.");if(m+i*A>this._sizeInBytes)throw new U("sourceOffset + length must be less than the buffers size.");let W=this._gl,e=S.COPY_READ_BUFFER;W.bindBuffer(e,this._buffer),W.getBufferSubData(e,m,Z,h,n),W.bindBuffer(e,null)};Dh.prototype.isDestroyed=function(){return!1};Dh.prototype.destroy=function(){return this._gl.deleteBuffer(this._buffer),cZ(this)};var $h=Dh;var km={_maximumCombinedTextureImageUnits:0,_maximumCubeMapSize:0,_maximumFragmentUniformVectors:0,_maximumTextureImageUnits:0,_maximumRenderbufferSize:0,_maximumTextureSize:0,_maximumVaryingVectors:0,_maximumVertexAttributes:0,_maximumVertexTextureImageUnits:0,_maximumVertexUniformVectors:0,_minimumAliasedLineWidth:0,_maximumAliasedLineWidth:0,_minimumAliasedPointSize:0,_maximumAliasedPointSize:0,_maximumViewportWidth:0,_maximumViewportHeight:0,_maximumTextureFilterAnisotropy:0,_maximumDrawBuffers:0,_maximumColorAttachments:0,_maximumSamples:0,_highpFloatSupported:!1,_highpIntSupported:!1};Object.defineProperties(km,{maximumCombinedTextureImageUnits:{get:function(){return km._maximumCombinedTextureImageUnits}},maximumCubeMapSize:{get:function(){return km._maximumCubeMapSize}},maximumFragmentUniformVectors:{get:function(){return km._maximumFragmentUniformVectors}},maximumTextureImageUnits:{get:function(){return km._maximumTextureImageUnits}},maximumRenderbufferSize:{get:function(){return km._maximumRenderbufferSize}},maximumTextureSize:{get:function(){return km._maximumTextureSize}},maximumVaryingVectors:{get:function(){return km._maximumVaryingVectors}},maximumVertexAttributes:{get:function(){return km._maximumVertexAttributes}},maximumVertexTextureImageUnits:{get:function(){return km._maximumVertexTextureImageUnits}},maximumVertexUniformVectors:{get:function(){return km._maximumVertexUniformVectors}},minimumAliasedLineWidth:{get:function(){return km._minimumAliasedLineWidth}},maximumAliasedLineWidth:{get:function(){return km._maximumAliasedLineWidth}},minimumAliasedPointSize:{get:function(){return km._minimumAliasedPointSize}},maximumAliasedPointSize:{get:function(){return km._maximumAliasedPointSize}},maximumViewportWidth:{get:function(){return km._maximumViewportWidth}},maximumViewportHeight:{get:function(){return km._maximumViewportHeight}},maximumTextureFilterAnisotropy:{get:function(){return km._maximumTextureFilterAnisotropy}},maximumDrawBuffers:{get:function(){return km._maximumDrawBuffers}},maximumColorAttachments:{get:function(){return km._maximumColorAttachments}},maximumSamples:{get:function(){return km._maximumSamples}},highpFloatSupported:{get:function(){return km._highpFloatSupported}},highpIntSupported:{get:function(){return km._highpIntSupported}}});var $Z=km;var Um={CULL:1,OCCLUDE:2,EXECUTE_IN_CLOSEST_FRUSTUM:4,DEBUG_SHOW_BOUNDING_VOLUME:8,CAST_SHADOWS:16,RECEIVE_SHADOWS:32,PICK_ONLY:64,DEPTH_FOR_TRANSLUCENT_CLASSIFICATION:128};function Qi(Z){Z=l(Z,l.EMPTY_OBJECT),this._boundingVolume=Z.boundingVolume,this._orientedBoundingBox=Z.orientedBoundingBox,this._modelMatrix=Z.modelMatrix,this._primitiveType=l(Z.primitiveType,jA.TRIANGLES),this._vertexArray=Z.vertexArray,this._count=Z.count,this._offset=l(Z.offset,0),this._instanceCount=l(Z.instanceCount,0),this._shaderProgram=Z.shaderProgram,this._uniformMap=Z.uniformMap,this._renderState=Z.renderState,this._framebuffer=Z.framebuffer,this._pass=Z.pass,this._owner=Z.owner,this._debugOverlappingFrustums=0,this._pickId=Z.pickId,this._flags=0,this.cull=l(Z.cull,!0),this.occlude=l(Z.occlude,!0),this.executeInClosestFrustum=l(Z.executeInClosestFrustum,!1),this.debugShowBoundingVolume=l(Z.debugShowBoundingVolume,!1),this.castShadows=l(Z.castShadows,!1),this.receiveShadows=l(Z.receiveShadows,!1),this.pickOnly=l(Z.pickOnly,!1),this.depthForTranslucentClassification=l(Z.depthForTranslucentClassification,!1),this.dirty=!0,this.lastDirtyTime=0,this.derivedCommands={}}function Vh(Z,m){return(Z._flags&m)===m}function PY(Z,m,h){h?Z._flags|=m:Z._flags&=~m}Object.defineProperties(Qi.prototype,{boundingVolume:{get:function(){return this._boundingVolume},set:function(Z){this._boundingVolume!==Z&&(this._boundingVolume=Z,this.dirty=!0)}},orientedBoundingBox:{get:function(){return this._orientedBoundingBox},set:function(Z){this._orientedBoundingBox!==Z&&(this._orientedBoundingBox=Z,this.dirty=!0)}},cull:{get:function(){return Vh(this,Um.CULL)},set:function(Z){Vh(this,Um.CULL)!==Z&&(PY(this,Um.CULL,Z),this.dirty=!0)}},occlude:{get:function(){return Vh(this,Um.OCCLUDE)},set:function(Z){Vh(this,Um.OCCLUDE)!==Z&&(PY(this,Um.OCCLUDE,Z),this.dirty=!0)}},modelMatrix:{get:function(){return this._modelMatrix},set:function(Z){this._modelMatrix!==Z&&(this._modelMatrix=Z,this.dirty=!0)}},primitiveType:{get:function(){return this._primitiveType},set:function(Z){this._primitiveType!==Z&&(this._primitiveType=Z,this.dirty=!0)}},vertexArray:{get:function(){return this._vertexArray},set:function(Z){this._vertexArray!==Z&&(this._vertexArray=Z,this.dirty=!0)}},count:{get:function(){return this._count},set:function(Z){this._count!==Z&&(this._count=Z,this.dirty=!0)}},offset:{get:function(){return this._offset},set:function(Z){this._offset!==Z&&(this._offset=Z,this.dirty=!0)}},instanceCount:{get:function(){return this._instanceCount},set:function(Z){this._instanceCount!==Z&&(this._instanceCount=Z,this.dirty=!0)}},shaderProgram:{get:function(){return this._shaderProgram},set:function(Z){this._shaderProgram!==Z&&(this._shaderProgram=Z,this.dirty=!0)}},castShadows:{get:function(){return Vh(this,Um.CAST_SHADOWS)},set:function(Z){Vh(this,Um.CAST_SHADOWS)!==Z&&(PY(this,Um.CAST_SHADOWS,Z),this.dirty=!0)}},receiveShadows:{get:function(){return Vh(this,Um.RECEIVE_SHADOWS)},set:function(Z){Vh(this,Um.RECEIVE_SHADOWS)!==Z&&(PY(this,Um.RECEIVE_SHADOWS,Z),this.dirty=!0)}},uniformMap:{get:function(){return this._uniformMap},set:function(Z){this._uniformMap!==Z&&(this._uniformMap=Z,this.dirty=!0)}},renderState:{get:function(){return this._renderState},set:function(Z){this._renderState!==Z&&(this._renderState=Z,this.dirty=!0)}},framebuffer:{get:function(){return this._framebuffer},set:function(Z){this._framebuffer!==Z&&(this._framebuffer=Z,this.dirty=!0)}},pass:{get:function(){return this._pass},set:function(Z){this._pass!==Z&&(this._pass=Z,this.dirty=!0)}},executeInClosestFrustum:{get:function(){return Vh(this,Um.EXECUTE_IN_CLOSEST_FRUSTUM)},set:function(Z){Vh(this,Um.EXECUTE_IN_CLOSEST_FRUSTUM)!==Z&&(PY(this,Um.EXECUTE_IN_CLOSEST_FRUSTUM,Z),this.dirty=!0)}},owner:{get:function(){return this._owner},set:function(Z){this._owner!==Z&&(this._owner=Z,this.dirty=!0)}},debugShowBoundingVolume:{get:function(){return Vh(this,Um.DEBUG_SHOW_BOUNDING_VOLUME)},set:function(Z){Vh(this,Um.DEBUG_SHOW_BOUNDING_VOLUME)!==Z&&(PY(this,Um.DEBUG_SHOW_BOUNDING_VOLUME,Z),this.dirty=!0)}},debugOverlappingFrustums:{get:function(){return this._debugOverlappingFrustums},set:function(Z){this._debugOverlappingFrustums!==Z&&(this._debugOverlappingFrustums=Z,this.dirty=!0)}},pickId:{get:function(){return this._pickId},set:function(Z){this._pickId!==Z&&(this._pickId=Z,this.dirty=!0)}},pickOnly:{get:function(){return Vh(this,Um.PICK_ONLY)},set:function(Z){Vh(this,Um.PICK_ONLY)!==Z&&(PY(this,Um.PICK_ONLY,Z),this.dirty=!0)}},depthForTranslucentClassification:{get:function(){return Vh(this,Um.DEPTH_FOR_TRANSLUCENT_CLASSIFICATION)},set:function(Z){Vh(this,Um.DEPTH_FOR_TRANSLUCENT_CLASSIFICATION)!==Z&&(PY(this,Um.DEPTH_FOR_TRANSLUCENT_CLASSIFICATION,Z),this.dirty=!0)}}});Qi.shallowClone=function(Z,m){if(V(Z))return V(m)||(m=new Qi),m._boundingVolume=Z._boundingVolume,m._orientedBoundingBox=Z._orientedBoundingBox,m._modelMatrix=Z._modelMatrix,m._primitiveType=Z._primitiveType,m._vertexArray=Z._vertexArray,m._count=Z._count,m._offset=Z._offset,m._instanceCount=Z._instanceCount,m._shaderProgram=Z._shaderProgram,m._uniformMap=Z._uniformMap,m._renderState=Z._renderState,m._framebuffer=Z._framebuffer,m._pass=Z._pass,m._owner=Z._owner,m._debugOverlappingFrustums=Z._debugOverlappingFrustums,m._pickId=Z._pickId,m._flags=Z._flags,m.dirty=!0,m.lastDirtyTime=0,m};Qi.prototype.execute=function(Z,m){Z.draw(this,m)};var Am=Qi;var AN={ENVIRONMENT:0,COMPUTE:1,GLOBE:2,TERRAIN_CLASSIFICATION:3,CESIUM_3D_TILE:4,CESIUM_3D_TILE_CLASSIFICATION:5,CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW:6,OPAQUE:7,TRANSLUCENT:8,VOXELS:9,OVERLAY:10,NUMBER_OF_PASSES:11},gm=Object.freeze(AN);function oe(Z){if(typeof Z!="object"||Z===null)return Z;let m,h=Object.keys(Z);for(let n=0;n<h.length;n++)m=h[n],Z.hasOwnProperty(m)&&m!=="_applyFunctions"&&(Z[m]=oe(Z[m]));return Object.freeze(Z)}var Ve=oe;function le(Z){return Z===S.FUNC_ADD||Z===S.FUNC_SUBTRACT||Z===S.FUNC_REVERSE_SUBTRACT||Z===S.MIN||Z===S.MAX}function wA(Z){return Z===S.ZERO||Z===S.ONE||Z===S.SRC_COLOR||Z===S.ONE_MINUS_SRC_COLOR||Z===S.DST_COLOR||Z===S.ONE_MINUS_DST_COLOR||Z===S.SRC_ALPHA||Z===S.ONE_MINUS_SRC_ALPHA||Z===S.DST_ALPHA||Z===S.ONE_MINUS_DST_ALPHA||Z===S.CONSTANT_COLOR||Z===S.ONE_MINUS_CONSTANT_COLOR||Z===S.CONSTANT_ALPHA||Z===S.ONE_MINUS_CONSTANT_ALPHA||Z===S.SRC_ALPHA_SATURATE}function aN(Z){return Z===S.FRONT||Z===S.BACK||Z===S.FRONT_AND_BACK}function tN(Z){return Z===S.NEVER||Z===S.LESS||Z===S.EQUAL||Z===S.LEQUAL||Z===S.GREATER||Z===S.NOTEQUAL||Z===S.GEQUAL||Z===S.ALWAYS}function Re(Z){return Z===S.NEVER||Z===S.LESS||Z===S.EQUAL||Z===S.LEQUAL||Z===S.GREATER||Z===S.NOTEQUAL||Z===S.GEQUAL||Z===S.ALWAYS}function wn(Z){return Z===S.ZERO||Z===S.KEEP||Z===S.REPLACE||Z===S.INCR||Z===S.DECR||Z===S.INVERT||Z===S.INCR_WRAP||Z===S.DECR_WRAP}function FY(Z){let m=l(Z,l.EMPTY_OBJECT),h=l(m.cull,l.EMPTY_OBJECT),n=l(m.polygonOffset,l.EMPTY_OBJECT),i=l(m.scissorTest,l.EMPTY_OBJECT),A=l(i.rectangle,l.EMPTY_OBJECT),t=l(m.depthRange,l.EMPTY_OBJECT),W=l(m.depthTest,l.EMPTY_OBJECT),e=l(m.colorMask,l.EMPTY_OBJECT),G=l(m.blending,l.EMPTY_OBJECT),F=l(G.color,l.EMPTY_OBJECT),d=l(m.stencilTest,l.EMPTY_OBJECT),J=l(d.frontOperation,l.EMPTY_OBJECT),k=l(d.backOperation,l.EMPTY_OBJECT),r=l(m.sampleCoverage,l.EMPTY_OBJECT),Q=m.viewport;if(this.frontFace=l(m.frontFace,_a.COUNTER_CLOCKWISE),this.cull={enabled:l(h.enabled,!1),face:l(h.face,S.BACK)},this.lineWidth=l(m.lineWidth,1),this.polygonOffset={enabled:l(n.enabled,!1),factor:l(n.factor,0),units:l(n.units,0)},this.scissorTest={enabled:l(i.enabled,!1),rectangle:qZ.clone(A)},this.depthRange={near:l(t.near,0),far:l(t.far,1)},this.depthTest={enabled:l(W.enabled,!1),func:l(W.func,S.LESS)},this.colorMask={red:l(e.red,!0),green:l(e.green,!0),blue:l(e.blue,!0),alpha:l(e.alpha,!0)},this.depthMask=l(m.depthMask,!0),this.stencilMask=l(m.stencilMask,-1),this.blending={enabled:l(G.enabled,!1),color:new H(l(F.red,0),l(F.green,0),l(F.blue,0),l(F.alpha,0)),equationRgb:l(G.equationRgb,S.FUNC_ADD),equationAlpha:l(G.equationAlpha,S.FUNC_ADD),functionSourceRgb:l(G.functionSourceRgb,S.ONE),functionSourceAlpha:l(G.functionSourceAlpha,S.ONE),functionDestinationRgb:l(G.functionDestinationRgb,S.ZERO),functionDestinationAlpha:l(G.functionDestinationAlpha,S.ZERO)},this.stencilTest={enabled:l(d.enabled,!1),frontFunction:l(d.frontFunction,S.ALWAYS),backFunction:l(d.backFunction,S.ALWAYS),reference:l(d.reference,0),mask:l(d.mask,-1),frontOperation:{fail:l(J.fail,S.KEEP),zFail:l(J.zFail,S.KEEP),zPass:l(J.zPass,S.KEEP)},backOperation:{fail:l(k.fail,S.KEEP),zFail:l(k.zFail,S.KEEP),zPass:l(k.zPass,S.KEEP)}},this.sampleCoverage={enabled:l(r.enabled,!1),value:l(r.value,1),invert:l(r.invert,!1)},this.viewport=V(Q)?new qZ(Q.x,Q.y,Q.width,Q.height):void 0,this.lineWidth<$Z.minimumAliasedLineWidth||this.lineWidth>$Z.maximumAliasedLineWidth)throw new U("renderState.lineWidth is out of range.  Check minimumAliasedLineWidth and maximumAliasedLineWidth.");if(!_a.validate(this.frontFace))throw new U("Invalid renderState.frontFace.");if(!aN(this.cull.face))throw new U("Invalid renderState.cull.face.");if(this.scissorTest.rectangle.width<0||this.scissorTest.rectangle.height<0)throw new U("renderState.scissorTest.rectangle.width and renderState.scissorTest.rectangle.height must be greater than or equal to zero.");if(this.depthRange.near>this.depthRange.far)throw new U("renderState.depthRange.near can not be greater than renderState.depthRange.far.");if(this.depthRange.near<0)throw new U("renderState.depthRange.near must be greater than or equal to zero.");if(this.depthRange.far>1)throw new U("renderState.depthRange.far must be less than or equal to one.");if(!tN(this.depthTest.func))throw new U("Invalid renderState.depthTest.func.");if(this.blending.color.red<0||this.blending.color.red>1||this.blending.color.green<0||this.blending.color.green>1||this.blending.color.blue<0||this.blending.color.blue>1||this.blending.color.alpha<0||this.blending.color.alpha>1)throw new U("renderState.blending.color components must be greater than or equal to zero and less than or equal to one.");if(!le(this.blending.equationRgb))throw new U("Invalid renderState.blending.equationRgb.");if(!le(this.blending.equationAlpha))throw new U("Invalid renderState.blending.equationAlpha.");if(!wA(this.blending.functionSourceRgb))throw new U("Invalid renderState.blending.functionSourceRgb.");if(!wA(this.blending.functionSourceAlpha))throw new U("Invalid renderState.blending.functionSourceAlpha.");if(!wA(this.blending.functionDestinationRgb))throw new U("Invalid renderState.blending.functionDestinationRgb.");if(!wA(this.blending.functionDestinationAlpha))throw new U("Invalid renderState.blending.functionDestinationAlpha.");if(!Re(this.stencilTest.frontFunction))throw new U("Invalid renderState.stencilTest.frontFunction.");if(!Re(this.stencilTest.backFunction))throw new U("Invalid renderState.stencilTest.backFunction.");if(!wn(this.stencilTest.frontOperation.fail))throw new U("Invalid renderState.stencilTest.frontOperation.fail.");if(!wn(this.stencilTest.frontOperation.zFail))throw new U("Invalid renderState.stencilTest.frontOperation.zFail.");if(!wn(this.stencilTest.frontOperation.zPass))throw new U("Invalid renderState.stencilTest.frontOperation.zPass.");if(!wn(this.stencilTest.backOperation.fail))throw new U("Invalid renderState.stencilTest.backOperation.fail.");if(!wn(this.stencilTest.backOperation.zFail))throw new U("Invalid renderState.stencilTest.backOperation.zFail.");if(!wn(this.stencilTest.backOperation.zPass))throw new U("Invalid renderState.stencilTest.backOperation.zPass.");if(V(this.viewport)){if(this.viewport.width<0)throw new U("renderState.viewport.width must be greater than or equal to zero.");if(this.viewport.height<0)throw new U("renderState.viewport.height must be greater than or equal to zero.");if(this.viewport.width>$Z.maximumViewportWidth)throw new U(`renderState.viewport.width must be less than or equal to the maximum viewport width (${$Z.maximumViewportWidth.toString()}).  Check maximumViewportWidth.`);if(this.viewport.height>$Z.maximumViewportHeight)throw new U(`renderState.viewport.height must be less than or equal to the maximum viewport height (${$Z.maximumViewportHeight.toString()}).  Check maximumViewportHeight.`)}this.id=0,this._applyFunctions=[]}var WN=0,GY={};FY.fromCache=function(Z){let m=JSON.stringify(Z),h=GY[m];if(V(h))return++h.referenceCount,h.state;let n=new FY(Z),i=JSON.stringify(n);return h=GY[i],V(h)||(n.id=WN++,n=Ve(n),h={referenceCount:0,state:n},GY[i]=h),++h.referenceCount,GY[m]={referenceCount:1,state:h.state},h.state};FY.removeFromCache=function(Z){let m=new FY(Z),h=JSON.stringify(m),n=GY[h],i=JSON.stringify(Z),A=GY[i];V(A)&&(--A.referenceCount,A.referenceCount===0&&(delete GY[i],V(n)&&--n.referenceCount)),V(n)&&n.referenceCount===0&&delete GY[h]};FY.getCache=function(){return GY};FY.clearCache=function(){GY={}};function Nn(Z,m,h){h?Z.enable(m):Z.disable(m)}function Ge(Z,m){Z.frontFace(m.frontFace)}function Fe(Z,m){let h=m.cull,n=h.enabled;Nn(Z,Z.CULL_FACE,n),n&&Z.cullFace(h.face)}function de(Z,m){Z.lineWidth(m.lineWidth)}function se(Z,m){let h=m.polygonOffset,n=h.enabled;Nn(Z,Z.POLYGON_OFFSET_FILL,n),n&&Z.polygonOffset(h.factor,h.units)}function re(Z,m,h){let n=m.scissorTest,i=V(h.scissorTest)?h.scissorTest.enabled:n.enabled;if(Nn(Z,Z.SCISSOR_TEST,i),i){let A=V(h.scissorTest)?h.scissorTest.rectangle:n.rectangle;Z.scissor(A.x,A.y,A.width,A.height)}}function Ne(Z,m){let h=m.depthRange;Z.depthRange(h.near,h.far)}function Ee(Z,m){let h=m.depthTest,n=h.enabled;Nn(Z,Z.DEPTH_TEST,n),n&&Z.depthFunc(h.func)}function ke(Z,m){let h=m.colorMask;Z.colorMask(h.red,h.green,h.blue,h.alpha)}function Ue(Z,m){Z.depthMask(m.depthMask)}function Je(Z,m){Z.stencilMask(m.stencilMask)}function eN(Z,m){Z.blendColor(m.red,m.green,m.blue,m.alpha)}function Qe(Z,m,h){let n=m.blending,i=V(h.blendingEnabled)?h.blendingEnabled:n.enabled;Nn(Z,Z.BLEND,i),i&&(eN(Z,n.color),Z.blendEquationSeparate(n.equationRgb,n.equationAlpha),Z.blendFuncSeparate(n.functionSourceRgb,n.functionDestinationRgb,n.functionSourceAlpha,n.functionDestinationAlpha))}function Ce(Z,m){let h=m.stencilTest,n=h.enabled;if(Nn(Z,Z.STENCIL_TEST,n),n){let i=h.frontFunction,A=h.backFunction,t=h.reference,W=h.mask;Z.stencilFunc(i,t,W),Z.stencilFuncSeparate(Z.BACK,A,t,W),Z.stencilFuncSeparate(Z.FRONT,i,t,W);let e=h.frontOperation,G=e.fail,F=e.zFail,d=e.zPass;Z.stencilOpSeparate(Z.FRONT,G,F,d);let J=h.backOperation,k=J.fail,r=J.zFail,Q=J.zPass;Z.stencilOpSeparate(Z.BACK,k,r,Q)}}function Be(Z,m){let h=m.sampleCoverage,n=h.enabled;Nn(Z,Z.SAMPLE_COVERAGE,n),n&&Z.sampleCoverage(h.value,h.invert)}var oN=new qZ;function ge(Z,m,h){let n=l(m.viewport,h.viewport);V(n)||(n=oN,n.width=h.context.drawingBufferWidth,n.height=h.context.drawingBufferHeight),h.context.uniformState.viewport=n,Z.viewport(n.x,n.y,n.width,n.height)}FY.apply=function(Z,m,h){Ge(Z,m),Fe(Z,m),de(Z,m),se(Z,m),Ne(Z,m),Ee(Z,m),ke(Z,m),Ue(Z,m),Je(Z,m),Ce(Z,m),Be(Z,m),re(Z,m,h),Qe(Z,m,h),ge(Z,m,h)};function VN(Z,m){let h=[];return Z.frontFace!==m.frontFace&&h.push(Ge),(Z.cull.enabled!==m.cull.enabled||Z.cull.face!==m.cull.face)&&h.push(Fe),Z.lineWidth!==m.lineWidth&&h.push(de),(Z.polygonOffset.enabled!==m.polygonOffset.enabled||Z.polygonOffset.factor!==m.polygonOffset.factor||Z.polygonOffset.units!==m.polygonOffset.units)&&h.push(se),(Z.depthRange.near!==m.depthRange.near||Z.depthRange.far!==m.depthRange.far)&&h.push(Ne),(Z.depthTest.enabled!==m.depthTest.enabled||Z.depthTest.func!==m.depthTest.func)&&h.push(Ee),(Z.colorMask.red!==m.colorMask.red||Z.colorMask.green!==m.colorMask.green||Z.colorMask.blue!==m.colorMask.blue||Z.colorMask.alpha!==m.colorMask.alpha)&&h.push(ke),Z.depthMask!==m.depthMask&&h.push(Ue),Z.stencilMask!==m.stencilMask&&h.push(Je),(Z.stencilTest.enabled!==m.stencilTest.enabled||Z.stencilTest.frontFunction!==m.stencilTest.frontFunction||Z.stencilTest.backFunction!==m.stencilTest.backFunction||Z.stencilTest.reference!==m.stencilTest.reference||Z.stencilTest.mask!==m.stencilTest.mask||Z.stencilTest.frontOperation.fail!==m.stencilTest.frontOperation.fail||Z.stencilTest.frontOperation.zFail!==m.stencilTest.frontOperation.zFail||Z.stencilTest.backOperation.fail!==m.stencilTest.backOperation.fail||Z.stencilTest.backOperation.zFail!==m.stencilTest.backOperation.zFail||Z.stencilTest.backOperation.zPass!==m.stencilTest.backOperation.zPass)&&h.push(Ce),(Z.sampleCoverage.enabled!==m.sampleCoverage.enabled||Z.sampleCoverage.value!==m.sampleCoverage.value||Z.sampleCoverage.invert!==m.sampleCoverage.invert)&&h.push(Be),h}FY.partialApply=function(Z,m,h,n,i,A){if(m!==h){let F=h._applyFunctions[m.id];V(F)||(F=VN(m,h),h._applyFunctions[m.id]=F);let d=F.length;for(let J=0;J<d;++J)F[J](Z,h)}let t=V(n.scissorTest)?n.scissorTest:m.scissorTest,W=V(i.scissorTest)?i.scissorTest:h.scissorTest;(t!==W||A)&&re(Z,h,i);let e=V(n.blendingEnabled)?n.blendingEnabled:m.blending.enabled,G=V(i.blendingEnabled)?i.blendingEnabled:h.blending.enabled;(e!==G||G&&m.blending!==h.blending)&&Qe(Z,h,i),(m!==h||n!==i||n.context!==i.context)&&ge(Z,h,i)};FY.getState=function(Z){if(!V(Z))throw new U("renderState is required.");return{frontFace:Z.frontFace,cull:{enabled:Z.cull.enabled,face:Z.cull.face},lineWidth:Z.lineWidth,polygonOffset:{enabled:Z.polygonOffset.enabled,factor:Z.polygonOffset.factor,units:Z.polygonOffset.units},scissorTest:{enabled:Z.scissorTest.enabled,rectangle:qZ.clone(Z.scissorTest.rectangle)},depthRange:{near:Z.depthRange.near,far:Z.depthRange.far},depthTest:{enabled:Z.depthTest.enabled,func:Z.depthTest.func},colorMask:{red:Z.colorMask.red,green:Z.colorMask.green,blue:Z.colorMask.blue,alpha:Z.colorMask.alpha},depthMask:Z.depthMask,stencilMask:Z.stencilMask,blending:{enabled:Z.blending.enabled,color:H.clone(Z.blending.color),equationRgb:Z.blending.equationRgb,equationAlpha:Z.blending.equationAlpha,functionSourceRgb:Z.blending.functionSourceRgb,functionSourceAlpha:Z.blending.functionSourceAlpha,functionDestinationRgb:Z.blending.functionDestinationRgb,functionDestinationAlpha:Z.blending.functionDestinationAlpha},stencilTest:{enabled:Z.stencilTest.enabled,frontFunction:Z.stencilTest.frontFunction,backFunction:Z.stencilTest.backFunction,reference:Z.stencilTest.reference,mask:Z.stencilTest.mask,frontOperation:{fail:Z.stencilTest.frontOperation.fail,zFail:Z.stencilTest.frontOperation.zFail,zPass:Z.stencilTest.frontOperation.zPass},backOperation:{fail:Z.stencilTest.backOperation.fail,zFail:Z.stencilTest.backOperation.zFail,zPass:Z.stencilTest.backOperation.zPass}},sampleCoverage:{enabled:Z.sampleCoverage.enabled,value:Z.sampleCoverage.value,invert:Z.sampleCoverage.invert},viewport:V(Z.viewport)?qZ.clone(Z.viewport):void 0}};var Vm=FY;var lN=new _;function lZ(Z){this._size=Z.size,this._datatype=Z.datatype,this.getValue=Z.getValue}var Yh={};Yh[S.FLOAT]="float";Yh[S.FLOAT_VEC2]="vec2";Yh[S.FLOAT_VEC3]="vec3";Yh[S.FLOAT_VEC4]="vec4";Yh[S.INT]="int";Yh[S.INT_VEC2]="ivec2";Yh[S.INT_VEC3]="ivec3";Yh[S.INT_VEC4]="ivec4";Yh[S.BOOL]="bool";Yh[S.BOOL_VEC2]="bvec2";Yh[S.BOOL_VEC3]="bvec3";Yh[S.BOOL_VEC4]="bvec4";Yh[S.FLOAT_MAT2]="mat2";Yh[S.FLOAT_MAT3]="mat3";Yh[S.FLOAT_MAT4]="mat4";Yh[S.SAMPLER_2D]="sampler2D";Yh[S.SAMPLER_CUBE]="samplerCube";lZ.prototype.getDeclaration=function(Z){let m=`uniform ${Yh[this._datatype]} ${Z}`,h=this._size;return h===1?m+=";":m+=`[${h.toString()}];`,m};var RN={czm_viewport:new lZ({size:1,datatype:S.FLOAT_VEC4,getValue:function(Z){return Z.viewportCartesian4}}),czm_viewportOrthographic:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.viewportOrthographic}}),czm_viewportTransformation:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.viewportTransformation}}),czm_globeDepthTexture:new lZ({size:1,datatype:S.SAMPLER_2D,getValue:function(Z){return Z.globeDepthTexture}}),czm_model:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.model}}),czm_inverseModel:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.inverseModel}}),czm_view:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.view}}),czm_view3D:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.view3D}}),czm_viewRotation:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.viewRotation}}),czm_viewRotation3D:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.viewRotation3D}}),czm_inverseView:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.inverseView}}),czm_inverseView3D:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.inverseView3D}}),czm_inverseViewRotation:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.inverseViewRotation}}),czm_inverseViewRotation3D:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.inverseViewRotation3D}}),czm_projection:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.projection}}),czm_inverseProjection:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.inverseProjection}}),czm_infiniteProjection:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.infiniteProjection}}),czm_modelView:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.modelView}}),czm_modelView3D:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.modelView3D}}),czm_modelViewRelativeToEye:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.modelViewRelativeToEye}}),czm_inverseModelView:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.inverseModelView}}),czm_inverseModelView3D:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.inverseModelView3D}}),czm_viewProjection:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.viewProjection}}),czm_inverseViewProjection:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.inverseViewProjection}}),czm_modelViewProjection:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.modelViewProjection}}),czm_inverseModelViewProjection:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.inverseModelViewProjection}}),czm_modelViewProjectionRelativeToEye:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.modelViewProjectionRelativeToEye}}),czm_modelViewInfiniteProjection:new lZ({size:1,datatype:S.FLOAT_MAT4,getValue:function(Z){return Z.modelViewInfiniteProjection}}),czm_orthographicIn3D:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.orthographicIn3D?1:0}}),czm_normal:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.normal}}),czm_normal3D:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.normal3D}}),czm_inverseNormal:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.inverseNormal}}),czm_inverseNormal3D:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.inverseNormal3D}}),czm_eyeHeight:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.eyeHeight}}),czm_eyeHeight2D:new lZ({size:1,datatype:S.FLOAT_VEC2,getValue:function(Z){return Z.eyeHeight2D}}),czm_entireFrustum:new lZ({size:1,datatype:S.FLOAT_VEC2,getValue:function(Z){return Z.entireFrustum}}),czm_currentFrustum:new lZ({size:1,datatype:S.FLOAT_VEC2,getValue:function(Z){return Z.currentFrustum}}),czm_frustumPlanes:new lZ({size:1,datatype:S.FLOAT_VEC4,getValue:function(Z){return Z.frustumPlanes}}),czm_farDepthFromNearPlusOne:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.farDepthFromNearPlusOne}}),czm_log2FarDepthFromNearPlusOne:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.log2FarDepthFromNearPlusOne}}),czm_oneOverLog2FarDepthFromNearPlusOne:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.oneOverLog2FarDepthFromNearPlusOne}}),czm_sunPositionWC:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.sunPositionWC}}),czm_sunPositionColumbusView:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.sunPositionColumbusView}}),czm_sunDirectionEC:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.sunDirectionEC}}),czm_sunDirectionWC:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.sunDirectionWC}}),czm_moonDirectionEC:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.moonDirectionEC}}),czm_lightDirectionEC:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.lightDirectionEC}}),czm_lightDirectionWC:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.lightDirectionWC}}),czm_lightColor:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.lightColor}}),czm_lightColorHdr:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.lightColorHdr}}),czm_encodedCameraPositionMCHigh:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.encodedCameraPositionMCHigh}}),czm_encodedCameraPositionMCLow:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.encodedCameraPositionMCLow}}),czm_viewerPositionWC:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return eZ.getTranslation(Z.inverseView,lN)}}),czm_frameNumber:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.frameState.frameNumber}}),czm_morphTime:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.frameState.morphTime}}),czm_sceneMode:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.frameState.mode}}),czm_pass:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.pass}}),czm_backgroundColor:new lZ({size:1,datatype:S.FLOAT_VEC4,getValue:function(Z){return Z.backgroundColor}}),czm_brdfLut:new lZ({size:1,datatype:S.SAMPLER_2D,getValue:function(Z){return Z.brdfLut}}),czm_environmentMap:new lZ({size:1,datatype:S.SAMPLER_CUBE,getValue:function(Z){return Z.environmentMap}}),czm_specularEnvironmentMaps:new lZ({size:1,datatype:S.SAMPLER_2D,getValue:function(Z){return Z.specularEnvironmentMaps}}),czm_specularEnvironmentMapSize:new lZ({size:1,datatype:S.FLOAT_VEC2,getValue:function(Z){return Z.specularEnvironmentMapsDimensions}}),czm_specularEnvironmentMapsMaximumLOD:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.specularEnvironmentMapsMaximumLOD}}),czm_sphericalHarmonicCoefficients:new lZ({size:9,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.sphericalHarmonicCoefficients}}),czm_temeToPseudoFixed:new lZ({size:1,datatype:S.FLOAT_MAT3,getValue:function(Z){return Z.temeToPseudoFixedMatrix}}),czm_pixelRatio:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.pixelRatio}}),czm_fogDensity:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.fogDensity}}),czm_splitPosition:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.splitPosition}}),czm_geometricToleranceOverMeter:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.geometricToleranceOverMeter}}),czm_minimumDisableDepthTestDistance:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.minimumDisableDepthTestDistance}}),czm_invertClassificationColor:new lZ({size:1,datatype:S.FLOAT_VEC4,getValue:function(Z){return Z.invertClassificationColor}}),czm_gamma:new lZ({size:1,datatype:S.FLOAT,getValue:function(Z){return Z.gamma}}),czm_ellipsoidRadii:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.ellipsoid.radii}}),czm_ellipsoidInverseRadii:new lZ({size:1,datatype:S.FLOAT_VEC3,getValue:function(Z){return Z.ellipsoid.oneOverRadii}})},yn=RN;function GN(Z,m,h,n){switch(m.type){case Z.FLOAT:return new Ie(Z,m,h,n);case Z.FLOAT_VEC2:return new pe(Z,m,h,n);case Z.FLOAT_VEC3:return new je(Z,m,h,n);case Z.FLOAT_VEC4:return new ce(Z,m,h,n);case Z.SAMPLER_2D:case Z.SAMPLER_CUBE:return new Xa(Z,m,h,n);case Z.INT:case Z.BOOL:return new Te(Z,m,h,n);case Z.INT_VEC2:case Z.BOOL_VEC2:return new Me(Z,m,h,n);case Z.INT_VEC3:case Z.BOOL_VEC3:return new Se(Z,m,h,n);case Z.INT_VEC4:case Z.BOOL_VEC4:return new De(Z,m,h,n);case Z.FLOAT_MAT2:return new fe(Z,m,h,n);case Z.FLOAT_MAT3:return new ue(Z,m,h,n);case Z.FLOAT_MAT4:return new be(Z,m,h,n);default:throw new Sm(`Unrecognized uniform type: ${m.type} for uniform "${h}".`)}}function Ie(Z,m,h,n){this.name=h,this.value=void 0,this._value=0,this._gl=Z,this._location=n}Ie.prototype.set=function(){this.value!==this._value&&(this._value=this.value,this._gl.uniform1f(this._location,this.value))};function pe(Z,m,h,n){this.name=h,this.value=void 0,this._value=new q,this._gl=Z,this._location=n}pe.prototype.set=function(){let Z=this.value;q.equals(Z,this._value)||(q.clone(Z,this._value),this._gl.uniform2f(this._location,Z.x,Z.y))};function je(Z,m,h,n){this.name=h,this.value=void 0,this._value=void 0,this._gl=Z,this._location=n}je.prototype.set=function(){let Z=this.value;if(V(Z.red))H.equals(Z,this._value)||(this._value=H.clone(Z,this._value),this._gl.uniform3f(this._location,Z.red,Z.green,Z.blue));else if(V(Z.x))_.equals(Z,this._value)||(this._value=_.clone(Z,this._value),this._gl.uniform3f(this._location,Z.x,Z.y,Z.z));else throw new U(`Invalid vec3 value for uniform "${this.name}".`)};function ce(Z,m,h,n){this.name=h,this.value=void 0,this._value=void 0,this._gl=Z,this._location=n}ce.prototype.set=function(){let Z=this.value;if(V(Z.red))H.equals(Z,this._value)||(this._value=H.clone(Z,this._value),this._gl.uniform4f(this._location,Z.red,Z.green,Z.blue,Z.alpha));else if(V(Z.x))CZ.equals(Z,this._value)||(this._value=CZ.clone(Z,this._value),this._gl.uniform4f(this._location,Z.x,Z.y,Z.z,Z.w));else throw new U(`Invalid vec4 value for uniform "${this.name}".`)};function Xa(Z,m,h,n){this.name=h,this.value=void 0,this._gl=Z,this._location=n,this.textureUnitIndex=void 0}Xa.prototype.set=function(){let Z=this._gl;Z.activeTexture(Z.TEXTURE0+this.textureUnitIndex);let m=this.value;Z.bindTexture(m._target,m._texture)};Xa.prototype._setSampler=function(Z){return this.textureUnitIndex=Z,this._gl.uniform1i(this._location,Z),Z+1};function Te(Z,m,h,n){this.name=h,this.value=void 0,this._value=0,this._gl=Z,this._location=n}Te.prototype.set=function(){this.value!==this._value&&(this._value=this.value,this._gl.uniform1i(this._location,this.value))};function Me(Z,m,h,n){this.name=h,this.value=void 0,this._value=new q,this._gl=Z,this._location=n}Me.prototype.set=function(){let Z=this.value;q.equals(Z,this._value)||(q.clone(Z,this._value),this._gl.uniform2i(this._location,Z.x,Z.y))};function Se(Z,m,h,n){this.name=h,this.value=void 0,this._value=new _,this._gl=Z,this._location=n}Se.prototype.set=function(){let Z=this.value;_.equals(Z,this._value)||(_.clone(Z,this._value),this._gl.uniform3i(this._location,Z.x,Z.y,Z.z))};function De(Z,m,h,n){this.name=h,this.value=void 0,this._value=new CZ,this._gl=Z,this._location=n}De.prototype.set=function(){let Z=this.value;CZ.equals(Z,this._value)||(CZ.clone(Z,this._value),this._gl.uniform4i(this._location,Z.x,Z.y,Z.z,Z.w))};var FN=new Float32Array(4);function fe(Z,m,h,n){this.name=h,this.value=void 0,this._value=new lY,this._gl=Z,this._location=n}fe.prototype.set=function(){if(!lY.equalsArray(this.value,this._value,0)){lY.clone(this.value,this._value);let Z=lY.toArray(this.value,FN);this._gl.uniformMatrix2fv(this._location,!1,Z)}};var dN=new Float32Array(9);function ue(Z,m,h,n){this.name=h,this.value=void 0,this._value=new Bm,this._gl=Z,this._location=n}ue.prototype.set=function(){if(!Bm.equalsArray(this.value,this._value,0)){Bm.clone(this.value,this._value);let Z=Bm.toArray(this.value,dN);this._gl.uniformMatrix3fv(this._location,!1,Z)}};var sN=new Float32Array(16);function be(Z,m,h,n){this.name=h,this.value=void 0,this._value=new eZ,this._gl=Z,this._location=n}be.prototype.set=function(){if(!eZ.equalsArray(this.value,this._value,0)){eZ.clone(this.value,this._value);let Z=eZ.toArray(this.value,sN);this._gl.uniformMatrix4fv(this._location,!1,Z)}};var xe=GN;function rN(Z,m,h,n){switch(m.type){case Z.FLOAT:return new _e(Z,m,h,n);case Z.FLOAT_VEC2:return new Oe(Z,m,h,n);case Z.FLOAT_VEC3:return new we(Z,m,h,n);case Z.FLOAT_VEC4:return new ye(Z,m,h,n);case Z.SAMPLER_2D:case Z.SAMPLER_CUBE:return new La(Z,m,h,n);case Z.INT:case Z.BOOL:return new He(Z,m,h,n);case Z.INT_VEC2:case Z.BOOL_VEC2:return new ze(Z,m,h,n);case Z.INT_VEC3:case Z.BOOL_VEC3:return new Xe(Z,m,h,n);case Z.INT_VEC4:case Z.BOOL_VEC4:return new Le(Z,m,h,n);case Z.FLOAT_MAT2:return new ve(Z,m,h,n);case Z.FLOAT_MAT3:return new Pe(Z,m,h,n);case Z.FLOAT_MAT4:return new Ke(Z,m,h,n);default:throw new Sm(`Unrecognized uniform type: ${m.type} for uniform "${h}".`)}}function _e(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Float32Array(i),this._gl=Z,this._location=n[0]}_e.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1;for(let i=0;i<m;++i){let A=Z[i];A!==h[i]&&(h[i]=A,n=!0)}n&&this._gl.uniform1fv(this._location,h)};function Oe(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Float32Array(i*2),this._gl=Z,this._location=n[0]}Oe.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];q.equalsArray(t,h,i)||(q.pack(t,h,i),n=!0),i+=2}n&&this._gl.uniform2fv(this._location,h)};function we(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Float32Array(i*3),this._gl=Z,this._location=n[0]}we.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];if(V(t.red))(t.red!==h[i]||t.green!==h[i+1]||t.blue!==h[i+2])&&(h[i]=t.red,h[i+1]=t.green,h[i+2]=t.blue,n=!0);else if(V(t.x))_.equalsArray(t,h,i)||(_.pack(t,h,i),n=!0);else throw new U("Invalid vec3 value.");i+=3}n&&this._gl.uniform3fv(this._location,h)};function ye(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Float32Array(i*4),this._gl=Z,this._location=n[0]}ye.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];if(V(t.red))H.equalsArray(t,h,i)||(H.pack(t,h,i),n=!0);else if(V(t.x))CZ.equalsArray(t,h,i)||(CZ.pack(t,h,i),n=!0);else throw new U("Invalid vec4 value.");i+=4}n&&this._gl.uniform4fv(this._location,h)};function La(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Float32Array(i),this._gl=Z,this._locations=n,this.textureUnitIndex=void 0}La.prototype.set=function(){let Z=this._gl,m=Z.TEXTURE0+this.textureUnitIndex,h=this.value,n=h.length;for(let i=0;i<n;++i){let A=h[i];Z.activeTexture(m+i),Z.bindTexture(A._target,A._texture)}};La.prototype._setSampler=function(Z){this.textureUnitIndex=Z;let m=this._locations,h=m.length;for(let n=0;n<h;++n){let i=Z+n;this._gl.uniform1i(m[n],i)}return Z+h};function He(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Int32Array(i),this._gl=Z,this._location=n[0]}He.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1;for(let i=0;i<m;++i){let A=Z[i];A!==h[i]&&(h[i]=A,n=!0)}n&&this._gl.uniform1iv(this._location,h)};function ze(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Int32Array(i*2),this._gl=Z,this._location=n[0]}ze.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];q.equalsArray(t,h,i)||(q.pack(t,h,i),n=!0),i+=2}n&&this._gl.uniform2iv(this._location,h)};function Xe(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Int32Array(i*3),this._gl=Z,this._location=n[0]}Xe.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];_.equalsArray(t,h,i)||(_.pack(t,h,i),n=!0),i+=3}n&&this._gl.uniform3iv(this._location,h)};function Le(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Int32Array(i*4),this._gl=Z,this._location=n[0]}Le.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];CZ.equalsArray(t,h,i)||(CZ.pack(t,h,i),n=!0),i+=4}n&&this._gl.uniform4iv(this._location,h)};function ve(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Float32Array(i*4),this._gl=Z,this._location=n[0]}ve.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];lY.equalsArray(t,h,i)||(lY.pack(t,h,i),n=!0),i+=4}n&&this._gl.uniformMatrix2fv(this._location,!1,h)};function Pe(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Float32Array(i*9),this._gl=Z,this._location=n[0]}Pe.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];Bm.equalsArray(t,h,i)||(Bm.pack(t,h,i),n=!0),i+=9}n&&this._gl.uniformMatrix3fv(this._location,!1,h)};function Ke(Z,m,h,n){let i=n.length;this.name=h,this.value=new Array(i),this._value=new Float32Array(i*16),this._gl=Z,this._location=n[0]}Ke.prototype.set=function(){let Z=this.value,m=Z.length,h=this._value,n=!1,i=0;for(let A=0;A<m;++A){let t=Z[A];eZ.equalsArray(t,h,i)||(eZ.pack(t,h,i),n=!0),i+=16}n&&this._gl.uniformMatrix4fv(this._location,!1,h)};var qe=rN;var NN=0;function IY(Z){let m=Z.vertexShaderText,h=Z.fragmentShaderText;typeof spector<"u"&&(m=m.replace(/^#line/gm,"//#line"),h=h.replace(/^#line/gm,"//#line"));let n=EN(m,h);this._gl=Z.gl,this._logShaderCompilation=Z.logShaderCompilation,this._debugShaders=Z.debugShaders,this._attributeLocations=Z.attributeLocations,this._program=void 0,this._numberOfVertexAttributes=void 0,this._vertexAttributes=void 0,this._uniformsByName=void 0,this._uniforms=void 0,this._automaticUniforms=void 0,this._manualUniforms=void 0,this._duplicateUniformNames=n.duplicateUniformNames,this._cachedShader=void 0,this.maximumTextureUnitIndex=void 0,this._vertexShaderSource=Z.vertexShaderSource,this._vertexShaderText=Z.vertexShaderText,this._fragmentShaderSource=Z.fragmentShaderSource,this._fragmentShaderText=n.fragmentShaderText,this.id=NN++}IY.fromCache=function(Z){return Z=l(Z,l.EMPTY_OBJECT),y.defined("options.context",Z.context),Z.context.shaderCache.getShaderProgram(Z)};IY.replaceCache=function(Z){return Z=l(Z,l.EMPTY_OBJECT),y.defined("options.context",Z.context),Z.context.shaderCache.replaceShaderProgram(Z)};Object.defineProperties(IY.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},vertexAttributes:{get:function(){return yA(this),this._vertexAttributes}},numberOfVertexAttributes:{get:function(){return yA(this),this._numberOfVertexAttributes}},allUniforms:{get:function(){return yA(this),this._uniformsByName}}});function $e(Z){let m=[],h=Z.match(/uniform.*?(?![^{]*})(?=[=\[;])/g);if(V(h)){let n=h.length;for(let i=0;i<n;i++){let A=h[i].trim(),t=A.slice(A.lastIndexOf(" ")+1);m.push(t)}}return m}function EN(Z,m){let h={};if(!$Z.highpFloatSupported||!$Z.highpIntSupported){let n,i,A,t,W=$e(Z),e=$e(m),G=W.length,F=e.length;for(n=0;n<G;n++)for(i=0;i<F;i++)if(W[n]===e[i]){A=W[n],t=`czm_mediump_${A}`;let d=new RegExp(`${A}\\b`,"g");m=m.replace(d,t),h[t]=A}}return{fragmentShaderText:m,duplicateUniformNames:h}}var dY="[Cesium WebGL] ";function kN(Z,m){let h=m._vertexShaderText,n=m._fragmentShaderText,i=Z.createShader(Z.VERTEX_SHADER);Z.shaderSource(i,h),Z.compileShader(i);let A=Z.createShader(Z.FRAGMENT_SHADER);Z.shaderSource(A,n),Z.compileShader(A);let t=Z.createProgram();Z.attachShader(t,i),Z.attachShader(t,A);let W=m._attributeLocations;if(V(W))for(let J in W)W.hasOwnProperty(J)&&Z.bindAttribLocation(t,W[J],J);Z.linkProgram(t);let e;if(Z.getProgramParameter(t,Z.LINK_STATUS))return m._logShaderCompilation&&(e=Z.getShaderInfoLog(i),V(e)&&e.length>0&&console.log(`${dY}Vertex shader compile log: ${e}`),e=Z.getShaderInfoLog(A),V(e)&&e.length>0&&console.log(`${dY}Fragment shader compile log: ${e}`),e=Z.getProgramInfoLog(t),V(e)&&e.length>0&&console.log(`${dY}Shader program link log: ${e}`)),Z.deleteShader(i),Z.deleteShader(A),t;let G,F=m._debugShaders;throw Z.getShaderParameter(A,Z.COMPILE_STATUS)?Z.getShaderParameter(i,Z.COMPILE_STATUS)?(e=Z.getProgramInfoLog(t),console.error(`${dY}Shader program link log: ${e}`),d(i,"vertex"),d(A,"fragment"),G=`Program failed to link.  Link log: ${e}`):(e=Z.getShaderInfoLog(i),console.error(`${dY}Vertex shader compile log: ${e}`),console.error(`${dY} Vertex shader source:
${h}`),G=`Vertex shader failed to compile.  Compile log: ${e}`):(e=Z.getShaderInfoLog(A),console.error(`${dY}Fragment shader compile log: ${e}`),console.error(`${dY} Fragment shader source:
${n}`),G=`Fragment shader failed to compile.  Compile log: ${e}`),Z.deleteShader(i),Z.deleteShader(A),Z.deleteProgram(t),new Sm(G);function d(J,k){if(!V(F))return;let r=F.getTranslatedShaderSource(J);if(r===""){console.error(`${dY}${k} shader translation failed.`);return}console.error(`${dY}Translated ${k} shaderSource:
${r}`)}}function UN(Z,m,h){let n={};for(let i=0;i<h;++i){let A=Z.getActiveAttrib(m,i),t=Z.getAttribLocation(m,A.name);n[A.name]={name:A.name,type:A.type,index:t}}return n}function JN(Z,m){let h={},n=[],i=[],A=Z.getProgramParameter(m,Z.ACTIVE_UNIFORMS);for(let t=0;t<A;++t){let W=Z.getActiveUniform(m,t),e="[0]",G=W.name.indexOf(e,W.name.length-e.length)!==-1?W.name.slice(0,W.name.length-3):W.name;if(G.indexOf("gl_")!==0)if(W.name.indexOf("[")<0){let F=Z.getUniformLocation(m,G);if(F!==null){let d=xe(Z,W,G,F);h[G]=d,n.push(d),d._setSampler&&i.push(d)}}else{let F,d,J,k,r=G.indexOf("[");if(r>=0){if(F=h[G.slice(0,r)],!V(F))continue;d=F._locations,d.length<=1&&(J=F.value,k=Z.getUniformLocation(m,G),k!==null&&(d.push(k),J.push(Z.getUniform(m,k))))}else{d=[];for(let Q=0;Q<W.size;++Q)k=Z.getUniformLocation(m,`${G}[${Q}]`),k!==null&&d.push(k);F=qe(Z,W,G,d),h[G]=F,n.push(F),F._setSampler&&i.push(F)}}}return{uniformsByName:h,uniforms:n,samplerUniforms:i}}function QN(Z,m){let h=[],n=[];for(let i in m)if(m.hasOwnProperty(i)){let A=m[i],t=i,W=Z._duplicateUniformNames[t];V(W)&&(A.name=W,t=W);let e=yn[t];V(e)?h.push({uniform:A,automaticUniform:e}):n.push(A)}return{automaticUniforms:h,manualUniforms:n}}function CN(Z,m,h){Z.useProgram(m);let n=0,i=h.length;for(let A=0;A<i;++A)n=h[A]._setSampler(n);return Z.useProgram(null),n}function yA(Z){V(Z._program)||Zo(Z)}function Zo(Z){let m=Z._program,h=Z._gl,n=kN(h,Z,Z._debugShaders),i=h.getProgramParameter(n,h.ACTIVE_ATTRIBUTES),A=JN(h,n),t=QN(Z,A.uniformsByName);Z._program=n,Z._numberOfVertexAttributes=i,Z._vertexAttributes=UN(h,n,i),Z._uniformsByName=A.uniformsByName,Z._uniforms=A.uniforms,Z._automaticUniforms=t.automaticUniforms,Z._manualUniforms=t.manualUniforms,Z.maximumTextureUnitIndex=CN(h,n,A.samplerUniforms),m&&Z._gl.deleteProgram(m),typeof spector<"u"&&(Z._program.__SPECTOR_rebuildProgram=function(W,e,G,F){let d=Z._vertexShaderText,J=Z._fragmentShaderText,k=/ ! = /g;Z._vertexShaderText=W.replace(k," != "),Z._fragmentShaderText=e.replace(k," != ");try{Zo(Z),G(Z._program)}catch(r){Z._vertexShaderText=d,Z._fragmentShaderText=J;let p=/(?:Compile|Link) error: ([^]*)/.exec(r.message);F(p?p[1]:r.message)}})}IY.prototype._bind=function(){yA(this),this._gl.useProgram(this._program)};IY.prototype._setUniforms=function(Z,m,h){let n,i;if(V(Z)){let W=this._manualUniforms;for(n=W.length,i=0;i<n;++i){let e=W[i];e.value=Z[e.name]()}}let A=this._automaticUniforms;for(n=A.length,i=0;i<n;++i){let W=A[i];W.uniform.value=W.automaticUniform.getValue(m)}let t=this._uniforms;for(n=t.length,i=0;i<n;++i)t[i].set();if(h){let W=this._gl,e=this._program;if(W.validateProgram(e),!W.getProgramParameter(e,W.VALIDATE_STATUS))throw new U(`Program validation failed.  Program info log: ${W.getProgramInfoLog(e)}`)}};IY.prototype.isDestroyed=function(){return!1};IY.prototype.destroy=function(){this._cachedShader.cache.releaseShaderProgram(this)};IY.prototype.finalDestroy=function(){return this._gl.deleteProgram(this._program),cZ(this)};var fm=IY;var mo=`/**
 * A built-in GLSL floating-point constant for converting radians to degrees.
 *
 * @alias czm_degreesPerRadian
 * @glslConstant
 *
 * @see CesiumMath.DEGREES_PER_RADIAN
 *
 * @example
 * // GLSL declaration
 * const float czm_degreesPerRadian = ...;
 *
 * // Example
 * float deg = czm_degreesPerRadian * rad;
 */
const float czm_degreesPerRadian = 57.29577951308232;
`;var ho=`/**
 * A built-in GLSL vec2 constant for defining the depth range.
 * This is a workaround to a bug where IE11 does not implement gl_DepthRange.
 *
 * @alias czm_depthRange
 * @glslConstant
 *
 * @example
 * // GLSL declaration
 * float depthRangeNear = czm_depthRange.near;
 * float depthRangeFar = czm_depthRange.far;
 *
 */
const czm_depthRangeStruct czm_depthRange = czm_depthRangeStruct(0.0, 1.0);
`;var Yo=`/**
 * 0.1
 *
 * @name czm_epsilon1
 * @glslConstant
 */
const float czm_epsilon1 = 0.1;
`;var no=`/**
 * 0.01
 *
 * @name czm_epsilon2
 * @glslConstant
 */
const float czm_epsilon2 = 0.01;
`;var io=`/**
 * 0.001
 *
 * @name czm_epsilon3
 * @glslConstant
 */
const float czm_epsilon3 = 0.001;
`;var Ao=`/**
 * 0.0001
 *
 * @name czm_epsilon4
 * @glslConstant
 */
const float czm_epsilon4 = 0.0001;
`;var ao=`/**
 * 0.00001
 *
 * @name czm_epsilon5
 * @glslConstant
 */
const float czm_epsilon5 = 0.00001;
`;var to=`/**
 * 0.000001
 *
 * @name czm_epsilon6
 * @glslConstant
 */
const float czm_epsilon6 = 0.000001;
`;var Wo=`/**
 * 0.0000001
 *
 * @name czm_epsilon7
 * @glslConstant
 */
const float czm_epsilon7 = 0.0000001;
`;var eo=`/**
 * DOC_TBA
 *
 * @name czm_infinity
 * @glslConstant
 */
const float czm_infinity = 5906376272000.0;  // Distance from the Sun to Pluto in meters.  TODO: What is best given lowp, mediump, and highp?
`;var oo=`/**
 * A built-in GLSL floating-point constant for <code>1/pi</code>.
 *
 * @alias czm_oneOverPi
 * @glslConstant
 *
 * @see CesiumMath.ONE_OVER_PI
 *
 * @example
 * // GLSL declaration
 * const float czm_oneOverPi = ...;
 *
 * // Example
 * float pi = 1.0 / czm_oneOverPi;
 */
const float czm_oneOverPi = 0.3183098861837907;
`;var Vo=`/**
 * A built-in GLSL floating-point constant for <code>1/2pi</code>.
 *
 * @alias czm_oneOverTwoPi
 * @glslConstant
 *
 * @see CesiumMath.ONE_OVER_TWO_PI
 *
 * @example
 * // GLSL declaration
 * const float czm_oneOverTwoPi = ...;
 *
 * // Example
 * float pi = 2.0 * czm_oneOverTwoPi;
 */
const float czm_oneOverTwoPi = 0.15915494309189535;
`;var lo=`/**
 * The automatic GLSL constant for {@link Pass#CESIUM_3D_TILE}
 *
 * @name czm_passCesium3DTile
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passCesium3DTile = 4.0;
`;var Ro=`/**
 * The automatic GLSL constant for {@link Pass#CESIUM_3D_TILE_CLASSIFICATION}
 *
 * @name czm_passCesium3DTileClassification
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passCesium3DTileClassification = 5.0;
`;var Go=`/**
 * The automatic GLSL constant for {@link Pass#CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW}
 *
 * @name czm_passCesium3DTileClassificationIgnoreShow
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passCesium3DTileClassificationIgnoreShow = 6.0;
`;var Fo=`/**
 * The automatic GLSL constant for {@link Pass#CLASSIFICATION}
 *
 * @name czm_passClassification
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passClassification = 7.0;
`;var so=`/**
 * The automatic GLSL constant for {@link Pass#COMPUTE}
 *
 * @name czm_passCompute
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passCompute = 1.0;
`;var ro=`/**
 * The automatic GLSL constant for {@link Pass#ENVIRONMENT}
 *
 * @name czm_passEnvironment
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passEnvironment = 0.0;
`;var No=`/**
 * The automatic GLSL constant for {@link Pass#GLOBE}
 *
 * @name czm_passGlobe
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passGlobe = 2.0;
`;var Eo=`/**
 * The automatic GLSL constant for {@link Pass#OPAQUE}
 *
 * @name czm_passOpaque
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passOpaque = 7.0;
`;var ko=`/**
 * The automatic GLSL constant for {@link Pass#OVERLAY}
 *
 * @name czm_passOverlay
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passOverlay = 10.0;
`;var Uo=`/**
 * The automatic GLSL constant for {@link Pass#TERRAIN_CLASSIFICATION}
 *
 * @name czm_passTerrainClassification
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passTerrainClassification = 3.0;
`;var Jo=`/**
 * The automatic GLSL constant for {@link Pass#TRANSLUCENT}
 *
 * @name czm_passTranslucent
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passTranslucent = 8.0;
`;var Qo=`/**
 * The automatic GLSL constant for {@link Pass#VOXELS}
 *
 * @name czm_passVoxels
 * @glslConstant
 *
 * @see czm_pass
 */
const float czm_passVoxels = 9.0;
`;var Co=`/**
 * A built-in GLSL floating-point constant for <code>Math.PI</code>.
 *
 * @alias czm_pi
 * @glslConstant
 *
 * @see CesiumMath.PI
 *
 * @example
 * // GLSL declaration
 * const float czm_pi = ...;
 *
 * // Example
 * float twoPi = 2.0 * czm_pi;
 */
const float czm_pi = 3.141592653589793;
`;var Bo=`/**
 * A built-in GLSL floating-point constant for <code>pi/4</code>.
 *
 * @alias czm_piOverFour
 * @glslConstant
 *
 * @see CesiumMath.PI_OVER_FOUR
 *
 * @example
 * // GLSL declaration
 * const float czm_piOverFour = ...;
 *
 * // Example
 * float pi = 4.0 * czm_piOverFour;
 */
const float czm_piOverFour = 0.7853981633974483;
`;var go=`/**
 * A built-in GLSL floating-point constant for <code>pi/6</code>.
 *
 * @alias czm_piOverSix
 * @glslConstant
 *
 * @see CesiumMath.PI_OVER_SIX
 *
 * @example
 * // GLSL declaration
 * const float czm_piOverSix = ...;
 *
 * // Example
 * float pi = 6.0 * czm_piOverSix;
 */
const float czm_piOverSix = 0.5235987755982988;
`;var Io=`/**
 * A built-in GLSL floating-point constant for <code>pi/3</code>.
 *
 * @alias czm_piOverThree
 * @glslConstant
 *
 * @see CesiumMath.PI_OVER_THREE
 *
 * @example
 * // GLSL declaration
 * const float czm_piOverThree = ...;
 *
 * // Example
 * float pi = 3.0 * czm_piOverThree;
 */
const float czm_piOverThree = 1.0471975511965976;
`;var po=`/**
 * A built-in GLSL floating-point constant for <code>pi/2</code>.
 *
 * @alias czm_piOverTwo
 * @glslConstant
 *
 * @see CesiumMath.PI_OVER_TWO
 *
 * @example
 * // GLSL declaration
 * const float czm_piOverTwo = ...;
 *
 * // Example
 * float pi = 2.0 * czm_piOverTwo;
 */
const float czm_piOverTwo = 1.5707963267948966;
`;var jo=`/**
 * A built-in GLSL floating-point constant for converting degrees to radians.
 *
 * @alias czm_radiansPerDegree
 * @glslConstant
 *
 * @see CesiumMath.RADIANS_PER_DEGREE
 *
 * @example
 * // GLSL declaration
 * const float czm_radiansPerDegree = ...;
 *
 * // Example
 * float rad = czm_radiansPerDegree * deg;
 */
const float czm_radiansPerDegree = 0.017453292519943295;
`;var co=`/**
 * The constant identifier for the 2D {@link SceneMode}
 *
 * @name czm_sceneMode2D
 * @glslConstant
 * @see czm_sceneMode
 * @see czm_sceneModeColumbusView
 * @see czm_sceneMode3D
 * @see czm_sceneModeMorphing
 */
const float czm_sceneMode2D = 2.0;
`;var To=`/**
 * The constant identifier for the 3D {@link SceneMode}
 *
 * @name czm_sceneMode3D
 * @glslConstant
 * @see czm_sceneMode
 * @see czm_sceneMode2D
 * @see czm_sceneModeColumbusView
 * @see czm_sceneModeMorphing
 */
const float czm_sceneMode3D = 3.0;
`;var Mo=`/**
 * The constant identifier for the Columbus View {@link SceneMode}
 *
 * @name czm_sceneModeColumbusView
 * @glslConstant
 * @see czm_sceneMode
 * @see czm_sceneMode2D
 * @see czm_sceneMode3D
 * @see czm_sceneModeMorphing
 */
const float czm_sceneModeColumbusView = 1.0;
`;var So=`/**
 * The constant identifier for the Morphing {@link SceneMode}
 *
 * @name czm_sceneModeMorphing
 * @glslConstant
 * @see czm_sceneMode
 * @see czm_sceneMode2D
 * @see czm_sceneModeColumbusView
 * @see czm_sceneMode3D
 */
const float czm_sceneModeMorphing = 0.0;
`;var Do=`/**
 * A built-in GLSL floating-point constant for one solar radius.
 *
 * @alias czm_solarRadius
 * @glslConstant
 *
 * @see CesiumMath.SOLAR_RADIUS
 *
 * @example
 * // GLSL declaration
 * const float czm_solarRadius = ...;
 */
const float czm_solarRadius = 695500000.0;
`;var fo=`/**
 * A built-in GLSL floating-point constant for <code>3pi/2</code>.
 *
 * @alias czm_threePiOver2
 * @glslConstant
 *
 * @see CesiumMath.THREE_PI_OVER_TWO
 *
 * @example
 * // GLSL declaration
 * const float czm_threePiOver2 = ...;
 *
 * // Example
 * float pi = (2.0 / 3.0) * czm_threePiOver2;
 */
const float czm_threePiOver2 = 4.71238898038469;
`;var uo=`/**
 * A built-in GLSL floating-point constant for <code>2pi</code>.
 *
 * @alias czm_twoPi
 * @glslConstant
 *
 * @see CesiumMath.TWO_PI
 *
 * @example
 * // GLSL declaration
 * const float czm_twoPi = ...;
 *
 * // Example
 * float pi = czm_twoPi / 2.0;
 */
const float czm_twoPi = 6.283185307179586;
`;var bo=`/**
 * The maximum latitude, in radians, both North and South, supported by a Web Mercator
 * (EPSG:3857) projection.  Technically, the Mercator projection is defined
 * for any latitude up to (but not including) 90 degrees, but it makes sense
 * to cut it off sooner because it grows exponentially with increasing latitude.
 * The logic behind this particular cutoff value, which is the one used by
 * Google Maps, Bing Maps, and Esri, is that it makes the projection
 * square.  That is, the rectangle is equal in the X and Y directions.
 *
 * The constant value is computed as follows:
 *   czm_pi * 0.5 - (2.0 * atan(exp(-czm_pi)))
 *
 * @name czm_webMercatorMaxLatitude
 * @glslConstant
 */
const float czm_webMercatorMaxLatitude = 1.4844222297453324;
`;var xo=`/**
 * @name czm_depthRangeStruct
 * @glslStruct
 */
struct czm_depthRangeStruct
{
    float near;
    float far;
};
`;var _o=`/**
 * Holds material information that can be used for lighting. Returned by all czm_getMaterial functions.
 *
 * @name czm_material
 * @glslStruct
 *
 * @property {vec3} diffuse Incoming light that scatters evenly in all directions.
 * @property {float} specular Intensity of incoming light reflecting in a single direction.
 * @property {float} shininess The sharpness of the specular reflection.  Higher values create a smaller, more focused specular highlight.
 * @property {vec3} normal Surface's normal in eye coordinates. It is used for effects such as normal mapping. The default is the surface's unmodified normal.
 * @property {vec3} emission Light emitted by the material equally in all directions. The default is vec3(0.0), which emits no light.
 * @property {float} alpha Alpha of this material. 0.0 is completely transparent; 1.0 is completely opaque.
 */
struct czm_material
{
    vec3 diffuse;
    float specular;
    float shininess;
    vec3 normal;
    vec3 emission;
    float alpha;
};
`;var Oo=`/**
 * Used as input to every material's czm_getMaterial function.
 *
 * @name czm_materialInput
 * @glslStruct
 *
 * @property {float} s 1D texture coordinates.
 * @property {vec2} st 2D texture coordinates.
 * @property {vec3} str 3D texture coordinates.
 * @property {vec3} normalEC Unperturbed surface normal in eye coordinates.
 * @property {mat3} tangentToEyeMatrix Matrix for converting a tangent space normal to eye space.
 * @property {vec3} positionToEyeEC Vector from the fragment to the eye in eye coordinates.  The magnitude is the distance in meters from the fragment to the eye.
 * @property {float} height The height of the terrain in meters above or below the WGS84 ellipsoid.  Only available for globe materials.
 * @property {float} slope The slope of the terrain in radians.  0 is flat; pi/2 is vertical.  Only available for globe materials.
 * @property {float} aspect The aspect of the terrain in radians.  0 is East, pi/2 is North, pi is West, 3pi/2 is South.  Only available for globe materials.
 */
struct czm_materialInput
{
    float s;
    vec2 st;
    vec3 str;
    vec3 normalEC;
    mat3 tangentToEyeMatrix;
    vec3 positionToEyeEC;
    float height;
    float slope;
    float aspect;
};
`;var wo=`/**
 * Struct for representing a material for a {@link Model}. The model
 * rendering pipeline will pass this struct between material, custom shaders,
 * and lighting stages. This is not to be confused with {@link czm_material}
 * which is used by the older Fabric materials system, although they are similar.
 * <p>
 * All color values (diffuse, specular, emissive) are in linear color space.
 * </p>
 *
 * @name czm_modelMaterial
 * @glslStruct
 *
 * @property {vec3} diffuse Incoming light that scatters evenly in all directions.
 * @property {float} alpha Alpha of this material. 0.0 is completely transparent; 1.0 is completely opaque.
 * @property {vec3} specular Color of reflected light at normal incidence in PBR materials. This is sometimes referred to as f0 in the literature.
 * @property {float} roughness A number from 0.0 to 1.0 representing how rough the surface is. Values near 0.0 produce glossy surfaces, while values near 1.0 produce rough surfaces.
 * @property {vec3} normalEC Surface's normal in eye coordinates. It is used for effects such as normal mapping. The default is the surface's unmodified normal.
 * @property {float} occlusion Ambient occlusion recieved at this point on the material. 1.0 means fully lit, 0.0 means fully occluded.
 * @property {vec3} emissive Light emitted by the material equally in all directions. The default is vec3(0.0), which emits no light.
 */
struct czm_modelMaterial {
    vec3 diffuse;
    float alpha;
    vec3 specular;
    float roughness;
    vec3 normalEC;
    float occlusion;
    vec3 emissive;
};
`;var yo=`/**
 * Struct for representing the output of a custom vertex shader.
 * 
 * @name czm_modelVertexOutput
 * @glslStruct
 *
 * @see {@link CustomShader}
 * @see {@link Model}
 *
 * @property {vec3} positionMC The position of the vertex in model coordinates
 * @property {float} pointSize A custom value for gl_PointSize. This is only used for point primitives. 
 */
struct czm_modelVertexOutput {
  vec3 positionMC;
  float pointSize;
};
`;var Ho=`/**
 * Parameters for {@link czm_pbrLighting}
 *
 * @name czm_material
 * @glslStruct
 *
 * @property {vec3} diffuseColor the diffuse color of the material for the lambert term of the rendering equation
 * @property {float} roughness a value from 0.0 to 1.0 that indicates how rough the surface of the material is.
 * @property {vec3} f0 The reflectance of the material at normal incidence
 */
struct czm_pbrParameters
{
    vec3 diffuseColor;
    float roughness;
    vec3 f0;
};
`;var zo=`/**
 * DOC_TBA
 *
 * @name czm_ray
 * @glslStruct
 */
struct czm_ray
{
    vec3 origin;
    vec3 direction;
};
`;var Xo=`/**
 * DOC_TBA
 *
 * @name czm_raySegment
 * @glslStruct
 */
struct czm_raySegment
{
    float start;
    float stop;
};

/**
 * DOC_TBA
 *
 * @name czm_emptyRaySegment
 * @glslConstant 
 */
const czm_raySegment czm_emptyRaySegment = czm_raySegment(-czm_infinity, -czm_infinity);

/**
 * DOC_TBA
 *
 * @name czm_fullRaySegment
 * @glslConstant 
 */
const czm_raySegment czm_fullRaySegment = czm_raySegment(0.0, czm_infinity);
`;var Lo=`struct czm_shadowParameters
{
#ifdef USE_CUBE_MAP_SHADOW
    vec3 texCoords;
#else
    vec2 texCoords;
#endif

    float depthBias;
    float depth;
    float nDotL;
    vec2 texelStepSize;
    float normalShadingSmooth;
    float darkness;
};
`;var vo=`/**
 * Converts an HSB color (hue, saturation, brightness) to RGB
 * HSB <-> RGB conversion with minimal branching: {@link http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl}
 *
 * @name czm_HSBToRGB
 * @glslFunction
 * 
 * @param {vec3} hsb The color in HSB.
 *
 * @returns {vec3} The color in RGB.
 *
 * @example
 * vec3 hsb = czm_RGBToHSB(rgb);
 * hsb.z *= 0.1;
 * rgb = czm_HSBToRGB(hsb);
 */

const vec4 K_HSB2RGB = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);

vec3 czm_HSBToRGB(vec3 hsb)
{
    vec3 p = abs(fract(hsb.xxx + K_HSB2RGB.xyz) * 6.0 - K_HSB2RGB.www);
    return hsb.z * mix(K_HSB2RGB.xxx, clamp(p - K_HSB2RGB.xxx, 0.0, 1.0), hsb.y);
}
`;var Po=`/**
 * Converts an HSL color (hue, saturation, lightness) to RGB
 * HSL <-> RGB conversion: {@link http://www.chilliant.com/rgb2hsv.html}
 *
 * @name czm_HSLToRGB
 * @glslFunction
 * 
 * @param {vec3} rgb The color in HSL.
 *
 * @returns {vec3} The color in RGB.
 *
 * @example
 * vec3 hsl = czm_RGBToHSL(rgb);
 * hsl.z *= 0.1;
 * rgb = czm_HSLToRGB(hsl);
 */

vec3 hueToRGB(float hue)
{
    float r = abs(hue * 6.0 - 3.0) - 1.0;
    float g = 2.0 - abs(hue * 6.0 - 2.0);
    float b = 2.0 - abs(hue * 6.0 - 4.0);
    return clamp(vec3(r, g, b), 0.0, 1.0);
}

vec3 czm_HSLToRGB(vec3 hsl)
{
    vec3 rgb = hueToRGB(hsl.x);
    float c = (1.0 - abs(2.0 * hsl.z - 1.0)) * hsl.y;
    return (rgb - 0.5) * c + hsl.z;
}
`;var Ko=`/**
 * Converts an RGB color to HSB (hue, saturation, brightness)
 * HSB <-> RGB conversion with minimal branching: {@link http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl}
 *
 * @name czm_RGBToHSB
 * @glslFunction
 * 
 * @param {vec3} rgb The color in RGB.
 *
 * @returns {vec3} The color in HSB.
 *
 * @example
 * vec3 hsb = czm_RGBToHSB(rgb);
 * hsb.z *= 0.1;
 * rgb = czm_HSBToRGB(hsb);
 */

const vec4 K_RGB2HSB = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);

vec3 czm_RGBToHSB(vec3 rgb)
{
    vec4 p = mix(vec4(rgb.bg, K_RGB2HSB.wz), vec4(rgb.gb, K_RGB2HSB.xy), step(rgb.b, rgb.g));
    vec4 q = mix(vec4(p.xyw, rgb.r), vec4(rgb.r, p.yzx), step(p.x, rgb.r));

    float d = q.x - min(q.w, q.y);
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + czm_epsilon7)), d / (q.x + czm_epsilon7), q.x);
}
`;var qo=`/**
 * Converts an RGB color to HSL (hue, saturation, lightness)
 * HSL <-> RGB conversion: {@link http://www.chilliant.com/rgb2hsv.html}
 *
 * @name czm_RGBToHSL
 * @glslFunction
 * 
 * @param {vec3} rgb The color in RGB.
 *
 * @returns {vec3} The color in HSL.
 *
 * @example
 * vec3 hsl = czm_RGBToHSL(rgb);
 * hsl.z *= 0.1;
 * rgb = czm_HSLToRGB(hsl);
 */
 
vec3 RGBtoHCV(vec3 rgb)
{
    // Based on work by Sam Hocevar and Emil Persson
    vec4 p = (rgb.g < rgb.b) ? vec4(rgb.bg, -1.0, 2.0 / 3.0) : vec4(rgb.gb, 0.0, -1.0 / 3.0);
    vec4 q = (rgb.r < p.x) ? vec4(p.xyw, rgb.r) : vec4(rgb.r, p.yzx);
    float c = q.x - min(q.w, q.y);
    float h = abs((q.w - q.y) / (6.0 * c + czm_epsilon7) + q.z);
    return vec3(h, c, q.x);
}

vec3 czm_RGBToHSL(vec3 rgb)
{
    vec3 hcv = RGBtoHCV(rgb);
    float l = hcv.z - hcv.y * 0.5;
    float s = hcv.y / (1.0 - abs(l * 2.0 - 1.0) + czm_epsilon7);
    return vec3(hcv.x, s, l);
}
`;var $o=`/**
 * Converts an RGB color to CIE Yxy.
 * <p>The conversion is described in
 * {@link http://content.gpwiki.org/index.php/D3DBook:High-Dynamic_Range_Rendering#Luminance_Transform|Luminance Transform}
 * </p>
 * 
 * @name czm_RGBToXYZ
 * @glslFunction
 * 
 * @param {vec3} rgb The color in RGB.
 *
 * @returns {vec3} The color in CIE Yxy.
 *
 * @example
 * vec3 xyz = czm_RGBToXYZ(rgb);
 * xyz.x = max(xyz.x - luminanceThreshold, 0.0);
 * rgb = czm_XYZToRGB(xyz);
 */
vec3 czm_RGBToXYZ(vec3 rgb)
{
    const mat3 RGB2XYZ = mat3(0.4124, 0.2126, 0.0193,
                              0.3576, 0.7152, 0.1192,
                              0.1805, 0.0722, 0.9505);
    vec3 xyz = RGB2XYZ * rgb;
    vec3 Yxy;
    Yxy.r = xyz.g;
    float temp = dot(vec3(1.0), xyz);
    Yxy.gb = xyz.rg / temp;
    return Yxy;
}
`;var ZV=`/**
 * Converts a CIE Yxy color to RGB.
 * <p>The conversion is described in
 * {@link http://content.gpwiki.org/index.php/D3DBook:High-Dynamic_Range_Rendering#Luminance_Transform|Luminance Transform}
 * </p>
 * 
 * @name czm_XYZToRGB
 * @glslFunction
 * 
 * @param {vec3} Yxy The color in CIE Yxy.
 *
 * @returns {vec3} The color in RGB.
 *
 * @example
 * vec3 xyz = czm_RGBToXYZ(rgb);
 * xyz.x = max(xyz.x - luminanceThreshold, 0.0);
 * rgb = czm_XYZToRGB(xyz);
 */
vec3 czm_XYZToRGB(vec3 Yxy)
{
    const mat3 XYZ2RGB = mat3( 3.2405, -0.9693,  0.0556,
                              -1.5371,  1.8760, -0.2040,
                              -0.4985,  0.0416,  1.0572);
    vec3 xyz;
    xyz.r = Yxy.r * Yxy.g / Yxy.b;
    xyz.g = Yxy.r;
    xyz.b = Yxy.r * (1.0 - Yxy.g - Yxy.b) / Yxy.b;
    
    return XYZ2RGB * xyz;
}
`;var mV=`// See:
//    https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/

vec3 czm_acesTonemapping(vec3 color) {
    float g = 0.985;
    float a = 0.065;
    float b = 0.0001;
    float c = 0.433;
    float d = 0.238;

    color = (color * (color + a) - b) / (color * (g * color + c) + d);

    color = clamp(color, 0.0, 1.0);

    return color;
}
`;var hV=`/**
 * @private
 */
float czm_alphaWeight(float a)
{
    float z = (gl_FragCoord.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];

    // See Weighted Blended Order-Independent Transparency for examples of different weighting functions:
    // http://jcgt.org/published/0002/02/09/
    return pow(a + 0.01, 4.0) + max(1e-2, min(3.0 * 1e3, 0.003 / (1e-5 + pow(abs(z) / 200.0, 4.0))));
}
`;var YV=`/**
 * Procedural anti-aliasing by blurring two colors that meet at a sharp edge.
 *
 * @name czm_antialias
 * @glslFunction
 *
 * @param {vec4} color1 The color on one side of the edge.
 * @param {vec4} color2 The color on the other side of the edge.
 * @param {vec4} currentcolor The current color, either <code>color1</code> or <code>color2</code>.
 * @param {float} dist The distance to the edge in texture coordinates.
 * @param {float} [fuzzFactor=0.1] Controls the blurriness between the two colors.
 * @returns {vec4} The anti-aliased color.
 *
 * @example
 * // GLSL declarations
 * vec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist, float fuzzFactor);
 * vec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist);
 *
 * // get the color for a material that has a sharp edge at the line y = 0.5 in texture space
 * float dist = abs(textureCoordinates.t - 0.5);
 * vec4 currentColor = mix(bottomColor, topColor, step(0.5, textureCoordinates.t));
 * vec4 color = czm_antialias(bottomColor, topColor, currentColor, dist, 0.1);
 */
vec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist, float fuzzFactor)
{
    float val1 = clamp(dist / fuzzFactor, 0.0, 1.0);
    float val2 = clamp((dist - 0.5) / fuzzFactor, 0.0, 1.0);
    val1 = val1 * (1.0 - val2);
    val1 = val1 * val1 * (3.0 - (2.0 * val1));
    val1 = pow(val1, 0.5); //makes the transition nicer
    
    vec4 midColor = (color1 + color2) * 0.5;
    return mix(midColor, currentColor, val1);
}

vec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist)
{
    return czm_antialias(color1, color2, currentColor, dist, 0.1);
}
`;var nV=`/**
 * Approximately computes spherical coordinates given a normal.
 * Uses approximate inverse trigonometry for speed and consistency,
 * since inverse trigonometry can differ from vendor-to-vendor and when compared with the CPU.
 *
 * @name czm_approximateSphericalCoordinates
 * @glslFunction
 *
 * @param {vec3} normal arbitrary-length normal.
 *
 * @returns {vec2} Approximate latitude and longitude spherical coordinates.
 */
vec2 czm_approximateSphericalCoordinates(vec3 normal) {
    // Project into plane with vertical for latitude
    float latitudeApproximation = czm_fastApproximateAtan(sqrt(normal.x * normal.x + normal.y * normal.y), normal.z);
    float longitudeApproximation = czm_fastApproximateAtan(normal.x, normal.y);
    return vec2(latitudeApproximation, longitudeApproximation);
}
`;var iV=`/**
 * Determines if the fragment is back facing
 *
 * @name czm_backFacing
 * @glslFunction 
 * 
 * @returns {bool} <code>true</code> if the fragment is back facing; otherwise, <code>false</code>.
 */
bool czm_backFacing()
{
    // !gl_FrontFacing doesn't work as expected on Mac/Intel so use the more verbose form instead. See https://github.com/CesiumGS/cesium/pull/8494.
    return gl_FrontFacing == false;
}
`;var AV=`/**
 * Branchless ternary operator to be used when it's inexpensive to explicitly
 * evaluate both possibilities for a float expression.
 *
 * @name czm_branchFreeTernary
 * @glslFunction
 *
 * @param {bool} comparison A comparison statement
 * @param {float} a Value to return if the comparison is true.
 * @param {float} b Value to return if the comparison is false.
 *
 * @returns {float} equivalent of comparison ? a : b
 */
float czm_branchFreeTernary(bool comparison, float a, float b) {
    float useA = float(comparison);
    return a * useA + b * (1.0 - useA);
}

/**
 * Branchless ternary operator to be used when it's inexpensive to explicitly
 * evaluate both possibilities for a vec2 expression.
 *
 * @name czm_branchFreeTernary
 * @glslFunction
 *
 * @param {bool} comparison A comparison statement
 * @param {vec2} a Value to return if the comparison is true.
 * @param {vec2} b Value to return if the comparison is false.
 *
 * @returns {vec2} equivalent of comparison ? a : b
 */
vec2 czm_branchFreeTernary(bool comparison, vec2 a, vec2 b) {
    float useA = float(comparison);
    return a * useA + b * (1.0 - useA);
}

/**
 * Branchless ternary operator to be used when it's inexpensive to explicitly
 * evaluate both possibilities for a vec3 expression.
 *
 * @name czm_branchFreeTernary
 * @glslFunction
 *
 * @param {bool} comparison A comparison statement
 * @param {vec3} a Value to return if the comparison is true.
 * @param {vec3} b Value to return if the comparison is false.
 *
 * @returns {vec3} equivalent of comparison ? a : b
 */
vec3 czm_branchFreeTernary(bool comparison, vec3 a, vec3 b) {
    float useA = float(comparison);
    return a * useA + b * (1.0 - useA);
}

/**
 * Branchless ternary operator to be used when it's inexpensive to explicitly
 * evaluate both possibilities for a vec4 expression.
 *
 * @name czm_branchFreeTernary
 * @glslFunction
 *
 * @param {bool} comparison A comparison statement
 * @param {vec3} a Value to return if the comparison is true.
 * @param {vec3} b Value to return if the comparison is false.
 *
 * @returns {vec3} equivalent of comparison ? a : b
 */
vec4 czm_branchFreeTernary(bool comparison, vec4 a, vec4 b) {
    float useA = float(comparison);
    return a * useA + b * (1.0 - useA);
}
`;var aV=`
vec4 czm_cascadeColor(vec4 weights)
{
    return vec4(1.0, 0.0, 0.0, 1.0) * weights.x +
           vec4(0.0, 1.0, 0.0, 1.0) * weights.y +
           vec4(0.0, 0.0, 1.0, 1.0) * weights.z +
           vec4(1.0, 0.0, 1.0, 1.0) * weights.w;
}
`;var tV=`
uniform vec4 shadowMap_cascadeDistances;

float czm_cascadeDistance(vec4 weights)
{
    return dot(shadowMap_cascadeDistances, weights);
}
`;var WV=`
uniform mat4 shadowMap_cascadeMatrices[4];

mat4 czm_cascadeMatrix(vec4 weights)
{
    return shadowMap_cascadeMatrices[0] * weights.x +
           shadowMap_cascadeMatrices[1] * weights.y +
           shadowMap_cascadeMatrices[2] * weights.z +
           shadowMap_cascadeMatrices[3] * weights.w;
}
`;var eV=`
uniform vec4 shadowMap_cascadeSplits[2];

vec4 czm_cascadeWeights(float depthEye)
{
    // One component is set to 1.0 and all others set to 0.0.
    vec4 near = step(shadowMap_cascadeSplits[0], vec4(depthEye));
    vec4 far = step(depthEye, shadowMap_cascadeSplits[1]);
    return near * far;
}
`;var oV=`/**
 * DOC_TBA
 *
 * @name czm_columbusViewMorph
 * @glslFunction
 */
vec4 czm_columbusViewMorph(vec4 position2D, vec4 position3D, float time)
{
    // Just linear for now.
    vec3 p = mix(position2D.xyz, position3D.xyz, time);
    return vec4(p, 1.0);
}
`;var VV=`/**
 * Returns a position in model coordinates relative to eye taking into
 * account the current scene mode: 3D, 2D, or Columbus view.
 * <p>
 * This uses standard position attributes, <code>position3DHigh</code>, 
 * <code>position3DLow</code>, <code>position2DHigh</code>, and <code>position2DLow</code>, 
 * and should be used when writing a vertex shader for an {@link Appearance}.
 * </p>
 *
 * @name czm_computePosition
 * @glslFunction
 *
 * @returns {vec4} The position relative to eye.
 *
 * @example
 * vec4 p = czm_computePosition();
 * v_positionEC = (czm_modelViewRelativeToEye * p).xyz;
 * gl_Position = czm_modelViewProjectionRelativeToEye * p;
 *
 * @see czm_translateRelativeToEye
 */
vec4 czm_computePosition();
`;var lV=`/**
 * @private
 */
vec2 cordic(float angle)
{
// Scale the vector by the appropriate factor for the 24 iterations to follow.
    vec2 vector = vec2(6.0725293500888267e-1, 0.0);
// Iteration 1
    float sense = (angle < 0.0) ? -1.0 : 1.0;
 //   float factor = sense * 1.0;  // 2^-0
    mat2 rotation = mat2(1.0, sense, -sense, 1.0);
    vector = rotation * vector;
    angle -= sense * 7.8539816339744828e-1;  // atan(2^-0)
// Iteration 2
    sense = (angle < 0.0) ? -1.0 : 1.0;
    float factor = sense * 5.0e-1;  // 2^-1
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 4.6364760900080609e-1;  // atan(2^-1)
// Iteration 3
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 2.5e-1;  // 2^-2
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 2.4497866312686414e-1;  // atan(2^-2)
// Iteration 4
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 1.25e-1;  // 2^-3
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 1.2435499454676144e-1;  // atan(2^-3)
// Iteration 5
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 6.25e-2;  // 2^-4
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 6.2418809995957350e-2;  // atan(2^-4)
// Iteration 6
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 3.125e-2;  // 2^-5
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 3.1239833430268277e-2;  // atan(2^-5)
// Iteration 7
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 1.5625e-2;  // 2^-6
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 1.5623728620476831e-2;  // atan(2^-6)
// Iteration 8
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 7.8125e-3;  // 2^-7
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 7.8123410601011111e-3;  // atan(2^-7)
// Iteration 9
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 3.90625e-3;  // 2^-8
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 3.9062301319669718e-3;  // atan(2^-8)
// Iteration 10
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 1.953125e-3;  // 2^-9
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 1.9531225164788188e-3;  // atan(2^-9)
// Iteration 11
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 9.765625e-4;  // 2^-10
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 9.7656218955931946e-4;  // atan(2^-10)
// Iteration 12
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 4.8828125e-4;  // 2^-11
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 4.8828121119489829e-4;  // atan(2^-11)
// Iteration 13
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 2.44140625e-4;  // 2^-12
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 2.4414062014936177e-4;  // atan(2^-12)
// Iteration 14
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 1.220703125e-4;  // 2^-13
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 1.2207031189367021e-4;  // atan(2^-13)
// Iteration 15
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 6.103515625e-5;  // 2^-14
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 6.1035156174208773e-5;  // atan(2^-14)
// Iteration 16
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 3.0517578125e-5;  // 2^-15
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 3.0517578115526096e-5;  // atan(2^-15)
// Iteration 17
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 1.52587890625e-5;  // 2^-16
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 1.5258789061315762e-5;  // atan(2^-16)
// Iteration 18
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 7.62939453125e-6;  // 2^-17
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 7.6293945311019700e-6;  // atan(2^-17)
// Iteration 19
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 3.814697265625e-6;  // 2^-18
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 3.8146972656064961e-6;  // atan(2^-18)
// Iteration 20
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 1.9073486328125e-6;  // 2^-19
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 1.9073486328101870e-6;  // atan(2^-19)
// Iteration 21
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 9.5367431640625e-7;  // 2^-20
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 9.5367431640596084e-7;  // atan(2^-20)
// Iteration 22
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 4.76837158203125e-7;  // 2^-21
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 4.7683715820308884e-7;  // atan(2^-21)
// Iteration 23
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 2.384185791015625e-7;  // 2^-22
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
    angle -= sense * 2.3841857910155797e-7;  // atan(2^-22)
// Iteration 24
    sense = (angle < 0.0) ? -1.0 : 1.0;
    factor = sense * 1.1920928955078125e-7;  // 2^-23
    rotation[0][1] = factor;
    rotation[1][0] = -factor;
    vector = rotation * vector;
//    angle -= sense * 1.1920928955078068e-7;  // atan(2^-23)

    return vector;
}

/**
 * Computes the cosine and sine of the provided angle using the CORDIC algorithm.
 *
 * @name czm_cosineAndSine
 * @glslFunction
 *
 * @param {float} angle The angle in radians.
 *
 * @returns {vec2} The resulting cosine of the angle (as the x coordinate) and sine of the angle (as the y coordinate).
 *
 * @example
 * vec2 v = czm_cosineAndSine(czm_piOverSix);
 * float cosine = v.x;
 * float sine = v.y;
 */
vec2 czm_cosineAndSine(float angle)
{
    if (angle < -czm_piOverTwo || angle > czm_piOverTwo)
    {
        if (angle < 0.0)
        {
            return -cordic(angle + czm_pi);
        }
        else
        {
            return -cordic(angle - czm_pi);
        }
    }
    else
    {
        return cordic(angle);
    }
}
`;var RV=`/**
 * Decompresses texture coordinates that were packed into a single float.
 *
 * @name czm_decompressTextureCoordinates
 * @glslFunction
 *
 * @param {float} encoded The compressed texture coordinates.
 * @returns {vec2} The decompressed texture coordinates.
 */
 vec2 czm_decompressTextureCoordinates(float encoded)
 {
    float temp = encoded / 4096.0;
    float xZeroTo4095 = floor(temp);
    float stx = xZeroTo4095 / 4095.0;
    float sty = (encoded - xZeroTo4095 * 4096.0) / 4095.0;
    return vec2(stx, sty);
 }
`;var GV=`/**
 * Get default parameters for physically based rendering. These defaults
 * describe a rough dielectric (non-metal) surface (e.g. rough plastic).
 *
 * @return {czm_pbrParameters} Default parameters for {@link czm_pbrLighting}
 */
czm_pbrParameters czm_defaultPbrMaterial()
{
    czm_pbrParameters results;
    results.diffuseColor = vec3(1.0);
    results.roughness = 1.0;

    const vec3 REFLECTANCE_DIELECTRIC = vec3(0.04);
    results.f0 = REFLECTANCE_DIELECTRIC;
    return results;
}
`;var FV=`// emulated noperspective
#if (__VERSION__ == 300 || defined(GL_EXT_frag_depth)) && !defined(LOG_DEPTH)
out float v_WindowZ;
#endif

/**
 * Emulates GL_DEPTH_CLAMP, which is not available in WebGL 1 or 2.
 * GL_DEPTH_CLAMP clamps geometry that is outside the near and far planes, 
 * capping the shadow volume. More information here: 
 * https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_depth_clamp.txt.
 *
 * When GL_EXT_frag_depth is available we emulate GL_DEPTH_CLAMP by ensuring 
 * no geometry gets clipped by setting the clip space z value to 0.0 and then
 * sending the unaltered screen space z value (using emulated noperspective
 * interpolation) to the frag shader where it is clamped to [0,1] and then
 * written with gl_FragDepth (see czm_writeDepthClamp). This technique is based on:
 * https://stackoverflow.com/questions/5960757/how-to-emulate-gl-depth-clamp-nv.
 *
 * When GL_EXT_frag_depth is not available, which is the case on some mobile 
 * devices, we must attempt to fix this only in the vertex shader. 
 * The approach is to clamp the z value to the far plane, which closes the 
 * shadow volume but also distorts the geometry, so there can still be artifacts
 * on frustum seams.
 *
 * @name czm_depthClamp
 * @glslFunction
 *
 * @param {vec4} coords The vertex in clip coordinates.
 * @returns {vec4} The modified vertex.
 *
 * @example
 * gl_Position = czm_depthClamp(czm_modelViewProjection * vec4(position, 1.0));
 *
 * @see czm_writeDepthClamp
 */
vec4 czm_depthClamp(vec4 coords)
{
#ifndef LOG_DEPTH
#if __VERSION__ == 300 || defined(GL_EXT_frag_depth)
    v_WindowZ = (0.5 * (coords.z / coords.w) + 0.5) * coords.w;
    coords.z = 0.0;
#else
    coords.z = min(coords.z, coords.w);
#endif
#endif
    return coords;
}
`;var dV=`/**
 * Computes a 3x3 rotation matrix that transforms vectors from an ellipsoid's east-north-up coordinate system 
 * to eye coordinates.  In east-north-up coordinates, x points east, y points north, and z points along the 
 * surface normal.  East-north-up can be used as an ellipsoid's tangent space for operations such as bump mapping.
 * <br /><br />
 * The ellipsoid is assumed to be centered at the model coordinate's origin.
 *
 * @name czm_eastNorthUpToEyeCoordinates
 * @glslFunction
 *
 * @param {vec3} positionMC The position on the ellipsoid in model coordinates.
 * @param {vec3} normalEC The normalized ellipsoid surface normal, at <code>positionMC</code>, in eye coordinates.
 *
 * @returns {mat3} A 3x3 rotation matrix that transforms vectors from the east-north-up coordinate system to eye coordinates.
 *
 * @example
 * // Transform a vector defined in the east-north-up coordinate 
 * // system, (0, 0, 1) which is the surface normal, to eye 
 * // coordinates.
 * mat3 m = czm_eastNorthUpToEyeCoordinates(positionMC, normalEC);
 * vec3 normalEC = m * vec3(0.0, 0.0, 1.0);
 */
mat3 czm_eastNorthUpToEyeCoordinates(vec3 positionMC, vec3 normalEC)
{
    vec3 tangentMC = normalize(vec3(-positionMC.y, positionMC.x, 0.0));  // normalized surface tangent in model coordinates
    vec3 tangentEC = normalize(czm_normal3D * tangentMC);                // normalized surface tangent in eye coordinates
    vec3 bitangentEC = normalize(cross(normalEC, tangentEC));            // normalized surface bitangent in eye coordinates

    return mat3(
        tangentEC.x,   tangentEC.y,   tangentEC.z,
        bitangentEC.x, bitangentEC.y, bitangentEC.z,
        normalEC.x,    normalEC.y,    normalEC.z);
}
`;var sV=`/**
 * DOC_TBA
 *
 * @name czm_ellipsoidContainsPoint
 * @glslFunction
 *
 */
bool czm_ellipsoidContainsPoint(vec3 ellipsoid_inverseRadii, vec3 point)
{
    vec3 scaled = ellipsoid_inverseRadii * (czm_inverseModelView * vec4(point, 1.0)).xyz;
    return (dot(scaled, scaled) <= 1.0);
}
`;var rV=`/**
 * DOC_TBA
 *
 * @name czm_ellipsoidWgs84TextureCoordinates
 * @glslFunction
 */
vec2 czm_ellipsoidWgs84TextureCoordinates(vec3 normal)
{
    return vec2(atan(normal.y, normal.x) * czm_oneOverTwoPi + 0.5, asin(normal.z) * czm_oneOverPi + 0.5);
}
`;var NV=`/**
 * Compares <code>left</code> and <code>right</code> componentwise. Returns <code>true</code>
 * if they are within <code>epsilon</code> and <code>false</code> otherwise. The inputs
 * <code>left</code> and <code>right</code> can be <code>float</code>s, <code>vec2</code>s,
 * <code>vec3</code>s, or <code>vec4</code>s.
 *
 * @name czm_equalsEpsilon
 * @glslFunction
 *
 * @param {} left The first vector.
 * @param {} right The second vector.
 * @param {float} epsilon The epsilon to use for equality testing.
 * @returns {bool} <code>true</code> if the components are within <code>epsilon</code> and <code>false</code> otherwise.
 *
 * @example
 * // GLSL declarations
 * bool czm_equalsEpsilon(float left, float right, float epsilon);
 * bool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon);
 * bool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon);
 * bool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon);
 */
bool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon) {
    return all(lessThanEqual(abs(left - right), vec4(epsilon)));
}

bool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon) {
    return all(lessThanEqual(abs(left - right), vec3(epsilon)));
}

bool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon) {
    return all(lessThanEqual(abs(left - right), vec2(epsilon)));
}

bool czm_equalsEpsilon(float left, float right, float epsilon) {
    return (abs(left - right) <= epsilon);
}
`;var EV=`/**
 * DOC_TBA
 *
 * @name czm_eyeOffset
 * @glslFunction
 *
 * @param {vec4} positionEC DOC_TBA.
 * @param {vec3} eyeOffset DOC_TBA.
 *
 * @returns {vec4} DOC_TBA.
 */
vec4 czm_eyeOffset(vec4 positionEC, vec3 eyeOffset)
{
    // This equation is approximate in x and y.
    vec4 p = positionEC;
    vec4 zEyeOffset = normalize(p) * eyeOffset.z;
    p.xy += eyeOffset.xy + zEyeOffset.xy;
    p.z += zEyeOffset.z;
    return p;
}
`;var kV=`/**
 * Transforms a position from eye to window coordinates.  The transformation
 * from eye to clip coordinates is done using {@link czm_projection}.
 * The transform from normalized device coordinates to window coordinates is
 * done using {@link czm_viewportTransformation}, which assumes a depth range
 * of <code>near = 0</code> and <code>far = 1</code>.
 * <br /><br />
 * This transform is useful when there is a need to manipulate window coordinates
 * in a vertex shader as done by {@link BillboardCollection}.
 *
 * @name czm_eyeToWindowCoordinates
 * @glslFunction
 *
 * @param {vec4} position The position in eye coordinates to transform.
 *
 * @returns {vec4} The transformed position in window coordinates.
 *
 * @see czm_modelToWindowCoordinates
 * @see czm_projection
 * @see czm_viewportTransformation
 * @see BillboardCollection
 *
 * @example
 * vec4 positionWC = czm_eyeToWindowCoordinates(positionEC);
 */
vec4 czm_eyeToWindowCoordinates(vec4 positionEC)
{
    vec4 q = czm_projection * positionEC;                        // clip coordinates
    q.xyz /= q.w;                                                // normalized device coordinates
    q.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz; // window coordinates
    return q;
}
`;var UV=`/**
 * Approxiamtes atan over the range [0, 1]. Safe to flip output for negative input.
 *
 * Based on Michal Drobot's approximation from ShaderFastLibs, which in turn is based on
 * "Efficient approximations for the arctangent function," Rajan, S. Sichun Wang Inkol, R. Joyal, A., May 2006.
 * Adapted from ShaderFastLibs under MIT License.
 *
 * Chosen for the following characteristics over range [0, 1]:
 * - basically no error at 0 and 1, important for getting around range limit (naive atan2 via atan requires infinite range atan)
 * - no visible artifacts from first-derivative discontinuities, unlike latitude via range-reduced sqrt asin approximations (at equator)
 *
 * The original code is x * (-0.1784 * abs(x) - 0.0663 * x * x + 1.0301);
 * Removed the abs() in here because it isn't needed, the input range is guaranteed as [0, 1] by how we're approximating atan2.
 *
 * @name czm_fastApproximateAtan
 * @glslFunction
 *
 * @param {float} x Value between 0 and 1 inclusive.
 *
 * @returns {float} Approximation of atan(x)
 */
float czm_fastApproximateAtan(float x) {
    return x * (-0.1784 * x - 0.0663 * x * x + 1.0301);
}

/**
 * Approximation of atan2.
 *
 * Range reduction math based on nvidia's cg reference implementation for atan2: http://developer.download.nvidia.com/cg/atan2.html
 * However, we replaced their atan curve with Michael Drobot's (see above).
 *
 * @name czm_fastApproximateAtan
 * @glslFunction
 *
 * @param {float} x Value between -1 and 1 inclusive.
 * @param {float} y Value between -1 and 1 inclusive.
 *
 * @returns {float} Approximation of atan2(x, y)
 */
float czm_fastApproximateAtan(float x, float y) {
    // atan approximations are usually only reliable over [-1, 1], or, in our case, [0, 1] due to modifications.
    // So range-reduce using abs and by flipping whether x or y is on top.
    float t = abs(x); // t used as swap and atan result.
    float opposite = abs(y);
    float adjacent = max(t, opposite);
    opposite = min(t, opposite);

    t = czm_fastApproximateAtan(opposite / adjacent);

    // Undo range reduction
    t = czm_branchFreeTernary(abs(y) > abs(x), czm_piOverTwo - t, t);
    t = czm_branchFreeTernary(x < 0.0, czm_pi - t, t);
    t = czm_branchFreeTernary(y < 0.0, -t, t);
    return t;
}
`;var JV=`/**
 * Gets the color with fog at a distance from the camera.
 *
 * @name czm_fog
 * @glslFunction
 *
 * @param {float} distanceToCamera The distance to the camera in meters.
 * @param {vec3} color The original color.
 * @param {vec3} fogColor The color of the fog.
 *
 * @returns {vec3} The color adjusted for fog at the distance from the camera.
 */
vec3 czm_fog(float distanceToCamera, vec3 color, vec3 fogColor)
{
    float scalar = distanceToCamera * czm_fogDensity;
    float fog = 1.0 - exp(-(scalar * scalar));
    return mix(color, fogColor, fog);
}

/**
 * Gets the color with fog at a distance from the camera.
 *
 * @name czm_fog
 * @glslFunction
 *
 * @param {float} distanceToCamera The distance to the camera in meters.
 * @param {vec3} color The original color.
 * @param {vec3} fogColor The color of the fog.
 * @param {float} fogModifierConstant A constant to modify the appearance of fog.
 *
 * @returns {vec3} The color adjusted for fog at the distance from the camera.
 */
vec3 czm_fog(float distanceToCamera, vec3 color, vec3 fogColor, float fogModifierConstant)
{
    float scalar = distanceToCamera * czm_fogDensity;
    float fog = 1.0 - exp(-((fogModifierConstant * scalar + fogModifierConstant) * (scalar * (1.0 + fogModifierConstant))));
    return mix(color, fogColor, fog);
}
`;var QV=`/**
 * Converts a color from RGB space to linear space.
 *
 * @name czm_gammaCorrect
 * @glslFunction
 *
 * @param {vec3} color The color in RGB space.
 * @returns {vec3} The color in linear space.
 */
vec3 czm_gammaCorrect(vec3 color) {
#ifdef HDR
    color = pow(color, vec3(czm_gamma));
#endif
    return color;
}

vec4 czm_gammaCorrect(vec4 color) {
#ifdef HDR
    color.rgb = pow(color.rgb, vec3(czm_gamma));
#endif
    return color;
}
`;var CV=`/**
 * DOC_TBA
 *
 * @name czm_geodeticSurfaceNormal
 * @glslFunction
 *
 * @param {vec3} positionOnEllipsoid DOC_TBA
 * @param {vec3} ellipsoidCenter DOC_TBA
 * @param {vec3} oneOverEllipsoidRadiiSquared DOC_TBA
 * 
 * @returns {vec3} DOC_TBA.
 */
vec3 czm_geodeticSurfaceNormal(vec3 positionOnEllipsoid, vec3 ellipsoidCenter, vec3 oneOverEllipsoidRadiiSquared)
{
    return normalize((positionOnEllipsoid - ellipsoidCenter) * oneOverEllipsoidRadiiSquared);
}
`;var BV=`/**
 * An czm_material with default values. Every material's czm_getMaterial
 * should use this default material as a base for the material it returns.
 * The default normal value is given by materialInput.normalEC.
 *
 * @name czm_getDefaultMaterial
 * @glslFunction
 *
 * @param {czm_materialInput} input The input used to construct the default material.
 *
 * @returns {czm_material} The default material.
 *
 * @see czm_materialInput
 * @see czm_material
 * @see czm_getMaterial
 */
czm_material czm_getDefaultMaterial(czm_materialInput materialInput)
{
    czm_material material;
    material.diffuse = vec3(0.0);
    material.specular = 0.0;
    material.shininess = 1.0;
    material.normal = materialInput.normalEC;
    material.emission = vec3(0.0);
    material.alpha = 1.0;
    return material;
}
`;var gV=`/**
 * Calculates the intensity of diffusely reflected light.
 *
 * @name czm_getLambertDiffuse
 * @glslFunction
 *
 * @param {vec3} lightDirectionEC Unit vector pointing to the light source in eye coordinates.
 * @param {vec3} normalEC The surface normal in eye coordinates.
 *
 * @returns {float} The intensity of the diffuse reflection.
 *
 * @see czm_phong
 *
 * @example
 * float diffuseIntensity = czm_getLambertDiffuse(lightDirectionEC, normalEC);
 * float specularIntensity = czm_getSpecular(lightDirectionEC, toEyeEC, normalEC, 200);
 * vec3 color = (diffuseColor * diffuseIntensity) + (specularColor * specularIntensity);
 */
float czm_getLambertDiffuse(vec3 lightDirectionEC, vec3 normalEC)
{
    return max(dot(lightDirectionEC, normalEC), 0.0);
}
`;var IV=`/**
 * Calculates the specular intensity of reflected light.
 *
 * @name czm_getSpecular
 * @glslFunction
 *
 * @param {vec3} lightDirectionEC Unit vector pointing to the light source in eye coordinates.
 * @param {vec3} toEyeEC Unit vector pointing to the eye position in eye coordinates.
 * @param {vec3} normalEC The surface normal in eye coordinates.
 * @param {float} shininess The sharpness of the specular reflection.  Higher values create a smaller, more focused specular highlight.
 *
 * @returns {float} The intensity of the specular highlight.
 *
 * @see czm_phong
 *
 * @example
 * float diffuseIntensity = czm_getLambertDiffuse(lightDirectionEC, normalEC);
 * float specularIntensity = czm_getSpecular(lightDirectionEC, toEyeEC, normalEC, 200);
 * vec3 color = (diffuseColor * diffuseIntensity) + (specularColor * specularIntensity);
 */
float czm_getSpecular(vec3 lightDirectionEC, vec3 toEyeEC, vec3 normalEC, float shininess)
{
    vec3 toReflectedLight = reflect(-lightDirectionEC, normalEC);
    float specular = max(dot(toReflectedLight, toEyeEC), 0.0);

    // pow has undefined behavior if both parameters <= 0.
    // Prevent this by making sure shininess is at least czm_epsilon2.
    return pow(specular, max(shininess, czm_epsilon2));
}
`;var pV=`/**
 * @private
 */
vec4 czm_getWaterNoise(sampler2D normalMap, vec2 uv, float time, float angleInRadians)
{
    float cosAngle = cos(angleInRadians);
    float sinAngle = sin(angleInRadians);

    // time dependent sampling directions
    vec2 s0 = vec2(1.0/17.0, 0.0);
    vec2 s1 = vec2(-1.0/29.0, 0.0);
    vec2 s2 = vec2(1.0/101.0, 1.0/59.0);
    vec2 s3 = vec2(-1.0/109.0, -1.0/57.0);

    // rotate sampling direction by specified angle
    s0 = vec2((cosAngle * s0.x) - (sinAngle * s0.y), (sinAngle * s0.x) + (cosAngle * s0.y));
    s1 = vec2((cosAngle * s1.x) - (sinAngle * s1.y), (sinAngle * s1.x) + (cosAngle * s1.y));
    s2 = vec2((cosAngle * s2.x) - (sinAngle * s2.y), (sinAngle * s2.x) + (cosAngle * s2.y));
    s3 = vec2((cosAngle * s3.x) - (sinAngle * s3.y), (sinAngle * s3.x) + (cosAngle * s3.y));

    vec2 uv0 = (uv/103.0) + (time * s0);
    vec2 uv1 = uv/107.0 + (time * s1) + vec2(0.23);
    vec2 uv2 = uv/vec2(897.0, 983.0) + (time * s2) + vec2(0.51);
    vec2 uv3 = uv/vec2(991.0, 877.0) + (time * s3) + vec2(0.71);

    uv0 = fract(uv0);
    uv1 = fract(uv1);
    uv2 = fract(uv2);
    uv3 = fract(uv3);
    vec4 noise = (texture(normalMap, uv0)) +
                 (texture(normalMap, uv1)) +
                 (texture(normalMap, uv2)) +
                 (texture(normalMap, uv3));

    // average and scale to between -1 and 1
    return ((noise / 4.0) - 0.5) * 2.0;
}
`;var jV=`/**
 * Adjusts the hue of a color.
 * 
 * @name czm_hue
 * @glslFunction
 * 
 * @param {vec3} rgb The color.
 * @param {float} adjustment The amount to adjust the hue of the color in radians.
 *
 * @returns {float} The color with the hue adjusted.
 *
 * @example
 * vec3 adjustHue = czm_hue(color, czm_pi); // The same as czm_hue(color, -czm_pi)
 */
vec3 czm_hue(vec3 rgb, float adjustment)
{
    const mat3 toYIQ = mat3(0.299,     0.587,     0.114,
                            0.595716, -0.274453, -0.321263,
                            0.211456, -0.522591,  0.311135);
    const mat3 toRGB = mat3(1.0,  0.9563,  0.6210,
                            1.0, -0.2721, -0.6474,
                            1.0, -1.107,   1.7046);
    
    vec3 yiq = toYIQ * rgb;
    float hue = atan(yiq.z, yiq.y) + adjustment;
    float chroma = sqrt(yiq.z * yiq.z + yiq.y * yiq.y);
    
    vec3 color = vec3(yiq.x, chroma * cos(hue), chroma * sin(hue));
    return toRGB * color;
}
`;var cV=`/**
 * Converts a color in linear space to RGB space.
 *
 * @name czm_inverseGamma
 * @glslFunction
 *
 * @param {vec3} color The color in linear space.
 * @returns {vec3} The color in RGB space.
 */
vec3 czm_inverseGamma(vec3 color) {
    return pow(color, vec3(1.0 / czm_gamma));
}
`;var TV=`/**
 * Determines if a time interval is empty.
 *
 * @name czm_isEmpty
 * @glslFunction 
 * 
 * @param {czm_raySegment} interval The interval to test.
 * 
 * @returns {bool} <code>true</code> if the time interval is empty; otherwise, <code>false</code>.
 *
 * @example
 * bool b0 = czm_isEmpty(czm_emptyRaySegment);      // true
 * bool b1 = czm_isEmpty(czm_raySegment(0.0, 1.0)); // false
 * bool b2 = czm_isEmpty(czm_raySegment(1.0, 1.0)); // false, contains 1.0.
 */
bool czm_isEmpty(czm_raySegment interval)
{
    return (interval.stop < 0.0);
}
`;var MV=`/**
 * Determines if a time interval is empty.
 *
 * @name czm_isFull
 * @glslFunction 
 * 
 * @param {czm_raySegment} interval The interval to test.
 * 
 * @returns {bool} <code>true</code> if the time interval is empty; otherwise, <code>false</code>.
 *
 * @example
 * bool b0 = czm_isEmpty(czm_emptyRaySegment);      // true
 * bool b1 = czm_isEmpty(czm_raySegment(0.0, 1.0)); // false
 * bool b2 = czm_isEmpty(czm_raySegment(1.0, 1.0)); // false, contains 1.0.
 */
bool czm_isFull(czm_raySegment interval)
{
    return (interval.start == 0.0 && interval.stop == czm_infinity);
}
`;var SV=`/**
 * Computes the fraction of a Web Wercator rectangle at which a given geodetic latitude is located.
 *
 * @name czm_latitudeToWebMercatorFraction
 * @glslFunction
 *
 * @param {float} latitude The geodetic latitude, in radians.
 * @param {float} southMercatorY The Web Mercator coordinate of the southern boundary of the rectangle.
 * @param {float} oneOverMercatorHeight The total height of the rectangle in Web Mercator coordinates.
 *
 * @returns {float} The fraction of the rectangle at which the latitude occurs.  If the latitude is the southern
 *          boundary of the rectangle, the return value will be zero.  If it is the northern boundary, the return
 *          value will be 1.0.  Latitudes in between are mapped according to the Web Mercator projection.
 */ 
float czm_latitudeToWebMercatorFraction(float latitude, float southMercatorY, float oneOverMercatorHeight)
{
    float sinLatitude = sin(latitude);
    float mercatorY = 0.5 * log((1.0 + sinLatitude) / (1.0 - sinLatitude));
    
    return (mercatorY - southMercatorY) * oneOverMercatorHeight;
}
`;var DV=`/**
 * Computes distance from an point in 2D to a line in 2D.
 *
 * @name czm_lineDistance
 * @glslFunction
 *
 * param {vec2} point1 A point along the line.
 * param {vec2} point2 A point along the line.
 * param {vec2} point A point that may or may not be on the line.
 * returns {float} The distance from the point to the line.
 */
float czm_lineDistance(vec2 point1, vec2 point2, vec2 point) {
    return abs((point2.y - point1.y) * point.x - (point2.x - point1.x) * point.y + point2.x * point1.y - point2.y * point1.x) / distance(point2, point1);
}
`;var fV=`/**
 * Converts a linear RGB color to an sRGB color.
 *
 * @param {vec3|vec4} linearIn The color in linear color space.
 * @returns {vec3|vec4} The color in sRGB color space. The vector type matches the input.
 */
vec3 czm_linearToSrgb(vec3 linearIn) 
{
    return pow(linearIn, vec3(1.0/2.2));
}

vec4 czm_linearToSrgb(vec4 linearIn) 
{
    vec3 srgbOut = pow(linearIn.rgb, vec3(1.0/2.2));
    return vec4(srgbOut, linearIn.a);
}
`;var uV=`/**
 * Computes the luminance of a color. 
 *
 * @name czm_luminance
 * @glslFunction
 *
 * @param {vec3} rgb The color.
 * 
 * @returns {float} The luminance.
 *
 * @example
 * float light = czm_luminance(vec3(0.0)); // 0.0
 * float dark = czm_luminance(vec3(1.0));  // ~1.0 
 */
float czm_luminance(vec3 rgb)
{
    // Algorithm from Chapter 10 of Graphics Shaders.
    const vec3 W = vec3(0.2125, 0.7154, 0.0721);
    return dot(rgb, W);
}
`;var bV=`/**
 * Computes the size of a pixel in meters at a distance from the eye.
 * <p>
 * Use this version when passing in a custom pixel ratio. For example, passing in 1.0 will return meters per native device pixel.
 * </p>
 * @name czm_metersPerPixel
 * @glslFunction
 *
 * @param {vec3} positionEC The position to get the meters per pixel in eye coordinates.
 * @param {float} pixelRatio The scaling factor from pixel space to coordinate space
 *
 * @returns {float} The meters per pixel at positionEC.
 */
float czm_metersPerPixel(vec4 positionEC, float pixelRatio)
{
    float width = czm_viewport.z;
    float height = czm_viewport.w;
    float pixelWidth;
    float pixelHeight;

    float top = czm_frustumPlanes.x;
    float bottom = czm_frustumPlanes.y;
    float left = czm_frustumPlanes.z;
    float right = czm_frustumPlanes.w;

    if (czm_sceneMode == czm_sceneMode2D || czm_orthographicIn3D == 1.0)
    {
        float frustumWidth = right - left;
        float frustumHeight = top - bottom;
        pixelWidth = frustumWidth / width;
        pixelHeight = frustumHeight / height;
    }
    else
    {
        float distanceToPixel = -positionEC.z;
        float inverseNear = 1.0 / czm_currentFrustum.x;
        float tanTheta = top * inverseNear;
        pixelHeight = 2.0 * distanceToPixel * tanTheta / height;
        tanTheta = right * inverseNear;
        pixelWidth = 2.0 * distanceToPixel * tanTheta / width;
    }

    return max(pixelWidth, pixelHeight) * pixelRatio;
}

/**
 * Computes the size of a pixel in meters at a distance from the eye.
 * <p>
 * Use this version when scaling by pixel ratio.
 * </p>
 * @name czm_metersPerPixel
 * @glslFunction
 *
 * @param {vec3} positionEC The position to get the meters per pixel in eye coordinates.
 *
 * @returns {float} The meters per pixel at positionEC.
 */
float czm_metersPerPixel(vec4 positionEC)
{
    return czm_metersPerPixel(positionEC, czm_pixelRatio);
}
`;var xV=`/**
 * Transforms a position from model to window coordinates.  The transformation
 * from model to clip coordinates is done using {@link czm_modelViewProjection}.
 * The transform from normalized device coordinates to window coordinates is
 * done using {@link czm_viewportTransformation}, which assumes a depth range
 * of <code>near = 0</code> and <code>far = 1</code>.
 * <br /><br />
 * This transform is useful when there is a need to manipulate window coordinates
 * in a vertex shader as done by {@link BillboardCollection}.
 * <br /><br />
 * This function should not be confused with {@link czm_viewportOrthographic},
 * which is an orthographic projection matrix that transforms from window 
 * coordinates to clip coordinates.
 *
 * @name czm_modelToWindowCoordinates
 * @glslFunction
 *
 * @param {vec4} position The position in model coordinates to transform.
 *
 * @returns {vec4} The transformed position in window coordinates.
 *
 * @see czm_eyeToWindowCoordinates
 * @see czm_modelViewProjection
 * @see czm_viewportTransformation
 * @see czm_viewportOrthographic
 * @see BillboardCollection
 *
 * @example
 * vec4 positionWC = czm_modelToWindowCoordinates(positionMC);
 */
vec4 czm_modelToWindowCoordinates(vec4 position)
{
    vec4 q = czm_modelViewProjection * position;                // clip coordinates
    q.xyz /= q.w;                                                // normalized device coordinates
    q.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz; // window coordinates
    return q;
}
`;var _V=`/**
 * DOC_TBA
 *
 * @name czm_multiplyWithColorBalance
 * @glslFunction
 */
vec3 czm_multiplyWithColorBalance(vec3 left, vec3 right)
{
    // Algorithm from Chapter 10 of Graphics Shaders.
    const vec3 W = vec3(0.2125, 0.7154, 0.0721);
    
    vec3 target = left * right;
    float leftLuminance = dot(left, W);
    float rightLuminance = dot(right, W);
    float targetLuminance = dot(target, W);
    
    return ((leftLuminance + rightLuminance) / (2.0 * targetLuminance)) * target;
}
`;var OV=`/**
 * Computes a value that scales with distance.  The scaling is clamped at the near and
 * far distances, and does not extrapolate.  This function works with the
 * {@link NearFarScalar} JavaScript class.
 *
 * @name czm_nearFarScalar
 * @glslFunction
 *
 * @param {vec4} nearFarScalar A vector with 4 components: Near distance (x), Near value (y), Far distance (z), Far value (w).
 * @param {float} cameraDistSq The square of the current distance from the camera.
 *
 * @returns {float} The value at this distance.
 */
float czm_nearFarScalar(vec4 nearFarScalar, float cameraDistSq)
{
    float valueAtMin = nearFarScalar.y;
    float valueAtMax = nearFarScalar.w;
    float nearDistanceSq = nearFarScalar.x * nearFarScalar.x;
    float farDistanceSq = nearFarScalar.z * nearFarScalar.z;

    float t = (cameraDistSq - nearDistanceSq) / (farDistanceSq - nearDistanceSq);

    t = pow(clamp(t, 0.0, 1.0), 0.2);

    return mix(valueAtMin, valueAtMax, t);
}
`;var wV=` /**
  * Decodes a unit-length vector in 'oct' encoding to a normalized 3-component Cartesian vector.
  * The 'oct' encoding is described in "A Survey of Efficient Representations of Independent Unit Vectors",
  * Cigolle et al 2014: http://jcgt.org/published/0003/02/01/
  *
  * @name czm_octDecode
  * @param {vec2} encoded The oct-encoded, unit-length vector
  * @param {float} range The maximum value of the SNORM range. The encoded vector is stored in log2(rangeMax+1) bits.
  * @returns {vec3} The decoded and normalized vector
  */
  vec3 czm_octDecode(vec2 encoded, float range)
  {
      if (encoded.x == 0.0 && encoded.y == 0.0) {
          return vec3(0.0, 0.0, 0.0);
      }

     encoded = encoded / range * 2.0 - 1.0;
     vec3 v = vec3(encoded.x, encoded.y, 1.0 - abs(encoded.x) - abs(encoded.y));
     if (v.z < 0.0)
     {
         v.xy = (1.0 - abs(v.yx)) * czm_signNotZero(v.xy);
     }

     return normalize(v);
  }

/**
 * Decodes a unit-length vector in 'oct' encoding to a normalized 3-component Cartesian vector.
 * The 'oct' encoding is described in "A Survey of Efficient Representations of Independent Unit Vectors",
 * Cigolle et al 2014: http://jcgt.org/published/0003/02/01/
 *
 * @name czm_octDecode
 * @param {vec2} encoded The oct-encoded, unit-length vector
 * @returns {vec3} The decoded and normalized vector
 */
 vec3 czm_octDecode(vec2 encoded)
 {
    return czm_octDecode(encoded, 255.0);
 }

 /**
 * Decodes a unit-length vector in 'oct' encoding packed into a floating-point number to a normalized 3-component Cartesian vector.
 * The 'oct' encoding is described in "A Survey of Efficient Representations of Independent Unit Vectors",
 * Cigolle et al 2014: http://jcgt.org/published/0003/02/01/
 *
 * @name czm_octDecode
 * @param {float} encoded The oct-encoded, unit-length vector
 * @returns {vec3} The decoded and normalized vector
 */
 vec3 czm_octDecode(float encoded)
 {
    float temp = encoded / 256.0;
    float x = floor(temp);
    float y = (temp - x) * 256.0;
    return czm_octDecode(vec2(x, y));
 }

/**
 * Decodes three unit-length vectors in 'oct' encoding packed into two floating-point numbers to normalized 3-component Cartesian vectors.
 * The 'oct' encoding is described in "A Survey of Efficient Representations of Independent Unit Vectors",
 * Cigolle et al 2014: http://jcgt.org/published/0003/02/01/
 *
 * @name czm_octDecode
 * @param {vec2} encoded The packed oct-encoded, unit-length vectors.
 * @param {vec3} vector1 One decoded and normalized vector.
 * @param {vec3} vector2 One decoded and normalized vector.
 * @param {vec3} vector3 One decoded and normalized vector.
 */
  void czm_octDecode(vec2 encoded, out vec3 vector1, out vec3 vector2, out vec3 vector3)
 {
    float temp = encoded.x / 65536.0;
    float x = floor(temp);
    float encodedFloat1 = (temp - x) * 65536.0;

    temp = encoded.y / 65536.0;
    float y = floor(temp);
    float encodedFloat2 = (temp - y) * 65536.0;

    vector1 = czm_octDecode(encodedFloat1);
    vector2 = czm_octDecode(encodedFloat2);
    vector3 = czm_octDecode(vec2(x, y));
 }

`;var yV=`/**
 * Packs a depth value into a vec3 that can be represented by unsigned bytes.
 *
 * @name czm_packDepth
 * @glslFunction
 *
 * @param {float} depth The floating-point depth.
 * @returns {vec3} The packed depth.
 */
vec4 czm_packDepth(float depth)
{
    // See Aras Pranckevi\u010Dius' post Encoding Floats to RGBA
    // http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/
    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;
    enc = fract(enc);
    enc -= enc.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);
    return enc;
}
`;var HV=`vec3 lambertianDiffuse(vec3 diffuseColor)
{
    return diffuseColor / czm_pi;
}

vec3 fresnelSchlick2(vec3 f0, vec3 f90, float VdotH)
{
    return f0 + (f90 - f0) * pow(clamp(1.0 - VdotH, 0.0, 1.0), 5.0);
}

float smithVisibilityG1(float NdotV, float roughness)
{
    // this is the k value for direct lighting.
    // for image based lighting it will be roughness^2 / 2
    float k = (roughness + 1.0) * (roughness + 1.0) / 8.0;
    return NdotV / (NdotV * (1.0 - k) + k);
}

float smithVisibilityGGX(float roughness, float NdotL, float NdotV)
{
    return (
        smithVisibilityG1(NdotL, roughness) *
        smithVisibilityG1(NdotV, roughness)
    );
}

float GGX(float roughness, float NdotH)
{
    float roughnessSquared = roughness * roughness;
    float f = (NdotH * roughnessSquared - NdotH) * NdotH + 1.0;
    return roughnessSquared / (czm_pi * f * f);
}

/**
 * Compute the diffuse and specular contributions using physically based
 * rendering. This function only handles direct lighting.
 * <p>
 * This function only handles the lighting calculations. Metallic/roughness
 * and specular/glossy must be handled separately. See {@czm_pbrMetallicRoughnessMaterial}, {@czm_pbrSpecularGlossinessMaterial} and {@czm_defaultPbrMaterial}
 * </p>
 *
 * @name czm_pbrlighting
 * @glslFunction
 *
 * @param {vec3} positionEC The position of the fragment in eye coordinates
 * @param {vec3} normalEC The surface normal in eye coordinates
 * @param {vec3} lightDirectionEC Unit vector pointing to the light source in eye coordinates.
 * @param {vec3} lightColorHdr radiance of the light source. This is a HDR value.
 * @param {czm_pbrParameters} The computed PBR parameters.
 * @return {vec3} The computed HDR color
 *
 * @example
 * czm_pbrParameters pbrParameters = czm_pbrMetallicRoughnessMaterial(
 *  baseColor,
 *  metallic,
 *  roughness
 * );
 * vec3 color = czm_pbrlighting(
 *  positionEC,
 *  normalEC,
 *  lightDirectionEC,
 *  lightColorHdr,
 *  pbrParameters);
 */
vec3 czm_pbrLighting(
    vec3 positionEC,
    vec3 normalEC,
    vec3 lightDirectionEC,
    vec3 lightColorHdr,
    czm_pbrParameters pbrParameters
)
{
    vec3 v = -normalize(positionEC);
    vec3 l = normalize(lightDirectionEC);
    vec3 h = normalize(v + l);
    vec3 n = normalEC;
    float NdotL = clamp(dot(n, l), 0.001, 1.0);
    float NdotV = abs(dot(n, v)) + 0.001;
    float NdotH = clamp(dot(n, h), 0.0, 1.0);
    float LdotH = clamp(dot(l, h), 0.0, 1.0);
    float VdotH = clamp(dot(v, h), 0.0, 1.0);

    vec3 f0 = pbrParameters.f0;
    float reflectance = max(max(f0.r, f0.g), f0.b);
    vec3 f90 = vec3(clamp(reflectance * 25.0, 0.0, 1.0));
    vec3 F = fresnelSchlick2(f0, f90, VdotH);

    float alpha = pbrParameters.roughness;
    float G = smithVisibilityGGX(alpha, NdotL, NdotV);
    float D = GGX(alpha, NdotH);
    vec3 specularContribution = F * G * D / (4.0 * NdotL * NdotV);

    vec3 diffuseColor = pbrParameters.diffuseColor;
    // F here represents the specular contribution
    vec3 diffuseContribution = (1.0 - F) * lambertianDiffuse(diffuseColor);

    // Lo = (diffuse + specular) * Li * NdotL
    return (diffuseContribution + specularContribution) * NdotL * lightColorHdr;
}
`;var zV=`/**
 * Compute parameters for physically based rendering using the
 * metallic/roughness workflow. All inputs are linear; sRGB texture values must
 * be decoded beforehand
 *
 * @name czm_pbrMetallicRoughnessMaterial
 * @glslFunction
 *
 * @param {vec3} baseColor For dielectrics, this is the base color. For metals, this is the f0 value (reflectance at normal incidence)
 * @param {float} metallic 0.0 indicates dielectric. 1.0 indicates metal. Values in between are allowed (e.g. to model rust or dirt);
 * @param {float} roughness A value between 0.0 and 1.0
 * @return {czm_pbrParameters} parameters to pass into {@link czm_pbrLighting}
 */
czm_pbrParameters czm_pbrMetallicRoughnessMaterial(
    vec3 baseColor,
    float metallic,
    float roughness
) 
{
    czm_pbrParameters results;

    // roughness is authored as perceptual roughness
    // square it to get material roughness
    roughness = clamp(roughness, 0.0, 1.0);
    results.roughness = roughness * roughness;

    // dielectrics use f0 = 0.04, metals use albedo as f0
    metallic = clamp(metallic, 0.0, 1.0);
    const vec3 REFLECTANCE_DIELECTRIC = vec3(0.04);
    vec3 f0 = mix(REFLECTANCE_DIELECTRIC, baseColor, metallic);
    results.f0 = f0;

    // diffuse only applies to dielectrics.
    results.diffuseColor = baseColor * (1.0 - f0) * (1.0 - metallic);

    return results;
}
`;var XV=`/**
 * Compute parameters for physically based rendering using the
 * specular/glossy workflow. All inputs are linear; sRGB texture values must
 * be decoded beforehand
 *
 * @name czm_pbrSpecularGlossinessMaterial
 * @glslFunction
 *
 * @param {vec3} diffuse The diffuse color for dielectrics (non-metals)
 * @param {vec3} specular The reflectance at normal incidence (f0)
 * @param {float} glossiness A number from 0.0 to 1.0 indicating how smooth the surface is.
 * @return {czm_pbrParameters} parameters to pass into {@link czm_pbrLighting}
 */
czm_pbrParameters czm_pbrSpecularGlossinessMaterial(
    vec3 diffuse,
    vec3 specular,
    float glossiness
) 
{
    czm_pbrParameters results;

    // glossiness is the opposite of roughness, but easier for artists to use.
    float roughness = 1.0 - glossiness;
    results.roughness = roughness * roughness;

    results.diffuseColor = diffuse * (1.0 - max(max(specular.r, specular.g), specular.b));
    results.f0 = specular;

    return results;
}
`;var LV=`float czm_private_getLambertDiffuseOfMaterial(vec3 lightDirectionEC, czm_material material)
{
    return czm_getLambertDiffuse(lightDirectionEC, material.normal);
}

float czm_private_getSpecularOfMaterial(vec3 lightDirectionEC, vec3 toEyeEC, czm_material material)
{
    return czm_getSpecular(lightDirectionEC, toEyeEC, material.normal, material.shininess);
}

/**
 * Computes a color using the Phong lighting model.
 *
 * @name czm_phong
 * @glslFunction
 *
 * @param {vec3} toEye A normalized vector from the fragment to the eye in eye coordinates.
 * @param {czm_material} material The fragment's material.
 *
 * @returns {vec4} The computed color.
 *
 * @example
 * vec3 positionToEyeEC = // ...
 * czm_material material = // ...
 * vec3 lightDirectionEC = // ...
 * out_FragColor = czm_phong(normalize(positionToEyeEC), material, lightDirectionEC);
 *
 * @see czm_getMaterial
 */
vec4 czm_phong(vec3 toEye, czm_material material, vec3 lightDirectionEC)
{
    // Diffuse from directional light sources at eye (for top-down)
    float diffuse = czm_private_getLambertDiffuseOfMaterial(vec3(0.0, 0.0, 1.0), material);
    if (czm_sceneMode == czm_sceneMode3D) {
        // (and horizon views in 3D)
        diffuse += czm_private_getLambertDiffuseOfMaterial(vec3(0.0, 1.0, 0.0), material);
    }

    float specular = czm_private_getSpecularOfMaterial(lightDirectionEC, toEye, material);

    // Temporary workaround for adding ambient.
    vec3 materialDiffuse = material.diffuse * 0.5;

    vec3 ambient = materialDiffuse;
    vec3 color = ambient + material.emission;
    color += materialDiffuse * diffuse * czm_lightColor;
    color += material.specular * specular * czm_lightColor;

    return vec4(color, material.alpha);
}

vec4 czm_private_phong(vec3 toEye, czm_material material, vec3 lightDirectionEC)
{
    float diffuse = czm_private_getLambertDiffuseOfMaterial(lightDirectionEC, material);
    float specular = czm_private_getSpecularOfMaterial(lightDirectionEC, toEye, material);

    vec3 ambient = vec3(0.0);
    vec3 color = ambient + material.emission;
    color += material.diffuse * diffuse * czm_lightColor;
    color += material.specular * specular * czm_lightColor;

    return vec4(color, material.alpha);
}
`;var vV=`/**
 * Computes distance from a point to a plane.
 *
 * @name czm_planeDistance
 * @glslFunction
 *
 * param {vec4} plane A Plane in Hessian Normal Form. See Plane.js
 * param {vec3} point A point in the same space as the plane.
 * returns {float} The distance from the point to the plane.
 */
float czm_planeDistance(vec4 plane, vec3 point) {
    return (dot(plane.xyz, point) + plane.w);
}

/**
 * Computes distance from a point to a plane.
 *
 * @name czm_planeDistance
 * @glslFunction
 *
 * param {vec3} planeNormal Normal for a plane in Hessian Normal Form. See Plane.js
 * param {float} planeDistance Distance for a plane in Hessian Normal form. See Plane.js
 * param {vec3} point A point in the same space as the plane.
 * returns {float} The distance from the point to the plane.
 */
float czm_planeDistance(vec3 planeNormal, float planeDistance, vec3 point) {
    return (dot(planeNormal, point) + planeDistance);
}
`;var PV=`/**
 * Computes the point along a ray at the given time.  <code>time</code> can be positive, negative, or zero.
 *
 * @name czm_pointAlongRay
 * @glslFunction
 *
 * @param {czm_ray} ray The ray to compute the point along.
 * @param {float} time The time along the ray.
 * 
 * @returns {vec3} The point along the ray at the given time.
 * 
 * @example
 * czm_ray ray = czm_ray(vec3(0.0), vec3(1.0, 0.0, 0.0)); // origin, direction
 * vec3 v = czm_pointAlongRay(ray, 2.0); // (2.0, 0.0, 0.0)
 */
vec3 czm_pointAlongRay(czm_ray ray, float time)
{
    return ray.origin + (time * ray.direction);
}
`;var KV=`/**
 * DOC_TBA
 *
 * @name czm_rayEllipsoidIntersectionInterval
 * @glslFunction
 */
czm_raySegment czm_rayEllipsoidIntersectionInterval(czm_ray ray, vec3 ellipsoid_center, vec3 ellipsoid_inverseRadii)
{
   // ray and ellipsoid center in eye coordinates.  radii in model coordinates.
    vec3 q = ellipsoid_inverseRadii * (czm_inverseModelView * vec4(ray.origin, 1.0)).xyz;
    vec3 w = ellipsoid_inverseRadii * (czm_inverseModelView * vec4(ray.direction, 0.0)).xyz;

    q = q - ellipsoid_inverseRadii * (czm_inverseModelView * vec4(ellipsoid_center, 1.0)).xyz;

    float q2 = dot(q, q);
    float qw = dot(q, w);

    if (q2 > 1.0) // Outside ellipsoid.
    {
        if (qw >= 0.0) // Looking outward or tangent (0 intersections).
        {
            return czm_emptyRaySegment;
        }
        else // qw < 0.0.
        {
            float qw2 = qw * qw;
            float difference = q2 - 1.0; // Positively valued.
            float w2 = dot(w, w);
            float product = w2 * difference;

            if (qw2 < product) // Imaginary roots (0 intersections).
            {
                return czm_emptyRaySegment;
            }
            else if (qw2 > product) // Distinct roots (2 intersections).
            {
                float discriminant = qw * qw - product;
                float temp = -qw + sqrt(discriminant); // Avoid cancellation.
                float root0 = temp / w2;
                float root1 = difference / temp;
                if (root0 < root1)
                {
                    czm_raySegment i = czm_raySegment(root0, root1);
                    return i;
                }
                else
                {
                    czm_raySegment i = czm_raySegment(root1, root0);
                    return i;
                }
            }
            else // qw2 == product.  Repeated roots (2 intersections).
            {
                float root = sqrt(difference / w2);
                czm_raySegment i = czm_raySegment(root, root);
                return i;
            }
        }
    }
    else if (q2 < 1.0) // Inside ellipsoid (2 intersections).
    {
        float difference = q2 - 1.0; // Negatively valued.
        float w2 = dot(w, w);
        float product = w2 * difference; // Negatively valued.
        float discriminant = qw * qw - product;
        float temp = -qw + sqrt(discriminant); // Positively valued.
        czm_raySegment i = czm_raySegment(0.0, temp / w2);
        return i;
    }
    else // q2 == 1.0. On ellipsoid.
    {
        if (qw < 0.0) // Looking inward.
        {
            float w2 = dot(w, w);
            czm_raySegment i = czm_raySegment(0.0, -qw / w2);
            return i;
        }
        else // qw >= 0.0.  Looking outward or tangent.
        {
            return czm_emptyRaySegment;
        }
    }
}
`;var qV=`/**
 * Compute the intersection interval of a ray with a sphere.
 *
 * @name czm_raySphereIntersectionInterval
 * @glslFunction
 *
 * @param {czm_ray} ray The ray.
 * @param {vec3} center The center of the sphere.
 * @param {float} radius The radius of the sphere.
 * @return {czm_raySegment} The intersection interval of the ray with the sphere.
 */
czm_raySegment czm_raySphereIntersectionInterval(czm_ray ray, vec3 center, float radius)
{
    vec3 o = ray.origin;
    vec3 d = ray.direction;

    vec3 oc = o - center;

    float a = dot(d, d);
    float b = 2.0 * dot(d, oc);
    float c = dot(oc, oc) - (radius * radius);

    float det = (b * b) - (4.0 * a * c);

    if (det < 0.0) {
        return czm_emptyRaySegment;
    }

    float sqrtDet = sqrt(det);

    float t0 = (-b - sqrtDet) / (2.0 * a);
    float t1 = (-b + sqrtDet) / (2.0 * a);

    czm_raySegment result = czm_raySegment(t0, t1);
    return result;
}
`;var $V=`float czm_readDepth(sampler2D depthTexture, vec2 texCoords)
{
    return czm_reverseLogDepth(texture(depthTexture, texCoords).r);
}
`;var Zl=`/**
 * Reads a value previously transformed with {@link czm_writeNonPerspective}
 * by dividing it by \`w\`, the value used in the perspective divide.
 * This function is intended to be called in a fragment shader to access a
 * \`varying\` that should not be subject to perspective interpolation.
 * For example, screen-space texture coordinates. The value should have been
 * previously written in the vertex shader with a call to
 * {@link czm_writeNonPerspective}.
 *
 * @name czm_readNonPerspective
 * @glslFunction
 *
 * @param {float|vec2|vec3|vec4} value The non-perspective value to be read.
 * @param {float} oneOverW One over the perspective divide value, \`w\`. Usually this is simply \`gl_FragCoord.w\`.
 * @returns {float|vec2|vec3|vec4} The usable value.
 */
float czm_readNonPerspective(float value, float oneOverW) {
    return value * oneOverW;
}

vec2 czm_readNonPerspective(vec2 value, float oneOverW) {
    return value * oneOverW;
}

vec3 czm_readNonPerspective(vec3 value, float oneOverW) {
    return value * oneOverW;
}

vec4 czm_readNonPerspective(vec4 value, float oneOverW) {
    return value * oneOverW;
}
`;var ml=`float czm_reverseLogDepth(float logZ)
{
#ifdef LOG_DEPTH
    float near = czm_currentFrustum.x;
    float far = czm_currentFrustum.y;
    float log2Depth = logZ * czm_log2FarDepthFromNearPlusOne;
    float depthFromNear = pow(2.0, log2Depth) - 1.0;
    return far * (1.0 - near / (depthFromNear + near)) / (far - near);
#endif
    return logZ;
}
`;var hl=`/**
 * Round a floating point value. This function exists because round() doesn't
 * exist in GLSL 1.00. 
 *
 * @param {float|vec2|vec3|vec4} value The value to round
 * @param {float|vec2|vec3|vec3} The rounded value. The type matches the input.
 */
float czm_round(float value) {
  return floor(value + 0.5);
}

vec2 czm_round(vec2 value) {
  return floor(value + 0.5);
}

vec3 czm_round(vec3 value) {
  return floor(value + 0.5);
}

vec4 czm_round(vec4 value) {
  return floor(value + 0.5);
}
`;var Yl=`/**
 * Samples the 4 neighboring pixels and return the weighted average.
 *
 * @private
 */
vec3 czm_sampleOctahedralProjectionWithFiltering(sampler2D projectedMap, vec2 textureSize, vec3 direction, float lod)
{
    direction /= dot(vec3(1.0), abs(direction));
    vec2 rev = abs(direction.zx) - vec2(1.0);
    vec2 neg = vec2(direction.x < 0.0 ? rev.x : -rev.x,
                    direction.z < 0.0 ? rev.y : -rev.y);
    vec2 uv = direction.y < 0.0 ? neg : direction.xz;
    vec2 coord = 0.5 * uv + vec2(0.5);
    vec2 pixel = 1.0 / textureSize;

    if (lod > 0.0)
    {
        // Each subseqeuent mip level is half the size
        float scale = 1.0 / pow(2.0, lod);
        float offset = ((textureSize.y + 1.0) / textureSize.x);

        coord.x *= offset;
        coord *= scale;

        coord.x += offset + pixel.x;
        coord.y += (1.0 - (1.0 / pow(2.0, lod - 1.0))) + pixel.y * (lod - 1.0) * 2.0;
    }
    else
    {
        coord.x *= (textureSize.y / textureSize.x);
    }

    // Do bilinear filtering
    #ifndef OES_texture_float_linear
        vec3 color1 = texture(projectedMap, coord + vec2(0.0, pixel.y)).rgb;
        vec3 color2 = texture(projectedMap, coord + vec2(pixel.x, 0.0)).rgb;
        vec3 color3 = texture(projectedMap, coord + pixel).rgb;
        vec3 color4 = texture(projectedMap, coord).rgb;

        vec2 texturePosition = coord * textureSize;

        float fu = fract(texturePosition.x);
        float fv = fract(texturePosition.y);

        vec3 average1 = mix(color4, color2, fu);
        vec3 average2 = mix(color1, color3, fu);

        vec3 color = mix(average1, average2, fv);
    #else
        vec3 color = texture(projectedMap, coord).rgb;
    #endif

    return color;
}


/**
 * Samples from a cube map that has been projected using an octahedral projection from the given direction.
 *
 * @name czm_sampleOctahedralProjection
 * @glslFunction
 *
 * @param {sampler2D} projectedMap The texture with the octahedral projected cube map.
 * @param {vec2} textureSize The width and height dimensions in pixels of the projected map.
 * @param {vec3} direction The normalized direction used to sample the cube map.
 * @param {float} lod The level of detail to sample.
 * @param {float} maxLod The maximum level of detail.
 * @returns {vec3} The color of the cube map at the direction.
 */
vec3 czm_sampleOctahedralProjection(sampler2D projectedMap, vec2 textureSize, vec3 direction, float lod, float maxLod) {
    float currentLod = floor(lod + 0.5);
    float nextLod = min(currentLod + 1.0, maxLod);

    vec3 colorCurrentLod = czm_sampleOctahedralProjectionWithFiltering(projectedMap, textureSize, direction, currentLod);
    vec3 colorNextLod = czm_sampleOctahedralProjectionWithFiltering(projectedMap, textureSize, direction, nextLod);

    return mix(colorNextLod, colorCurrentLod, nextLod - lod);
}
`;var nl=`/**
 * Adjusts the saturation of a color.
 * 
 * @name czm_saturation
 * @glslFunction
 * 
 * @param {vec3} rgb The color.
 * @param {float} adjustment The amount to adjust the saturation of the color.
 *
 * @returns {float} The color with the saturation adjusted.
 *
 * @example
 * vec3 greyScale = czm_saturation(color, 0.0);
 * vec3 doubleSaturation = czm_saturation(color, 2.0);
 */
vec3 czm_saturation(vec3 rgb, float adjustment)
{
    // Algorithm from Chapter 16 of OpenGL Shading Language
    const vec3 W = vec3(0.2125, 0.7154, 0.0721);
    vec3 intensity = vec3(dot(rgb, W));
    return mix(intensity, rgb, adjustment);
}
`;var il=`
float czm_sampleShadowMap(highp samplerCube shadowMap, vec3 d)
{
    return czm_unpackDepth(czm_textureCube(shadowMap, d));
}

float czm_sampleShadowMap(highp sampler2D shadowMap, vec2 uv)
{
#ifdef USE_SHADOW_DEPTH_TEXTURE
    return texture(shadowMap, uv).r;
#else
    return czm_unpackDepth(texture(shadowMap, uv));
#endif
}

float czm_shadowDepthCompare(samplerCube shadowMap, vec3 uv, float depth)
{
    return step(depth, czm_sampleShadowMap(shadowMap, uv));
}

float czm_shadowDepthCompare(sampler2D shadowMap, vec2 uv, float depth)
{
    return step(depth, czm_sampleShadowMap(shadowMap, uv));
}
`;var Al=`
float czm_private_shadowVisibility(float visibility, float nDotL, float normalShadingSmooth, float darkness)
{
#ifdef USE_NORMAL_SHADING
#ifdef USE_NORMAL_SHADING_SMOOTH
    float strength = clamp(nDotL / normalShadingSmooth, 0.0, 1.0);
#else
    float strength = step(0.0, nDotL);
#endif
    visibility *= strength;
#endif

    visibility = max(visibility, darkness);
    return visibility;
}

#ifdef USE_CUBE_MAP_SHADOW
float czm_shadowVisibility(samplerCube shadowMap, czm_shadowParameters shadowParameters)
{
    float depthBias = shadowParameters.depthBias;
    float depth = shadowParameters.depth;
    float nDotL = shadowParameters.nDotL;
    float normalShadingSmooth = shadowParameters.normalShadingSmooth;
    float darkness = shadowParameters.darkness;
    vec3 uvw = shadowParameters.texCoords;

    depth -= depthBias;
    float visibility = czm_shadowDepthCompare(shadowMap, uvw, depth);
    return czm_private_shadowVisibility(visibility, nDotL, normalShadingSmooth, darkness);
}
#else
float czm_shadowVisibility(sampler2D shadowMap, czm_shadowParameters shadowParameters)
{
    float depthBias = shadowParameters.depthBias;
    float depth = shadowParameters.depth;
    float nDotL = shadowParameters.nDotL;
    float normalShadingSmooth = shadowParameters.normalShadingSmooth;
    float darkness = shadowParameters.darkness;
    vec2 uv = shadowParameters.texCoords;

    depth -= depthBias;
#ifdef USE_SOFT_SHADOWS
    vec2 texelStepSize = shadowParameters.texelStepSize;
    float radius = 1.0;
    float dx0 = -texelStepSize.x * radius;
    float dy0 = -texelStepSize.y * radius;
    float dx1 = texelStepSize.x * radius;
    float dy1 = texelStepSize.y * radius;
    float visibility = (
        czm_shadowDepthCompare(shadowMap, uv, depth) +
        czm_shadowDepthCompare(shadowMap, uv + vec2(dx0, dy0), depth) +
        czm_shadowDepthCompare(shadowMap, uv + vec2(0.0, dy0), depth) +
        czm_shadowDepthCompare(shadowMap, uv + vec2(dx1, dy0), depth) +
        czm_shadowDepthCompare(shadowMap, uv + vec2(dx0, 0.0), depth) +
        czm_shadowDepthCompare(shadowMap, uv + vec2(dx1, 0.0), depth) +
        czm_shadowDepthCompare(shadowMap, uv + vec2(dx0, dy1), depth) +
        czm_shadowDepthCompare(shadowMap, uv + vec2(0.0, dy1), depth) +
        czm_shadowDepthCompare(shadowMap, uv + vec2(dx1, dy1), depth)
    ) * (1.0 / 9.0);
#else
    float visibility = czm_shadowDepthCompare(shadowMap, uv, depth);
#endif

    return czm_private_shadowVisibility(visibility, nDotL, normalShadingSmooth, darkness);
}
#endif
`;var al=`/**
 * Returns 1.0 if the given value is positive or zero, and -1.0 if it is negative.  This is similar to the GLSL
 * built-in function <code>sign</code> except that returns 1.0 instead of 0.0 when the input value is 0.0.
 * 
 * @name czm_signNotZero
 * @glslFunction
 *
 * @param {} value The value for which to determine the sign.
 * @returns {} 1.0 if the value is positive or zero, -1.0 if the value is negative.
 */
float czm_signNotZero(float value)
{
    return value >= 0.0 ? 1.0 : -1.0;
}

vec2 czm_signNotZero(vec2 value)
{
    return vec2(czm_signNotZero(value.x), czm_signNotZero(value.y));
}

vec3 czm_signNotZero(vec3 value)
{
    return vec3(czm_signNotZero(value.x), czm_signNotZero(value.y), czm_signNotZero(value.z));
}

vec4 czm_signNotZero(vec4 value)
{
    return vec4(czm_signNotZero(value.x), czm_signNotZero(value.y), czm_signNotZero(value.z), czm_signNotZero(value.w));
}
`;var tl=`/**
 * Computes a color from the third order spherical harmonic coefficients and a normalized direction vector.
 * <p>
 * The order of the coefficients is [L00, L1_1, L10, L11, L2_2, L2_1, L20, L21, L22].
 * </p>
 *
 * @name czm_sphericalHarmonics
 * @glslFunction
 *
 * @param {vec3} normal The normalized direction.
 * @param {vec3[9]} coefficients The third order spherical harmonic coefficients.
 * @returns {vec3} The color at the direction.
 *
 * @see https://graphics.stanford.edu/papers/envmap/envmap.pdf
 */
vec3 czm_sphericalHarmonics(vec3 normal, vec3 coefficients[9])
{
    vec3 L00 = coefficients[0];
    vec3 L1_1 = coefficients[1];
    vec3 L10 = coefficients[2];
    vec3 L11 = coefficients[3];
    vec3 L2_2 = coefficients[4];
    vec3 L2_1 = coefficients[5];
    vec3 L20 = coefficients[6];
    vec3 L21 = coefficients[7];
    vec3 L22 = coefficients[8];

    float x = normal.x;
    float y = normal.y;
    float z = normal.z;

    return
          L00
        + L1_1 * y
        + L10 * z
        + L11 * x
        + L2_2 * (y * x)
        + L2_1 * (y * z)
        + L20 * (3.0 * z * z - 1.0)
        + L21 * (z * x)
        + L22 * (x * x - y * y);
}
`;var Wl=`/**
 * Converts an sRGB color to a linear RGB color.
 *
 * @param {vec3|vec4} srgbIn The color in sRGB space
 * @returns {vec3|vec4} The color in linear color space. The vector type matches the input.
 */
vec3 czm_srgbToLinear(vec3 srgbIn)
{
    return pow(srgbIn, vec3(2.2));
}

vec4 czm_srgbToLinear(vec4 srgbIn) 
{
    vec3 linearOut = pow(srgbIn.rgb, vec3(2.2));
    return vec4(linearOut, srgbIn.a);
}
`;var el=`/**
 * Creates a matrix that transforms vectors from tangent space to eye space.
 *
 * @name czm_tangentToEyeSpaceMatrix
 * @glslFunction
 *
 * @param {vec3} normalEC The normal vector in eye coordinates.
 * @param {vec3} tangentEC The tangent vector in eye coordinates.
 * @param {vec3} bitangentEC The bitangent vector in eye coordinates.
 *
 * @returns {mat3} The matrix that transforms from tangent space to eye space.
 *
 * @example
 * mat3 tangentToEye = czm_tangentToEyeSpaceMatrix(normalEC, tangentEC, bitangentEC);
 * vec3 normal = tangentToEye * texture(normalMap, st).xyz;
 */
mat3 czm_tangentToEyeSpaceMatrix(vec3 normalEC, vec3 tangentEC, vec3 bitangentEC)
{
    vec3 normal = normalize(normalEC);
    vec3 tangent = normalize(tangentEC);
    vec3 bitangent = normalize(bitangentEC);
    return mat3(tangent.x  , tangent.y  , tangent.z,
                bitangent.x, bitangent.y, bitangent.z,
                normal.x   , normal.y   , normal.z);
}
`;var ol=`/**
 * A wrapper around the texture (WebGL2) / textureCube (WebGL1)
 * function to allow for WebGL 1 support.
 * 
 * @name czm_textureCube
 * @glslFunction
 *
 * @param {samplerCube} sampler The sampler.
 * @param {vec3} p The coordinates to sample the texture at.
 */
vec4 czm_textureCube(samplerCube sampler, vec3 p) {
#if __VERSION__ == 300
    return texture(sampler, p);
#else  
    return textureCube(sampler, p);
#endif
}`;var Vl=`/**
 * Transforms a plane.
 * 
 * @name czm_transformPlane
 * @glslFunction
 *
 * @param {vec4} plane The plane in Hessian Normal Form.
 * @param {mat4} transform The inverse-transpose of a transformation matrix.
 */
vec4 czm_transformPlane(vec4 plane, mat4 transform) {
    vec4 transformedPlane = transform * plane;
    // Convert the transformed plane to Hessian Normal Form
    float normalMagnitude = length(transformedPlane.xyz);
    return transformedPlane / normalMagnitude;
}
`;var ll=`/**
 * Translates a position (or any <code>vec3</code>) that was encoded with {@link EncodedCartesian3},
 * and then provided to the shader as separate <code>high</code> and <code>low</code> bits to
 * be relative to the eye.  As shown in the example, the position can then be transformed in eye
 * or clip coordinates using {@link czm_modelViewRelativeToEye} or {@link czm_modelViewProjectionRelativeToEye},
 * respectively.
 * <p>
 * This technique, called GPU RTE, eliminates jittering artifacts when using large coordinates as
 * described in {@link http://help.agi.com/AGIComponents/html/BlogPrecisionsPrecisions.htm|Precisions, Precisions}.
 * </p>
 *
 * @name czm_translateRelativeToEye
 * @glslFunction
 *
 * @param {vec3} high The position's high bits.
 * @param {vec3} low The position's low bits.
 * @returns {vec3} The position translated to be relative to the camera's position.
 *
 * @example
 * in vec3 positionHigh;
 * in vec3 positionLow;
 *
 * void main()
 * {
 *   vec4 p = czm_translateRelativeToEye(positionHigh, positionLow);
 *   gl_Position = czm_modelViewProjectionRelativeToEye * p;
 * }
 *
 * @see czm_modelViewRelativeToEye
 * @see czm_modelViewProjectionRelativeToEye
 * @see czm_computePosition
 * @see EncodedCartesian3
 */
vec4 czm_translateRelativeToEye(vec3 high, vec3 low)
{
    vec3 highDifference = high - czm_encodedCameraPositionMCHigh;
    vec3 lowDifference = low - czm_encodedCameraPositionMCLow;

    return vec4(highDifference + lowDifference, 1.0);
}
`;var Rl=`/**
 * @private
 */
vec4 czm_translucentPhong(vec3 toEye, czm_material material, vec3 lightDirectionEC)
{
    // Diffuse from directional light sources at eye (for top-down and horizon views)
    float diffuse = czm_getLambertDiffuse(vec3(0.0, 0.0, 1.0), material.normal);

    if (czm_sceneMode == czm_sceneMode3D) {
        // (and horizon views in 3D)
        diffuse += czm_getLambertDiffuse(vec3(0.0, 1.0, 0.0), material.normal);
    }

    diffuse = clamp(diffuse, 0.0, 1.0);

    float specular = czm_getSpecular(lightDirectionEC, toEye, material.normal, material.shininess);

    // Temporary workaround for adding ambient.
    vec3 materialDiffuse = material.diffuse * 0.5;

    vec3 ambient = materialDiffuse;
    vec3 color = ambient + material.emission;
    color += materialDiffuse * diffuse * czm_lightColor;
    color += material.specular * specular * czm_lightColor;

    return vec4(color, material.alpha);
}
`;var Gl=`/**
 * Returns the transpose of the matrix.  The input <code>matrix</code> can be
 * a <code>mat2</code>, <code>mat3</code>, or <code>mat4</code>.
 *
 * @name czm_transpose
 * @glslFunction
 *
 * @param {} matrix The matrix to transpose.
 *
 * @returns {} The transposed matrix.
 *
 * @example
 * // GLSL declarations
 * mat2 czm_transpose(mat2 matrix);
 * mat3 czm_transpose(mat3 matrix);
 * mat4 czm_transpose(mat4 matrix);
 *
 * // Transpose a 3x3 rotation matrix to find its inverse.
 * mat3 eastNorthUpToEye = czm_eastNorthUpToEyeCoordinates(
 *     positionMC, normalEC);
 * mat3 eyeToEastNorthUp = czm_transpose(eastNorthUpToEye);
 */
mat2 czm_transpose(mat2 matrix)
{
    return mat2(
        matrix[0][0], matrix[1][0],
        matrix[0][1], matrix[1][1]);
}

mat3 czm_transpose(mat3 matrix)
{
    return mat3(
        matrix[0][0], matrix[1][0], matrix[2][0],
        matrix[0][1], matrix[1][1], matrix[2][1],
        matrix[0][2], matrix[1][2], matrix[2][2]);
}

mat4 czm_transpose(mat4 matrix)
{
    return mat4(
        matrix[0][0], matrix[1][0], matrix[2][0], matrix[3][0],
        matrix[0][1], matrix[1][1], matrix[2][1], matrix[3][1],
        matrix[0][2], matrix[1][2], matrix[2][2], matrix[3][2],
        matrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]);
}
`;var Fl=`/**
 * Unpacks a vec4 depth value to a float in [0, 1) range.
 *
 * @name czm_unpackDepth
 * @glslFunction
 *
 * @param {vec4} packedDepth The packed depth.
 *
 * @returns {float} The floating-point depth in [0, 1) range.
 */
 float czm_unpackDepth(vec4 packedDepth)
 {
    // See Aras Pranckevi\u010Dius' post Encoding Floats to RGBA
    // http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/
    return dot(packedDepth, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));
 }
`;var dl=`/**
 * Unpack an IEEE 754 single-precision float that is packed as a little-endian unsigned normalized vec4.
 *
 * @name czm_unpackFloat
 * @glslFunction
 *
 * @param {vec4} packedFloat The packed float.
 *
 * @returns {float} The floating-point depth in arbitrary range.
 */
float czm_unpackFloat(vec4 packedFloat)
{
    // Convert to [0.0, 255.0] and round to integer
    packedFloat = floor(packedFloat * 255.0 + 0.5);
    float sign = 1.0 - step(128.0, packedFloat[3]) * 2.0;
    float exponent = 2.0 * mod(packedFloat[3], 128.0) + step(128.0, packedFloat[2]) - 127.0;    
    if (exponent == -127.0)
    {
        return 0.0;
    }
    float mantissa = mod(packedFloat[2], 128.0) * 65536.0 + packedFloat[1] * 256.0 + packedFloat[0] + float(0x800000);
    float result = sign * exp2(exponent - 23.0) * mantissa;
    return result;
}
`;var sl=`/**
 * Unpack unsigned integers of 1-4 bytes. in WebGL 1, there is no uint type,
 * so the return value is an int.
 * <p>
 * There are also precision limitations in WebGL 1. highp int is still limited
 * to 24 bits. Above the value of 2^24 = 16777216, precision loss may occur.
 * </p>
 *
 * @param {float|vec2|vec3|vec4} packed The packed value. For vectors, the components are listed in little-endian order.
 *
 * @return {int} The unpacked value.
 */
 int czm_unpackUint(float packedValue) {
   float rounded = czm_round(packedValue * 255.0);
   return int(rounded);
 }

 int czm_unpackUint(vec2 packedValue) {
   vec2 rounded = czm_round(packedValue * 255.0);
   return int(dot(rounded, vec2(1.0, 256.0)));
 }

 int czm_unpackUint(vec3 packedValue) {
   vec3 rounded = czm_round(packedValue * 255.0);
   return int(dot(rounded, vec3(1.0, 256.0, 65536.0)));
 }

 int czm_unpackUint(vec4 packedValue) {
   vec4 rounded = czm_round(packedValue * 255.0);
   return int(dot(rounded, vec4(1.0, 256.0, 65536.0, 16777216.0)));
 }
`;var rl=`/**
 * Transform metadata values following the EXT_structural_metadata spec
 * by multiplying by scale and adding the offset. Operations are always
 * performed component-wise, even for matrices.
 * 
 * @param {float|vec2|vec3|vec4|mat2|mat3|mat4} offset The offset to add
 * @param {float|vec2|vec3|vec4|mat2|mat3|mat4} scale The scale factor to multiply
 * @param {float|vec2|vec3|vec4|mat2|mat3|mat4} value The original value.
 *
 * @return {float|vec2|vec3|vec4|mat2|mat3|mat4} The transformed value of the same scalar/vector/matrix type as the input.
 */
float czm_valueTransform(float offset, float scale, float value) {
  return scale * value + offset;
}

vec2 czm_valueTransform(vec2 offset, vec2 scale, vec2 value) {
  return scale * value + offset;
}

vec3 czm_valueTransform(vec3 offset, vec3 scale, vec3 value) {
  return scale * value + offset;
}

vec4 czm_valueTransform(vec4 offset, vec4 scale, vec4 value) {
  return scale * value + offset;
}

mat2 czm_valueTransform(mat2 offset, mat2 scale, mat2 value) {
  return matrixCompMult(scale, value) + offset;
}

mat3 czm_valueTransform(mat3 offset, mat3 scale, mat3 value) {
  return matrixCompMult(scale, value) + offset;
}

mat4 czm_valueTransform(mat4 offset, mat4 scale, mat4 value) {
  return matrixCompMult(scale, value) + offset;
}
`;var Nl=`#ifdef LOG_DEPTH
// 1.0 at the near plane, increasing linearly from there.
out float v_depthFromNearPlusOne;
#ifdef SHADOW_MAP
out vec3 v_logPositionEC;
#endif
#endif

vec4 czm_updatePositionDepth(vec4 coords) {
#if defined(LOG_DEPTH)

#ifdef SHADOW_MAP
    vec3 logPositionEC = (czm_inverseProjection * coords).xyz;
    v_logPositionEC = logPositionEC;
#endif

    // With the very high far/near ratios used with the logarithmic depth
    // buffer, floating point rounding errors can cause linear depth values
    // to end up on the wrong side of the far plane, even for vertices that
    // are really nowhere near it. Since we always write a correct logarithmic
    // depth value in the fragment shader anyway, we just need to make sure
    // such errors don't cause the primitive to be clipped entirely before
    // we even get to the fragment shader.
    coords.z = clamp(coords.z / coords.w, -1.0, 1.0) * coords.w;
#endif

    return coords;
}

/**
 * Writes the logarithmic depth to gl_Position using the already computed gl_Position.
 *
 * @name czm_vertexLogDepth
 * @glslFunction
 */
void czm_vertexLogDepth()
{
#ifdef LOG_DEPTH
    v_depthFromNearPlusOne = (gl_Position.w - czm_currentFrustum.x) + 1.0;
    gl_Position = czm_updatePositionDepth(gl_Position);
#endif
}

/**
 * Writes the logarithmic depth to gl_Position using the provided clip coordinates.
 * <p>
 * An example use case for this function would be moving the vertex in window coordinates
 * before converting back to clip coordinates. Use the original vertex clip coordinates.
 * </p>
 * @name czm_vertexLogDepth
 * @glslFunction
 *
 * @param {vec4} clipCoords The vertex in clip coordinates.
 *
 * @example
 * czm_vertexLogDepth(czm_projection * vec4(positionEyeCoordinates, 1.0));
 */
void czm_vertexLogDepth(vec4 clipCoords)
{
#ifdef LOG_DEPTH
    v_depthFromNearPlusOne = (clipCoords.w - czm_currentFrustum.x) + 1.0;
    czm_updatePositionDepth(clipCoords);
#endif
}
`;var El=`vec4 czm_screenToEyeCoordinates(vec4 screenCoordinate)
{
    // Reconstruct NDC coordinates
    float x = 2.0 * screenCoordinate.x - 1.0;
    float y = 2.0 * screenCoordinate.y - 1.0;
    float z = (screenCoordinate.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];
    vec4 q = vec4(x, y, z, 1.0);

    // Reverse the perspective division to obtain clip coordinates.
    q /= screenCoordinate.w;

    // Reverse the projection transformation to obtain eye coordinates.
    if (!(czm_inverseProjection == mat4(0.0))) // IE and Edge sometimes do something weird with != between mat4s
    {
        q = czm_inverseProjection * q;
    }
    else
    {
        float top = czm_frustumPlanes.x;
        float bottom = czm_frustumPlanes.y;
        float left = czm_frustumPlanes.z;
        float right = czm_frustumPlanes.w;

        float near = czm_currentFrustum.x;
        float far = czm_currentFrustum.y;

        q.x = (q.x * (right - left) + left + right) * 0.5;
        q.y = (q.y * (top - bottom) + bottom + top) * 0.5;
        q.z = (q.z * (near - far) - near - far) * 0.5;
        q.w = 1.0;
    }

    return q;
}

/**
 * Transforms a position from window to eye coordinates.
 * The transform from window to normalized device coordinates is done using components
 * of (@link czm_viewport} and {@link czm_viewportTransformation} instead of calculating
 * the inverse of <code>czm_viewportTransformation</code>. The transformation from
 * normalized device coordinates to clip coordinates is done using <code>fragmentCoordinate.w</code>,
 * which is expected to be the scalar used in the perspective divide. The transformation
 * from clip to eye coordinates is done using {@link czm_inverseProjection}.
 *
 * @name czm_windowToEyeCoordinates
 * @glslFunction
 *
 * @param {vec4} fragmentCoordinate The position in window coordinates to transform.
 *
 * @returns {vec4} The transformed position in eye coordinates.
 *
 * @see czm_modelToWindowCoordinates
 * @see czm_eyeToWindowCoordinates
 * @see czm_inverseProjection
 * @see czm_viewport
 * @see czm_viewportTransformation
 *
 * @example
 * vec4 positionEC = czm_windowToEyeCoordinates(gl_FragCoord);
 */
vec4 czm_windowToEyeCoordinates(vec4 fragmentCoordinate)
{
    vec2 screenCoordXY = (fragmentCoordinate.xy - czm_viewport.xy) / czm_viewport.zw;
    return czm_screenToEyeCoordinates(vec4(screenCoordXY, fragmentCoordinate.zw));
}

vec4 czm_screenToEyeCoordinates(vec2 screenCoordinateXY, float depthOrLogDepth)
{
    // See reverseLogDepth.glsl. This is separate to re-use the pow.
#if defined(LOG_DEPTH) || defined(LOG_DEPTH_READ_ONLY)
    float near = czm_currentFrustum.x;
    float far = czm_currentFrustum.y;
    float log2Depth = depthOrLogDepth * czm_log2FarDepthFromNearPlusOne;
    float depthFromNear = pow(2.0, log2Depth) - 1.0;
    float depthFromCamera = depthFromNear + near;
    vec4 screenCoord = vec4(screenCoordinateXY, far * (1.0 - near / depthFromCamera) / (far - near), 1.0);
    vec4 eyeCoordinate = czm_screenToEyeCoordinates(screenCoord);
    eyeCoordinate.w = 1.0 / depthFromCamera; // Better precision
    return eyeCoordinate;
#else
    vec4 screenCoord = vec4(screenCoordinateXY, depthOrLogDepth, 1.0);
    vec4 eyeCoordinate = czm_screenToEyeCoordinates(screenCoord);
#endif
    return eyeCoordinate;
}

/**
 * Transforms a position given as window x/y and a depth or a log depth from window to eye coordinates.
 * This function produces more accurate results for window positions with log depth than
 * conventionally unpacking the log depth using czm_reverseLogDepth and using the standard version
 * of czm_windowToEyeCoordinates.
 *
 * @name czm_windowToEyeCoordinates
 * @glslFunction
 *
 * @param {vec2} fragmentCoordinateXY The XY position in window coordinates to transform.
 * @param {float} depthOrLogDepth A depth or log depth for the fragment.
 *
 * @see czm_modelToWindowCoordinates
 * @see czm_eyeToWindowCoordinates
 * @see czm_inverseProjection
 * @see czm_viewport
 * @see czm_viewportTransformation
 *
 * @returns {vec4} The transformed position in eye coordinates.
 */
vec4 czm_windowToEyeCoordinates(vec2 fragmentCoordinateXY, float depthOrLogDepth)
{
    vec2 screenCoordXY = (fragmentCoordinateXY.xy - czm_viewport.xy) / czm_viewport.zw;
    return czm_screenToEyeCoordinates(screenCoordXY, depthOrLogDepth);
}
`;var kl=`// emulated noperspective
#if !defined(LOG_DEPTH)
in float v_WindowZ;
#endif

/**
 * Emulates GL_DEPTH_CLAMP. Clamps a fragment to the near and far plane
 * by writing the fragment's depth. See czm_depthClamp for more details.
 *
 * @name czm_writeDepthClamp
 * @glslFunction
 *
 * @example
 * out_FragColor = color;
 * czm_writeDepthClamp();
 *
 * @see czm_depthClamp
 */
void czm_writeDepthClamp()
{
#if (!defined(LOG_DEPTH) && (__VERSION__ == 300 || defined(GL_EXT_frag_depth)))
    gl_FragDepth = clamp(v_WindowZ * gl_FragCoord.w, 0.0, 1.0);
#endif
}
`;var Ul=`#ifdef LOG_DEPTH
in float v_depthFromNearPlusOne;

#ifdef POLYGON_OFFSET
uniform vec2 u_polygonOffset;
#endif

#endif

/**
 * Writes the fragment depth to the logarithmic depth buffer.
 * <p>
 * Use this when the vertex shader does not call {@link czm_vertexlogDepth}, for example, when
 * ray-casting geometry using a full screen quad.
 * </p>
 * @name czm_writeLogDepth
 * @glslFunction
 *
 * @param {float} depth The depth coordinate, where 1.0 is on the near plane and
 *                      depth increases in eye-space units from there
 *
 * @example
 * czm_writeLogDepth((czm_projection * v_positionEyeCoordinates).w + 1.0);
 */
void czm_writeLogDepth(float depth)
{
#if (defined(LOG_DEPTH) && (__VERSION__ == 300 || defined(GL_EXT_frag_depth)))
    // Discard the vertex if it's not between the near and far planes.
    // We allow a bit of epsilon on the near plane comparison because a 1.0
    // from the vertex shader (indicating the vertex should be _on_ the near
    // plane) will not necessarily come here as exactly 1.0.
    if (depth <= 0.9999999 || depth > czm_farDepthFromNearPlusOne) {
        discard;
    }

#ifdef POLYGON_OFFSET
    // Polygon offset: m * factor + r * units
    float factor = u_polygonOffset[0];
    float units = u_polygonOffset[1];

#if (__VERSION__ == 300 || defined(GL_OES_standard_derivatives))
    // This factor doesn't work in IE 10
    if (factor != 0.0) {
        // m = sqrt(dZdX^2 + dZdY^2);
        float x = dFdx(depth);
        float y = dFdy(depth);
        float m = sqrt(x * x + y * y);

        // Apply the factor before computing the log depth.
        depth += m * factor;
    }
#endif

#endif

    gl_FragDepth = log2(depth) * czm_oneOverLog2FarDepthFromNearPlusOne;

#ifdef POLYGON_OFFSET
    // Apply the units after the log depth.
    gl_FragDepth += czm_epsilon7 * units;
#endif

#endif
}

/**
 * Writes the fragment depth to the logarithmic depth buffer.
 * <p>
 * Use this when the vertex shader calls {@link czm_vertexlogDepth}.
 * </p>
 *
 * @name czm_writeLogDepth
 * @glslFunction
 */
void czm_writeLogDepth() {
#ifdef LOG_DEPTH
    czm_writeLogDepth(v_depthFromNearPlusOne);
#endif
}
`;var Jl=`/**
 * Transforms a value for non-perspective interpolation by multiplying
 * it by w, the value used in the perspective divide. This function is
 * intended to be called in a vertex shader to compute the value of a
 * \`varying\` that should not be subject to perspective interpolation.
 * For example, screen-space texture coordinates. The fragment shader
 * must call {@link czm_readNonPerspective} to retrieve the final
 * non-perspective value.
 *
 * @name czm_writeNonPerspective
 * @glslFunction
 *
 * @param {float|vec2|vec3|vec4} value The value to be interpolated without accounting for perspective.
 * @param {float} w The perspective divide value. Usually this is the computed \`gl_Position.w\`.
 * @returns {float|vec2|vec3|vec4} The transformed value, intended to be stored in a \`varying\` and read in the
 *          fragment shader with {@link czm_readNonPerspective}.
 */
float czm_writeNonPerspective(float value, float w) {
    return value * w;
}

vec2 czm_writeNonPerspective(vec2 value, float w) {
    return value * w;
}

vec3 czm_writeNonPerspective(vec3 value, float w) {
    return value * w;
}

vec4 czm_writeNonPerspective(vec4 value, float w) {
    return value * w;
}
`;var HA={czm_degreesPerRadian:mo,czm_depthRange:ho,czm_epsilon1:Yo,czm_epsilon2:no,czm_epsilon3:io,czm_epsilon4:Ao,czm_epsilon5:ao,czm_epsilon6:to,czm_epsilon7:Wo,czm_infinity:eo,czm_oneOverPi:oo,czm_oneOverTwoPi:Vo,czm_passCesium3DTile:lo,czm_passCesium3DTileClassification:Ro,czm_passCesium3DTileClassificationIgnoreShow:Go,czm_passClassification:Fo,czm_passCompute:so,czm_passEnvironment:ro,czm_passGlobe:No,czm_passOpaque:Eo,czm_passOverlay:ko,czm_passTerrainClassification:Uo,czm_passTranslucent:Jo,czm_passVoxels:Qo,czm_pi:Co,czm_piOverFour:Bo,czm_piOverSix:go,czm_piOverThree:Io,czm_piOverTwo:po,czm_radiansPerDegree:jo,czm_sceneMode2D:co,czm_sceneMode3D:To,czm_sceneModeColumbusView:Mo,czm_sceneModeMorphing:So,czm_solarRadius:Do,czm_threePiOver2:fo,czm_twoPi:uo,czm_webMercatorMaxLatitude:bo,czm_depthRangeStruct:xo,czm_material:_o,czm_materialInput:Oo,czm_modelMaterial:wo,czm_modelVertexOutput:yo,czm_pbrParameters:Ho,czm_ray:zo,czm_raySegment:Xo,czm_shadowParameters:Lo,czm_HSBToRGB:vo,czm_HSLToRGB:Po,czm_RGBToHSB:Ko,czm_RGBToHSL:qo,czm_RGBToXYZ:$o,czm_XYZToRGB:ZV,czm_acesTonemapping:mV,czm_alphaWeight:hV,czm_antialias:YV,czm_approximateSphericalCoordinates:nV,czm_backFacing:iV,czm_branchFreeTernary:AV,czm_cascadeColor:aV,czm_cascadeDistance:tV,czm_cascadeMatrix:WV,czm_cascadeWeights:eV,czm_columbusViewMorph:oV,czm_computePosition:VV,czm_cosineAndSine:lV,czm_decompressTextureCoordinates:RV,czm_defaultPbrMaterial:GV,czm_depthClamp:FV,czm_eastNorthUpToEyeCoordinates:dV,czm_ellipsoidContainsPoint:sV,czm_ellipsoidWgs84TextureCoordinates:rV,czm_equalsEpsilon:NV,czm_eyeOffset:EV,czm_eyeToWindowCoordinates:kV,czm_fastApproximateAtan:UV,czm_fog:JV,czm_gammaCorrect:QV,czm_geodeticSurfaceNormal:CV,czm_getDefaultMaterial:BV,czm_getLambertDiffuse:gV,czm_getSpecular:IV,czm_getWaterNoise:pV,czm_hue:jV,czm_inverseGamma:cV,czm_isEmpty:TV,czm_isFull:MV,czm_latitudeToWebMercatorFraction:SV,czm_lineDistance:DV,czm_linearToSrgb:fV,czm_luminance:uV,czm_metersPerPixel:bV,czm_modelToWindowCoordinates:xV,czm_multiplyWithColorBalance:_V,czm_nearFarScalar:OV,czm_octDecode:wV,czm_packDepth:yV,czm_pbrLighting:HV,czm_pbrMetallicRoughnessMaterial:zV,czm_pbrSpecularGlossinessMaterial:XV,czm_phong:LV,czm_planeDistance:vV,czm_pointAlongRay:PV,czm_rayEllipsoidIntersectionInterval:KV,czm_raySphereIntersectionInterval:qV,czm_readDepth:$V,czm_readNonPerspective:Zl,czm_reverseLogDepth:ml,czm_round:hl,czm_sampleOctahedralProjection:Yl,czm_saturation:nl,czm_shadowDepthCompare:il,czm_shadowVisibility:Al,czm_signNotZero:al,czm_sphericalHarmonics:tl,czm_srgbToLinear:Wl,czm_tangentToEyeSpaceMatrix:el,czm_textureCube:ol,czm_transformPlane:Vl,czm_translateRelativeToEye:ll,czm_translucentPhong:Rl,czm_transpose:Gl,czm_unpackDepth:Fl,czm_unpackFloat:dl,czm_unpackUint:sl,czm_valueTransform:rl,czm_vertexLogDepth:Nl,czm_windowToEyeCoordinates:El,czm_writeDepthClamp:kl,czm_writeLogDepth:Ul,czm_writeNonPerspective:Jl};function BN(Z,m){let h=Z;return h=h.replaceAll("version 300 es",""),h=h.replaceAll(/(texture\()/g,"texture2D("),m?(h=h.replaceAll(/(in)\s+(vec\d|mat\d|float)/g,"varying $2"),/out_FragData_(\d+)/.test(h)&&(h=`#extension GL_EXT_draw_buffers : enable
${h}`,h=h.replaceAll(/layout\s+\(location\s*=\s*\d+\)\s*out\s+vec4\s+out_FragData_\d+;/g,""),h=h.replaceAll(/out_FragData_(\d+)/g,"gl_FragData[$1]")),h=h.replaceAll(/layout\s+\(location\s*=\s*0\)\s*out\s+vec4\s+out_FragColor;/g,""),h=h.replaceAll(/out_FragColor/g,"gl_FragColor"),h=h.replaceAll(/out_FragColor\[(\d+)\]/g,"gl_FragColor[$1]"),/gl_FragDepth/.test(h)&&(h=`#extension GL_EXT_frag_depth : enable
${h}`,h=h.replaceAll(/gl_FragDepth/g,"gl_FragDepthEXT")),h=`#ifdef GL_OES_standard_derivatives
#extension GL_OES_standard_derivatives : enable
#endif
${h}`):(h=h.replaceAll(/(in)\s+(vec\d|mat\d|float)/g,"attribute $2"),h=h.replaceAll(/(out)\s+(vec\d|mat\d|float)\s+([\w]+);/g,"varying $2 $3;")),h=`#version 100
${h}`,h}var Ql=BN;function Cl(Z){return Z=Z.replace(/\/\/.*/g,""),Z.replace(/\/\*\*[\s\S]*?\*\//gm,function(m){let h=m.match(/\n/gm).length,n="";for(let i=0;i<h;++i)n+=`
`;return n})}function Bl(Z,m,h){let n;for(let i=0;i<h.length;++i)h[i].name===Z&&(n=h[i]);return V(n)||(m=Cl(m),n={name:Z,glslSource:m,dependsOn:[],requiredBy:[],evaluated:!1},h.push(n)),n}function gl(Z,m){if(Z.evaluated)return;Z.evaluated=!0;let h=Z.glslSource.match(/\bczm_[a-zA-Z0-9_]*/g);V(h)&&h!==null&&(h=h.filter(function(n,i){return h.indexOf(n)===i}),h.forEach(function(n){if(n!==Z.name&&qm._czmBuiltinsAndUniforms.hasOwnProperty(n)){let i=Bl(n,qm._czmBuiltinsAndUniforms[n],m);Z.dependsOn.push(i),i.requiredBy.push(Z),gl(i,m)}}))}function gN(Z){let m=[],h=[];for(;Z.length>0;){let i=Z.pop();h.push(i),i.requiredBy.length===0&&m.push(i)}for(;m.length>0;){let i=m.shift();Z.push(i);for(let A=0;A<i.dependsOn.length;++A){let t=i.dependsOn[A],W=t.requiredBy.indexOf(i);t.requiredBy.splice(W,1),t.requiredBy.length===0&&m.push(t)}}let n=[];for(let i=0;i<h.length;++i)h[i].requiredBy.length!==0&&n.push(h[i]);if(n.length!==0){let i=`A circular dependency was found in the following built-in functions/structs/constants: 
`;for(let A=0;A<n.length;++A)i=`${i+n[A].name}
`;throw new U(i)}}function IN(Z){let m=[],h=Bl("main",Z,m);gl(h,m),gN(m);let n="";for(let i=m.length-1;i>=0;--i)n=`${n+m[i].glslSource}
`;return n.replace(h.glslSource,"")}function Il(Z,m,h){let n,i,A="",t=Z.sources;if(V(t))for(n=0,i=t.length;n<i;++n)A+=`
#line 0
${t[n]}`;A=Cl(A);let W;A=A.replace(/#version\s+(.*?)\n/gm,function(Q,p){if(V(W)&&W!==p)throw new U(`inconsistent versions found: ${W} and ${p}`);return W=p,`
`});let e=[];A=A.replace(/#extension.*\n/gm,function(Q){return e.push(Q),`
`}),A=A.replace(/precision\s(lowp|mediump|highp)\s(float|int);/,"");let G=Z.pickColorQualifier;V(G)&&(A=qm.createPickFragmentShaderSource(A,G));let F="",d=e.length;for(n=0;n<d;n++)F+=e[n];m&&(F+=`#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
    precision highp int;
#else
    precision mediump float;
    precision mediump int;
    #define highp mediump
#endif

`);let J=Z.defines;if(V(J))for(n=0,i=J.length;n<i;++n){let Q=J[n];Q.length!==0&&(F+=`#define ${Q}
`)}h.textureFloatLinear&&(F+=`#define OES_texture_float_linear

`),h.floatingPointTexture&&(F+=`#define OES_texture_float

`);let k="";Z.includeBuiltIns&&(k=IN(A)),F+=`
#line 0
`;let r=k+A;return h.webgl2&&m&&!/layout\s*\(location\s*=\s*0\)\s*out\s+vec4\s+out_FragColor;/g.test(r)&&!/czm_out_FragColor/g.test(r)&&/out_FragColor/g.test(r)&&(F+=`layout(location = 0) out vec4 out_FragColor;

`),F+=k,F+=A,h.webgl2?F=`#version 300 es
${F}`:F=Ql(F,m),F}function qm(Z){Z=l(Z,l.EMPTY_OBJECT);let m=Z.pickColorQualifier;if(V(m)&&m!=="uniform"&&m!=="in")throw new U("options.pickColorQualifier must be 'uniform' or 'in'.");this.defines=V(Z.defines)?Z.defines.slice(0):[],this.sources=V(Z.sources)?Z.sources.slice(0):[],this.pickColorQualifier=m,this.includeBuiltIns=l(Z.includeBuiltIns,!0)}qm.prototype.clone=function(){return new qm({sources:this.sources,defines:this.defines,pickColorQualifier:this.pickColorQualifier,includeBuiltIns:this.includeBuiltIns})};qm.replaceMain=function(Z,m){return m=`void ${m}()`,Z.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,m)};qm.prototype.getCacheKey=function(){let m=this.defines.slice().sort().join(","),h=this.pickColorQualifier,n=this.includeBuiltIns,i=this.sources.join(`
`);return`${m}:${h}:${n}:${i}`};qm.prototype.createCombinedVertexShader=function(Z){return Il(this,!1,Z)};qm.prototype.createCombinedFragmentShader=function(Z){return Il(this,!0,Z)};qm._czmBuiltinsAndUniforms={};for(let Z in HA)HA.hasOwnProperty(Z)&&(qm._czmBuiltinsAndUniforms[Z]=HA[Z]);for(let Z in yn)if(yn.hasOwnProperty(Z)){let m=yn[Z];typeof m.getDeclaration=="function"&&(qm._czmBuiltinsAndUniforms[Z]=m.getDeclaration(Z))}qm.createPickVertexShaderSource=function(Z){return`${qm.replaceMain(Z,"czm_old_main")}
in vec4 pickColor; 
out vec4 czm_pickColor; 
void main() 
{ 
    czm_old_main(); 
    czm_pickColor = pickColor; 
}`};qm.createPickFragmentShaderSource=function(Z,m){let h=qm.replaceMain(Z,"czm_old_main"),n=`${m} vec4 czm_pickColor; 
void main() 
{ 
    czm_old_main(); 
    if (out_FragColor.a == 0.0) { 
       discard; 
    } 
    out_FragColor = czm_pickColor; 
}`;return`${h}
${n}`};function pN(Z,m){let h=Z.defines,n=h.length;for(let i=0;i<n;++i)if(h[i]===m)return!0;return!1}function pl(Z,m){let h=Z.sources,n=h.length;for(let i=0;i<n;++i)if(h[i].indexOf(m)!==-1)return!0;return!1}function jl(Z,m){let h=m.length;for(let n=0;n<h;++n){let i=m[n];if(pl(Z,i))return i}}var jN=["v_normalEC","v_normal"];qm.findNormalVarying=function(Z){return pl(Z,"#ifdef HAS_NORMALS")?pN(Z,"HAS_NORMALS")?"v_normalEC":void 0:jl(Z,jN)};var cN=["v_positionEC"];qm.findPositionVarying=function(Z){return jl(Z,cN)};var zZ=qm;function TN(Z,m,h,n){let i=V(m.vertexBuffer),A=V(m.value),t=m.value?m.value.length:m.componentsPerAttribute;if(!i&&!A)throw new U("attribute must have a vertexBuffer or a value.");if(i&&A)throw new U("attribute cannot have both a vertexBuffer and a value.  It must have either a vertexBuffer property defining per-vertex data or a value property defining data for all vertices.");if(t!==1&&t!==2&&t!==3&&t!==4)throw A?new U("attribute.value.length must be in the range [1, 4]."):new U("attribute.componentsPerAttribute must be in the range [1, 4].");if(V(m.componentDatatype)&&!WZ.validate(m.componentDatatype))throw new U("attribute must have a valid componentDatatype or not specify it.");if(V(m.strideInBytes)&&m.strideInBytes>255)throw new U("attribute must have a strideInBytes less than or equal to 255 or not specify it.");if(V(m.instanceDivisor)&&m.instanceDivisor>0&&!n.instancedArrays)throw new U("instanced arrays is not supported");if(V(m.instanceDivisor)&&m.instanceDivisor<0)throw new U("attribute must have an instanceDivisor greater than or equal to zero");if(V(m.instanceDivisor)&&A)throw new U("attribute cannot have have an instanceDivisor if it is not backed by a buffer");if(V(m.instanceDivisor)&&m.instanceDivisor>0&&m.index===0)throw new U("attribute zero cannot have an instanceDivisor greater than 0");let W={index:l(m.index,h),enabled:l(m.enabled,!0),vertexBuffer:m.vertexBuffer,value:A?m.value.slice(0):void 0,componentsPerAttribute:t,componentDatatype:l(m.componentDatatype,WZ.FLOAT),normalize:l(m.normalize,!1),offsetInBytes:l(m.offsetInBytes,0),strideInBytes:l(m.strideInBytes,0),instanceDivisor:l(m.instanceDivisor,0)};if(i)W.vertexAttrib=function(e){let G=this.index;e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer._getBuffer()),e.vertexAttribPointer(G,this.componentsPerAttribute,this.componentDatatype,this.normalize,this.strideInBytes,this.offsetInBytes),e.enableVertexAttribArray(G),this.instanceDivisor>0&&(n.glVertexAttribDivisor(G,this.instanceDivisor),n._vertexAttribDivisors[G]=this.instanceDivisor,n._previousDrawInstanced=!0)},W.disableVertexAttribArray=function(e){e.disableVertexAttribArray(this.index),this.instanceDivisor>0&&n.glVertexAttribDivisor(h,0)};else{switch(W.componentsPerAttribute){case 1:W.vertexAttrib=function(e){e.vertexAttrib1fv(this.index,this.value)};break;case 2:W.vertexAttrib=function(e){e.vertexAttrib2fv(this.index,this.value)};break;case 3:W.vertexAttrib=function(e){e.vertexAttrib3fv(this.index,this.value)};break;case 4:W.vertexAttrib=function(e){e.vertexAttrib4fv(this.index,this.value)};break}W.disableVertexAttribArray=function(e){}}Z.push(W)}function Tl(Z,m,h){for(let n=0;n<m.length;++n){let i=m[n];i.enabled&&i.vertexAttrib(Z)}V(h)&&Z.bindBuffer(Z.ELEMENT_ARRAY_BUFFER,h._getBuffer())}function pY(Z){Z=l(Z,l.EMPTY_OBJECT),y.defined("options.context",Z.context),y.defined("options.attributes",Z.attributes);let m=Z.context,h=m._gl,n=Z.attributes,i=Z.indexBuffer,A,t=[],W=1,e=!1,G=!1,F=n.length;for(A=0;A<F;++A)TN(t,n[A],A,m);for(F=t.length,A=0;A<F;++A){let k=t[A];if(V(k.vertexBuffer)&&k.instanceDivisor===0){let r=k.strideInBytes||k.componentsPerAttribute*WZ.getSizeInBytes(k.componentDatatype);W=k.vertexBuffer.sizeInBytes/r;break}}for(A=0;A<F;++A)t[A].instanceDivisor>0&&(e=!0),V(t[A].value)&&(G=!0);let d={};for(A=0;A<F;++A){let k=t[A].index;if(d[k])throw new U(`Index ${k} is used by more than one attribute.`);d[k]=!0}let J;m.vertexArrayObject&&(J=m.glCreateVertexArray(),m.glBindVertexArray(J),Tl(h,t,i),m.glBindVertexArray(null)),this._numberOfVertices=W,this._hasInstancedAttributes=e,this._hasConstantAttributes=G,this._context=m,this._gl=h,this._vao=J,this._attributes=t,this._indexBuffer=i}function cl(Z){return Z.values.length/Z.componentsPerAttribute}function MN(Z){return WZ.getSizeInBytes(Z.componentDatatype)*Z.componentsPerAttribute}function SN(Z){let m,h,n,i=[];for(h in Z)Z.hasOwnProperty(h)&&V(Z[h])&&V(Z[h].values)&&(i.push(h),Z[h].componentDatatype===WZ.DOUBLE&&(Z[h].componentDatatype=WZ.FLOAT,Z[h].values=WZ.createTypedArray(WZ.FLOAT,Z[h].values)));let A,t=i.length;if(t>0)for(A=cl(Z[i[0]]),m=1;m<t;++m){let G=cl(Z[i[m]]);if(G!==A)throw new Sm(`Each attribute list must have the same number of vertices.  Attribute ${i[m]} has a different number of vertices (${G.toString()}) than attribute ${i[0]} (${A.toString()}).`)}i.sort(function(G,F){return WZ.getSizeInBytes(Z[F].componentDatatype)-WZ.getSizeInBytes(Z[G].componentDatatype)});let W=0,e={};for(m=0;m<t;++m)h=i[m],n=Z[h],e[h]=W,W+=MN(n);if(W>0){let G=WZ.getSizeInBytes(Z[i[0]].componentDatatype),F=W%G;F!==0&&(W+=G-F);let d=A*W,J=new ArrayBuffer(d),k={};for(m=0;m<t;++m){h=i[m];let r=WZ.getSizeInBytes(Z[h].componentDatatype);k[h]={pointer:WZ.createTypedArray(Z[h].componentDatatype,J),index:e[h]/r,strideInComponentType:W/r}}for(m=0;m<A;++m)for(let r=0;r<t;++r){h=i[r],n=Z[h];let Q=n.values,p=k[h],T=p.pointer,I=n.componentsPerAttribute;for(let f=0;f<I;++f)T[p.index+f]=Q[m*I+f];p.index+=p.strideInComponentType}return{buffer:J,offsetsInBytes:e,vertexSizeInBytes:W}}}pY.fromGeometry=function(Z){Z=l(Z,l.EMPTY_OBJECT),y.defined("options.context",Z.context);let m=Z.context,h=l(Z.geometry,l.EMPTY_OBJECT),n=l(Z.bufferUsage,jZ.DYNAMIC_DRAW),i=l(Z.attributeLocations,l.EMPTY_OBJECT),A=l(Z.interleave,!1),t=Z.vertexArrayAttributes,W,e,G,F=V(t)?t:[],d=h.attributes;if(A){let r=SN(d);if(V(r)){G=$h.createVertexBuffer({context:m,typedArray:r.buffer,usage:n});let Q=r.offsetsInBytes,p=r.vertexSizeInBytes;for(W in d)d.hasOwnProperty(W)&&V(d[W])&&(e=d[W],V(e.values)?F.push({index:i[W],vertexBuffer:G,componentDatatype:e.componentDatatype,componentsPerAttribute:e.componentsPerAttribute,normalize:e.normalize,offsetInBytes:Q[W],strideInBytes:p}):F.push({index:i[W],value:e.value,componentDatatype:e.componentDatatype,normalize:e.normalize}))}}else for(W in d)if(d.hasOwnProperty(W)&&V(d[W])){e=d[W];let r=e.componentDatatype;r===WZ.DOUBLE&&(r=WZ.FLOAT),G=void 0,V(e.values)&&(G=$h.createVertexBuffer({context:m,typedArray:WZ.createTypedArray(r,e.values),usage:n})),F.push({index:i[W],vertexBuffer:G,value:e.value,componentDatatype:r,componentsPerAttribute:e.componentsPerAttribute,normalize:e.normalize})}let J,k=h.indices;return V(k)&&(cA.computeNumberOfVertices(h)>=gZ.SIXTY_FOUR_KILOBYTES&&m.elementIndexUint?J=$h.createIndexBuffer({context:m,typedArray:new Uint32Array(k),usage:n,indexDatatype:RY.UNSIGNED_INT}):J=$h.createIndexBuffer({context:m,typedArray:new Uint16Array(k),usage:n,indexDatatype:RY.UNSIGNED_SHORT})),new pY({context:m,attributes:F,indexBuffer:J})};Object.defineProperties(pY.prototype,{numberOfAttributes:{get:function(){return this._attributes.length}},numberOfVertices:{get:function(){return this._numberOfVertices}},indexBuffer:{get:function(){return this._indexBuffer}}});pY.prototype.getAttribute=function(Z){return y.defined("index",Z),this._attributes[Z]};function DN(Z){let m=Z._context,h=Z._hasInstancedAttributes;if(!h&&!m._previousDrawInstanced)return;m._previousDrawInstanced=h;let n=m._vertexAttribDivisors,i=Z._attributes,A=$Z.maximumVertexAttributes,t;if(h){let W=i.length;for(t=0;t<W;++t){let e=i[t];if(e.enabled){let G=e.instanceDivisor,F=e.index;G!==n[F]&&(m.glVertexAttribDivisor(F,G),n[F]=G)}}}else for(t=0;t<A;++t)n[t]>0&&(m.glVertexAttribDivisor(t,0),n[t]=0)}function fN(Z,m){let h=Z._attributes,n=h.length;for(let i=0;i<n;++i){let A=h[i];A.enabled&&V(A.value)&&A.vertexAttrib(m)}}pY.prototype._bind=function(){V(this._vao)?(this._context.glBindVertexArray(this._vao),this._context.instancedArrays&&DN(this),this._hasConstantAttributes&&fN(this,this._gl)):Tl(this._gl,this._attributes,this._indexBuffer)};pY.prototype._unBind=function(){if(V(this._vao))this._context.glBindVertexArray(null);else{let Z=this._attributes,m=this._gl;for(let h=0;h<Z.length;++h){let n=Z[h];n.enabled&&n.disableVertexAttribArray(m)}this._indexBuffer&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,null)}};pY.prototype.isDestroyed=function(){return!1};pY.prototype.destroy=function(){let Z=this._attributes;for(let h=0;h<Z.length;++h){let n=Z[h].vertexBuffer;V(n)&&!n.isDestroyed()&&n.vertexArrayDestroyable&&n.destroy()}let m=this._indexBuffer;return V(m)&&!m.isDestroyed()&&m.vertexArrayDestroyable&&m.destroy(),V(this._vao)&&this._context.glDeleteVertexArray(this._vao),cZ(this)};var zA=pY;function $m(Z,m,h,n){if(y.defined("context",Z),!m||m.length===0)throw new U("At least one attribute is required.");let i=$m._verifyAttributes(m);h=l(h,0);let A=[],t={},W,e,G=i.length;for(let d=0;d<G;++d){let J=i[d];if(J.vertexBuffer){A.push(J);continue}e=J.usage,W=t[e],V(W)||(W=t[e]=[]),W.push(J)}function F(d,J){return WZ.getSizeInBytes(J.componentDatatype)-WZ.getSizeInBytes(d.componentDatatype)}this._allBuffers=[];for(e in t)if(t.hasOwnProperty(e)){W=t[e],W.sort(F);let d=$m._vertexSizeInBytes(W),J=W[0].usage,k={vertexSizeInBytes:d,vertexBuffer:void 0,usage:J,needsCommit:!1,arrayBuffer:void 0,arrayViews:$m._createArrayViews(W,d)};this._allBuffers.push(k)}this._size=0,this._instanced=l(n,!1),this._precreated=A,this._context=Z,this.writers=void 0,this.va=void 0,this.resize(h)}$m._verifyAttributes=function(Z){let m=[];for(let n=0;n<Z.length;++n){let i=Z[n],A={index:l(i.index,n),enabled:l(i.enabled,!0),componentsPerAttribute:i.componentsPerAttribute,componentDatatype:l(i.componentDatatype,WZ.FLOAT),normalize:l(i.normalize,!1),vertexBuffer:i.vertexBuffer,usage:l(i.usage,jZ.STATIC_DRAW)};if(m.push(A),A.componentsPerAttribute!==1&&A.componentsPerAttribute!==2&&A.componentsPerAttribute!==3&&A.componentsPerAttribute!==4)throw new U("attribute.componentsPerAttribute must be in the range [1, 4].");let t=A.componentDatatype;if(!WZ.validate(t))throw new U("Attribute must have a valid componentDatatype or not specify it.");if(!jZ.validate(A.usage))throw new U("Attribute must have a valid usage or not specify it.")}let h=new Array(m.length);for(let n=0;n<m.length;++n){let A=m[n].index;if(h[A])throw new U(`Index ${A} is used by more than one attribute.`);h[A]=!0}return m};$m._vertexSizeInBytes=function(Z){let m=0,h=Z.length;for(let t=0;t<h;++t){let W=Z[t];m+=W.componentsPerAttribute*WZ.getSizeInBytes(W.componentDatatype)}let n=h>0?WZ.getSizeInBytes(Z[0].componentDatatype):0,i=n>0?m%n:0,A=i===0?0:n-i;return m+=A,m};$m._createArrayViews=function(Z,m){let h=[],n=0,i=Z.length;for(let A=0;A<i;++A){let t=Z[A],W=t.componentDatatype;h.push({index:t.index,enabled:t.enabled,componentsPerAttribute:t.componentsPerAttribute,componentDatatype:W,normalize:t.normalize,offsetInBytes:n,vertexSizeInComponentType:m/WZ.getSizeInBytes(W),view:void 0}),n+=t.componentsPerAttribute*WZ.getSizeInBytes(W)}return h};$m.prototype.resize=function(Z){this._size=Z;let m=this._allBuffers;this.writers=[];for(let h=0,n=m.length;h<n;++h){let i=m[h];$m._resize(i,this._size),$m._appendWriters(this.writers,i)}va(this)};$m._resize=function(Z,m){if(Z.vertexSizeInBytes>0){let h=new ArrayBuffer(m*Z.vertexSizeInBytes);if(V(Z.arrayBuffer)){let A=new Uint8Array(h),t=new Uint8Array(Z.arrayBuffer),W=t.length;for(let e=0;e<W;++e)A[e]=t[e]}let n=Z.arrayViews,i=n.length;for(let A=0;A<i;++A){let t=n[A];t.view=WZ.createArrayBufferView(t.componentDatatype,h,t.offsetInBytes)}Z.arrayBuffer=h}};var uN=[function(Z,m,h){return function(n,i){m[n*h]=i,Z.needsCommit=!0}},function(Z,m,h){return function(n,i,A){let t=n*h;m[t]=i,m[t+1]=A,Z.needsCommit=!0}},function(Z,m,h){return function(n,i,A,t){let W=n*h;m[W]=i,m[W+1]=A,m[W+2]=t,Z.needsCommit=!0}},function(Z,m,h){return function(n,i,A,t,W){let e=n*h;m[e]=i,m[e+1]=A,m[e+2]=t,m[e+3]=W,Z.needsCommit=!0}}];$m._appendWriters=function(Z,m){let h=m.arrayViews,n=h.length;for(let i=0;i<n;++i){let A=h[i];Z[A.index]=uN[A.componentsPerAttribute-1](m,A.view,A.vertexSizeInComponentType)}};$m.prototype.commit=function(Z){let m=!1,h=this._allBuffers,n,i,A;for(i=0,A=h.length;i<A;++i)n=h[i],m=bN(this,n)||m;if(m||!V(this.va)){va(this);let t=this.va=[],W=gZ.SIXTY_FOUR_KILOBYTES-4,e=V(Z)&&!this._instanced?Math.ceil(this._size/W):1;for(let G=0;G<e;++G){let F=[];for(i=0,A=h.length;i<A;++i){n=h[i];let d=G*(n.vertexSizeInBytes*W);$m._appendAttributes(F,n,d,this._instanced)}F=F.concat(this._precreated),t.push({va:new zA({context:this._context,attributes:F,indexBuffer:Z}),indicesCount:1.5*(G!==e-1?W:this._size%W)})}}};function bN(Z,m){if(m.needsCommit&&m.vertexSizeInBytes>0){m.needsCommit=!1;let h=m.vertexBuffer,n=Z._size*m.vertexSizeInBytes,i=V(h);if(!i||h.sizeInBytes<n)return i&&h.destroy(),m.vertexBuffer=$h.createVertexBuffer({context:Z._context,typedArray:m.arrayBuffer,usage:m.usage}),m.vertexBuffer.vertexArrayDestroyable=!1,!0;m.vertexBuffer.copyFromArrayView(m.arrayBuffer)}return!1}$m._appendAttributes=function(Z,m,h,n){let i=m.arrayViews,A=i.length;for(let t=0;t<A;++t){let W=i[t];Z.push({index:W.index,enabled:W.enabled,componentsPerAttribute:W.componentsPerAttribute,componentDatatype:W.componentDatatype,normalize:W.normalize,vertexBuffer:m.vertexBuffer,offsetInBytes:h+W.offsetInBytes,strideInBytes:m.vertexSizeInBytes,instanceDivisor:n?1:0})}};$m.prototype.subCommit=function(Z,m){if(Z<0||Z>=this._size)throw new U("offsetInVertices must be greater than or equal to zero and less than the vertex array size.");if(Z+m>this._size)throw new U("offsetInVertices + lengthInVertices cannot exceed the vertex array size.");let h=this._allBuffers;for(let n=0,i=h.length;n<i;++n)xN(h[n],Z,m)};function xN(Z,m,h){if(Z.needsCommit&&Z.vertexSizeInBytes>0){let n=Z.vertexSizeInBytes*m,i=Z.vertexSizeInBytes*h;Z.vertexBuffer.copyFromArrayView(new Uint8Array(Z.arrayBuffer,n,i),n)}}$m.prototype.endSubCommits=function(){let Z=this._allBuffers;for(let m=0,h=Z.length;m<h;++m)Z[m].needsCommit=!1};function va(Z){let m=Z.va;if(!V(m))return;let h=m.length;for(let n=0;n<h;++n)m[n].va.destroy();Z.va=void 0}$m.prototype.isDestroyed=function(){return!1};$m.prototype.destroy=function(){let Z=this._allBuffers;for(let m=0,h=Z.length;m<h;++m){let n=Z[m];n.vertexBuffer=n.vertexBuffer&&n.vertexBuffer.destroy()}return va(this),cZ(this)};var XA=$m;var Ml=`uniform sampler2D u_atlas;

#ifdef VECTOR_TILE
uniform vec4 u_highlightColor;
#endif

in vec2 v_textureCoordinates;
in vec4 v_pickColor;
in vec4 v_color;

#ifdef SDF
in vec4 v_outlineColor;
in float v_outlineWidth;
#endif

#ifdef FRAGMENT_DEPTH_CHECK
in vec4 v_textureCoordinateBounds;                  // the min and max x and y values for the texture coordinates
in vec4 v_originTextureCoordinateAndTranslate;      // texture coordinate at the origin, billboard translate (used for label glyphs)
in vec4 v_compressed;                               // x: eyeDepth, y: applyTranslate & enableDepthCheck, z: dimensions, w: imageSize
in mat2 v_rotationMatrix;

const float SHIFT_LEFT12 = 4096.0;
const float SHIFT_LEFT1 = 2.0;

const float SHIFT_RIGHT12 = 1.0 / 4096.0;
const float SHIFT_RIGHT1 = 1.0 / 2.0;

float getGlobeDepth(vec2 adjustedST, vec2 depthLookupST, bool applyTranslate, vec2 dimensions, vec2 imageSize)
{
    vec2 lookupVector = imageSize * (depthLookupST - adjustedST);
    lookupVector = v_rotationMatrix * lookupVector;
    vec2 labelOffset = (dimensions - imageSize) * (depthLookupST - vec2(0.0, v_originTextureCoordinateAndTranslate.y)); // aligns label glyph with bounding rectangle.  Will be zero for billboards because dimensions and imageSize will be equal

    vec2 translation = v_originTextureCoordinateAndTranslate.zw;

    if (applyTranslate)
    {
        // this is only needed for labels where the horizontal origin is not LEFT
        // it moves the label back to where the "origin" should be since all label glyphs are set to HorizontalOrigin.LEFT
        translation += (dimensions * v_originTextureCoordinateAndTranslate.xy * vec2(1.0, 0.0));
    }

    vec2 st = ((lookupVector - translation + labelOffset) + gl_FragCoord.xy) / czm_viewport.zw;
    float logDepthOrDepth = czm_unpackDepth(texture(czm_globeDepthTexture, st));

    if (logDepthOrDepth == 0.0)
    {
        return 0.0; // not on the globe
    }

    vec4 eyeCoordinate = czm_windowToEyeCoordinates(gl_FragCoord.xy, logDepthOrDepth);
    return eyeCoordinate.z / eyeCoordinate.w;
}
#endif


#ifdef SDF

// Get the distance from the edge of a glyph at a given position sampling an SDF texture.
float getDistance(vec2 position)
{
    return texture(u_atlas, position).r;
}

// Samples the sdf texture at the given position and produces a color based on the fill color and the outline.
vec4 getSDFColor(vec2 position, float outlineWidth, vec4 outlineColor, float smoothing)
{
    float distance = getDistance(position);

    if (outlineWidth > 0.0)
    {
        // Don't get the outline edge exceed the SDF_EDGE
        float outlineEdge = clamp(SDF_EDGE - outlineWidth, 0.0, SDF_EDGE);
        float outlineFactor = smoothstep(SDF_EDGE - smoothing, SDF_EDGE + smoothing, distance);
        vec4 sdfColor = mix(outlineColor, v_color, outlineFactor);
        float alpha = smoothstep(outlineEdge - smoothing, outlineEdge + smoothing, distance);
        return vec4(sdfColor.rgb, sdfColor.a * alpha);
    }
    else
    {
        float alpha = smoothstep(SDF_EDGE - smoothing, SDF_EDGE + smoothing, distance);
        return vec4(v_color.rgb, v_color.a * alpha);
    }
}
#endif

void main()
{
    vec4 color = texture(u_atlas, v_textureCoordinates);

#ifdef SDF
    float outlineWidth = v_outlineWidth;
    vec4 outlineColor = v_outlineColor;

    // Get the current distance
    float distance = getDistance(v_textureCoordinates);

#if (__VERSION__ == 300 || defined(GL_OES_standard_derivatives))
    float smoothing = fwidth(distance);
    // Get an offset that is approximately half the distance to the neighbor pixels
    // 0.354 is approximately half of 1/sqrt(2)
    vec2 sampleOffset = 0.354 * vec2(dFdx(v_textureCoordinates) + dFdy(v_textureCoordinates));

    // Sample the center point
    vec4 center = getSDFColor(v_textureCoordinates, outlineWidth, outlineColor, smoothing);

    // Sample the 4 neighbors
    vec4 color1 = getSDFColor(v_textureCoordinates + vec2(sampleOffset.x, sampleOffset.y), outlineWidth, outlineColor, smoothing);
    vec4 color2 = getSDFColor(v_textureCoordinates + vec2(-sampleOffset.x, sampleOffset.y), outlineWidth, outlineColor, smoothing);
    vec4 color3 = getSDFColor(v_textureCoordinates + vec2(-sampleOffset.x, -sampleOffset.y), outlineWidth, outlineColor, smoothing);
    vec4 color4 = getSDFColor(v_textureCoordinates + vec2(sampleOffset.x, -sampleOffset.y), outlineWidth, outlineColor, smoothing);

    // Equally weight the center sample and the 4 neighboring samples
    color = (center + color1 + color2 + color3 + color4)/5.0;
#else
    // If no derivatives available (IE 10?), just do a single sample
    float smoothing = 1.0/32.0;
    color = getSDFColor(v_textureCoordinates, outlineWidth, outlineColor, smoothing);
#endif

    color = czm_gammaCorrect(color);
#else
    color = czm_gammaCorrect(color);
    color *= czm_gammaCorrect(v_color);
#endif

// Fully transparent parts of the billboard are not pickable.
#if !defined(OPAQUE) && !defined(TRANSLUCENT)
    if (color.a < 0.005)   // matches 0/255 and 1/255
    {
        discard;
    }
#else
// The billboard is rendered twice. The opaque pass discards translucent fragments
// and the translucent pass discards opaque fragments.
#ifdef OPAQUE
    if (color.a < 0.995)   // matches < 254/255
    {
        discard;
    }
#else
    if (color.a >= 0.995)  // matches 254/255 and 255/255
    {
        discard;
    }
#endif
#endif

#ifdef VECTOR_TILE
    color *= u_highlightColor;
#endif
    out_FragColor = color;

#ifdef LOG_DEPTH
    czm_writeLogDepth();
#endif

#ifdef FRAGMENT_DEPTH_CHECK
    float temp = v_compressed.y;

    temp = temp * SHIFT_RIGHT1;

    float temp2 = (temp - floor(temp)) * SHIFT_LEFT1;
    bool enableDepthTest = temp2 != 0.0;
    bool applyTranslate = floor(temp) != 0.0;

    if (enableDepthTest) {
        temp = v_compressed.z;
        temp = temp * SHIFT_RIGHT12;

        vec2 dimensions;
        dimensions.y = (temp - floor(temp)) * SHIFT_LEFT12;
        dimensions.x = floor(temp);

        temp = v_compressed.w;
        temp = temp * SHIFT_RIGHT12;

        vec2 imageSize;
        imageSize.y = (temp - floor(temp)) * SHIFT_LEFT12;
        imageSize.x = floor(temp);

        vec2 adjustedST = v_textureCoordinates - v_textureCoordinateBounds.xy;
        adjustedST = adjustedST / vec2(v_textureCoordinateBounds.z - v_textureCoordinateBounds.x, v_textureCoordinateBounds.w - v_textureCoordinateBounds.y);

        float epsilonEyeDepth = v_compressed.x + czm_epsilon1;
        float globeDepth1 = getGlobeDepth(adjustedST, v_originTextureCoordinateAndTranslate.xy, applyTranslate, dimensions, imageSize);

        // negative values go into the screen
        if (globeDepth1 != 0.0 && globeDepth1 > epsilonEyeDepth)
        {
            float globeDepth2 = getGlobeDepth(adjustedST, vec2(0.0, 1.0), applyTranslate, dimensions, imageSize); // top left corner
            if (globeDepth2 != 0.0 && globeDepth2 > epsilonEyeDepth)
            {
                float globeDepth3 = getGlobeDepth(adjustedST, vec2(1.0, 1.0), applyTranslate, dimensions, imageSize); // top right corner
                if (globeDepth3 != 0.0 && globeDepth3 > epsilonEyeDepth)
                {
                    discard;
                }
            }
        }
    }
#endif

}
`;var Sl=`#ifdef INSTANCED
in vec2 direction;
#endif
in vec4 positionHighAndScale;
in vec4 positionLowAndRotation;
in vec4 compressedAttribute0;                       // pixel offset, translate, horizontal origin, vertical origin, show, direction, texture coordinates (texture offset)
in vec4 compressedAttribute1;                       // aligned axis, translucency by distance, image width
in vec4 compressedAttribute2;                       // label horizontal origin, image height, color, pick color, size in meters, valid aligned axis, 13 bits free
in vec4 eyeOffset;                                  // eye offset in meters, 4 bytes free (texture range)
in vec4 scaleByDistance;                            // near, nearScale, far, farScale
in vec4 pixelOffsetScaleByDistance;                 // near, nearScale, far, farScale
in vec4 compressedAttribute3;                       // distance display condition near, far, disableDepthTestDistance, dimensions
in vec2 sdf;                                        // sdf outline color (rgb) and width (w)
#if defined(VERTEX_DEPTH_CHECK) || defined(FRAGMENT_DEPTH_CHECK)
in vec4 textureCoordinateBoundsOrLabelTranslate;    // the min and max x and y values for the texture coordinates
#endif
#ifdef VECTOR_TILE
in float a_batchId;
#endif

out vec2 v_textureCoordinates;
#ifdef FRAGMENT_DEPTH_CHECK
out vec4 v_textureCoordinateBounds;
out vec4 v_originTextureCoordinateAndTranslate;
out vec4 v_compressed;                                 // x: eyeDepth, y: applyTranslate & enableDepthCheck, z: dimensions, w: imageSize
out mat2 v_rotationMatrix;
#endif

out vec4 v_pickColor;
out vec4 v_color;
#ifdef SDF
out vec4 v_outlineColor;
out float v_outlineWidth;
#endif

const float UPPER_BOUND = 32768.0;

const float SHIFT_LEFT16 = 65536.0;
const float SHIFT_LEFT12 = 4096.0;
const float SHIFT_LEFT8 = 256.0;
const float SHIFT_LEFT7 = 128.0;
const float SHIFT_LEFT5 = 32.0;
const float SHIFT_LEFT3 = 8.0;
const float SHIFT_LEFT2 = 4.0;
const float SHIFT_LEFT1 = 2.0;

const float SHIFT_RIGHT12 = 1.0 / 4096.0;
const float SHIFT_RIGHT8 = 1.0 / 256.0;
const float SHIFT_RIGHT7 = 1.0 / 128.0;
const float SHIFT_RIGHT5 = 1.0 / 32.0;
const float SHIFT_RIGHT3 = 1.0 / 8.0;
const float SHIFT_RIGHT2 = 1.0 / 4.0;
const float SHIFT_RIGHT1 = 1.0 / 2.0;

vec4 addScreenSpaceOffset(vec4 positionEC, vec2 imageSize, float scale, vec2 direction, vec2 origin, vec2 translate, vec2 pixelOffset, vec3 alignedAxis, bool validAlignedAxis, float rotation, bool sizeInMeters, out mat2 rotationMatrix, out float mpp)
{
    // Note the halfSize cannot be computed in JavaScript because it is sent via
    // compressed vertex attributes that coerce it to an integer.
    vec2 halfSize = imageSize * scale * 0.5;
    halfSize *= ((direction * 2.0) - 1.0);

    vec2 originTranslate = origin * abs(halfSize);

#if defined(ROTATION) || defined(ALIGNED_AXIS)
    if (validAlignedAxis || rotation != 0.0)
    {
        float angle = rotation;
        if (validAlignedAxis)
        {
            vec4 projectedAlignedAxis = czm_modelView3D * vec4(alignedAxis, 0.0);
            angle += sign(-projectedAlignedAxis.x) * acos(sign(projectedAlignedAxis.y) * (projectedAlignedAxis.y * projectedAlignedAxis.y) /
                    (projectedAlignedAxis.x * projectedAlignedAxis.x + projectedAlignedAxis.y * projectedAlignedAxis.y));
        }

        float cosTheta = cos(angle);
        float sinTheta = sin(angle);
        rotationMatrix = mat2(cosTheta, sinTheta, -sinTheta, cosTheta);
        halfSize = rotationMatrix * halfSize;
    }
    else
    {
        rotationMatrix = mat2(1.0, 0.0, 0.0, 1.0);
    }
#endif

    mpp = czm_metersPerPixel(positionEC);
    positionEC.xy += (originTranslate + halfSize) * czm_branchFreeTernary(sizeInMeters, 1.0, mpp);
    positionEC.xy += (translate + pixelOffset) * mpp;

    return positionEC;
}

#ifdef VERTEX_DEPTH_CHECK
float getGlobeDepth(vec4 positionEC)
{
    vec4 posWC = czm_eyeToWindowCoordinates(positionEC);

    float globeDepth = czm_unpackDepth(texture(czm_globeDepthTexture, posWC.xy / czm_viewport.zw));

    if (globeDepth == 0.0)
    {
        return 0.0; // not on the globe
    }

    vec4 eyeCoordinate = czm_windowToEyeCoordinates(posWC.xy, globeDepth);
    return eyeCoordinate.z / eyeCoordinate.w;
}
#endif
void main()
{
    // Modifying this shader may also require modifications to Billboard._computeScreenSpacePosition

    // unpack attributes
    vec3 positionHigh = positionHighAndScale.xyz;
    vec3 positionLow = positionLowAndRotation.xyz;
    float scale = positionHighAndScale.w;

#if defined(ROTATION) || defined(ALIGNED_AXIS)
    float rotation = positionLowAndRotation.w;
#else
    float rotation = 0.0;
#endif

    float compressed = compressedAttribute0.x;

    vec2 pixelOffset;
    pixelOffset.x = floor(compressed * SHIFT_RIGHT7);
    compressed -= pixelOffset.x * SHIFT_LEFT7;
    pixelOffset.x -= UPPER_BOUND;

    vec2 origin;
    origin.x = floor(compressed * SHIFT_RIGHT5);
    compressed -= origin.x * SHIFT_LEFT5;

    origin.y = floor(compressed * SHIFT_RIGHT3);
    compressed -= origin.y * SHIFT_LEFT3;

#ifdef FRAGMENT_DEPTH_CHECK
    vec2 depthOrigin = origin.xy;
#endif
    origin -= vec2(1.0);

    float show = floor(compressed * SHIFT_RIGHT2);
    compressed -= show * SHIFT_LEFT2;

#ifdef INSTANCED
    vec2 textureCoordinatesBottomLeft = czm_decompressTextureCoordinates(compressedAttribute0.w);
    vec2 textureCoordinatesRange = czm_decompressTextureCoordinates(eyeOffset.w);
    vec2 textureCoordinates = textureCoordinatesBottomLeft + direction * textureCoordinatesRange;
#else
    vec2 direction;
    direction.x = floor(compressed * SHIFT_RIGHT1);
    direction.y = compressed - direction.x * SHIFT_LEFT1;

    vec2 textureCoordinates = czm_decompressTextureCoordinates(compressedAttribute0.w);
#endif

    float temp = compressedAttribute0.y  * SHIFT_RIGHT8;
    pixelOffset.y = -(floor(temp) - UPPER_BOUND);

    vec2 translate;
    translate.y = (temp - floor(temp)) * SHIFT_LEFT16;

    temp = compressedAttribute0.z * SHIFT_RIGHT8;
    translate.x = floor(temp) - UPPER_BOUND;

    translate.y += (temp - floor(temp)) * SHIFT_LEFT8;
    translate.y -= UPPER_BOUND;

    temp = compressedAttribute1.x * SHIFT_RIGHT8;
    float temp2 = floor(compressedAttribute2.w * SHIFT_RIGHT2);

    vec2 imageSize = vec2(floor(temp), temp2);

#ifdef FRAGMENT_DEPTH_CHECK
    float labelHorizontalOrigin = floor(compressedAttribute2.w - (temp2 * SHIFT_LEFT2));
    float applyTranslate = 0.0;
    if (labelHorizontalOrigin != 0.0) // is a billboard, so set apply translate to false
    {
        applyTranslate = 1.0;
        labelHorizontalOrigin -= 2.0;
        depthOrigin.x = labelHorizontalOrigin + 1.0;
    }

    depthOrigin = vec2(1.0) - (depthOrigin * 0.5);
#endif

#ifdef EYE_DISTANCE_TRANSLUCENCY
    vec4 translucencyByDistance;
    translucencyByDistance.x = compressedAttribute1.z;
    translucencyByDistance.z = compressedAttribute1.w;

    translucencyByDistance.y = ((temp - floor(temp)) * SHIFT_LEFT8) / 255.0;

    temp = compressedAttribute1.y * SHIFT_RIGHT8;
    translucencyByDistance.w = ((temp - floor(temp)) * SHIFT_LEFT8) / 255.0;
#endif

#if defined(VERTEX_DEPTH_CHECK) || defined(FRAGMENT_DEPTH_CHECK)
    temp = compressedAttribute3.w;
    temp = temp * SHIFT_RIGHT12;

    vec2 dimensions;
    dimensions.y = (temp - floor(temp)) * SHIFT_LEFT12;
    dimensions.x = floor(temp);
#endif

#ifdef ALIGNED_AXIS
    vec3 alignedAxis = czm_octDecode(floor(compressedAttribute1.y * SHIFT_RIGHT8));
    temp = compressedAttribute2.z * SHIFT_RIGHT5;
    bool validAlignedAxis = (temp - floor(temp)) * SHIFT_LEFT1 > 0.0;
#else
    vec3 alignedAxis = vec3(0.0);
    bool validAlignedAxis = false;
#endif

    vec4 pickColor;
    vec4 color;

    temp = compressedAttribute2.y;
    temp = temp * SHIFT_RIGHT8;
    pickColor.b = (temp - floor(temp)) * SHIFT_LEFT8;
    temp = floor(temp) * SHIFT_RIGHT8;
    pickColor.g = (temp - floor(temp)) * SHIFT_LEFT8;
    pickColor.r = floor(temp);

    temp = compressedAttribute2.x;
    temp = temp * SHIFT_RIGHT8;
    color.b = (temp - floor(temp)) * SHIFT_LEFT8;
    temp = floor(temp) * SHIFT_RIGHT8;
    color.g = (temp - floor(temp)) * SHIFT_LEFT8;
    color.r = floor(temp);

    temp = compressedAttribute2.z * SHIFT_RIGHT8;
    bool sizeInMeters = floor((temp - floor(temp)) * SHIFT_LEFT7) > 0.0;
    temp = floor(temp) * SHIFT_RIGHT8;

    pickColor.a = (temp - floor(temp)) * SHIFT_LEFT8;
    pickColor /= 255.0;

    color.a = floor(temp);
    color /= 255.0;

    ///////////////////////////////////////////////////////////////////////////

    vec4 p = czm_translateRelativeToEye(positionHigh, positionLow);
    vec4 positionEC = czm_modelViewRelativeToEye * p;

#if defined(FRAGMENT_DEPTH_CHECK) || defined(VERTEX_DEPTH_CHECK)
    float eyeDepth = positionEC.z;
#endif

    positionEC = czm_eyeOffset(positionEC, eyeOffset.xyz);
    positionEC.xyz *= show;

    ///////////////////////////////////////////////////////////////////////////

#if defined(EYE_DISTANCE_SCALING) || defined(EYE_DISTANCE_TRANSLUCENCY) || defined(EYE_DISTANCE_PIXEL_OFFSET) || defined(DISTANCE_DISPLAY_CONDITION) || defined(DISABLE_DEPTH_DISTANCE)
    float lengthSq;
    if (czm_sceneMode == czm_sceneMode2D)
    {
        // 2D camera distance is a special case
        // treat all billboards as flattened to the z=0.0 plane
        lengthSq = czm_eyeHeight2D.y;
    }
    else
    {
        lengthSq = dot(positionEC.xyz, positionEC.xyz);
    }
#endif

#ifdef EYE_DISTANCE_SCALING
    float distanceScale = czm_nearFarScalar(scaleByDistance, lengthSq);
    scale *= distanceScale;
    translate *= distanceScale;
    // push vertex behind near plane for clipping
    if (scale == 0.0)
    {
        positionEC.xyz = vec3(0.0);
    }
#endif

    float translucency = 1.0;
#ifdef EYE_DISTANCE_TRANSLUCENCY
    translucency = czm_nearFarScalar(translucencyByDistance, lengthSq);
    // push vertex behind near plane for clipping
    if (translucency == 0.0)
    {
        positionEC.xyz = vec3(0.0);
    }
#endif

#ifdef EYE_DISTANCE_PIXEL_OFFSET
    float pixelOffsetScale = czm_nearFarScalar(pixelOffsetScaleByDistance, lengthSq);
    pixelOffset *= pixelOffsetScale;
#endif

#ifdef DISTANCE_DISPLAY_CONDITION
    float nearSq = compressedAttribute3.x;
    float farSq = compressedAttribute3.y;
    if (lengthSq < nearSq || lengthSq > farSq)
    {
        positionEC.xyz = vec3(0.0);
    }
#endif

    mat2 rotationMatrix;
    float mpp;

#ifdef DISABLE_DEPTH_DISTANCE
    float disableDepthTestDistance = compressedAttribute3.z;
#endif

#ifdef VERTEX_DEPTH_CHECK
if (lengthSq < disableDepthTestDistance) {
    float depthsilon = 10.0;

    vec2 labelTranslate = textureCoordinateBoundsOrLabelTranslate.xy;
    vec4 pEC1 = addScreenSpaceOffset(positionEC, dimensions, scale, vec2(0.0), origin, labelTranslate, pixelOffset, alignedAxis, validAlignedAxis, rotation, sizeInMeters, rotationMatrix, mpp);
    float globeDepth1 = getGlobeDepth(pEC1);

    if (globeDepth1 != 0.0 && pEC1.z + depthsilon < globeDepth1)
    {
        vec4 pEC2 = addScreenSpaceOffset(positionEC, dimensions, scale, vec2(0.0, 1.0), origin, labelTranslate, pixelOffset, alignedAxis, validAlignedAxis, rotation, sizeInMeters, rotationMatrix, mpp);
        float globeDepth2 = getGlobeDepth(pEC2);

        if (globeDepth2 != 0.0 && pEC2.z + depthsilon < globeDepth2)
        {
            vec4 pEC3 = addScreenSpaceOffset(positionEC, dimensions, scale, vec2(1.0), origin, labelTranslate, pixelOffset, alignedAxis, validAlignedAxis, rotation, sizeInMeters, rotationMatrix, mpp);
            float globeDepth3 = getGlobeDepth(pEC3);
            if (globeDepth3 != 0.0 && pEC3.z + depthsilon < globeDepth3)
            {
                positionEC.xyz = vec3(0.0);
            }
        }
    }
}
#endif

    positionEC = addScreenSpaceOffset(positionEC, imageSize, scale, direction, origin, translate, pixelOffset, alignedAxis, validAlignedAxis, rotation, sizeInMeters, rotationMatrix, mpp);
    gl_Position = czm_projection * positionEC;
    v_textureCoordinates = textureCoordinates;

#ifdef LOG_DEPTH
    czm_vertexLogDepth();
#endif

#ifdef DISABLE_DEPTH_DISTANCE
    if (disableDepthTestDistance == 0.0 && czm_minimumDisableDepthTestDistance != 0.0)
    {
        disableDepthTestDistance = czm_minimumDisableDepthTestDistance;
    }

    if (disableDepthTestDistance != 0.0)
    {
        // Don't try to "multiply both sides" by w.  Greater/less-than comparisons won't work for negative values of w.
        float zclip = gl_Position.z / gl_Position.w;
        bool clipped = (zclip < -1.0 || zclip > 1.0);
        if (!clipped && (disableDepthTestDistance < 0.0 || (lengthSq > 0.0 && lengthSq < disableDepthTestDistance)))
        {
            // Position z on the near plane.
            gl_Position.z = -gl_Position.w;
#ifdef LOG_DEPTH
            v_depthFromNearPlusOne = 1.0;
#endif
        }
    }
#endif

#ifdef FRAGMENT_DEPTH_CHECK
    if (sizeInMeters) {
        translate /= mpp;
        dimensions /= mpp;
        imageSize /= mpp;
    }

#if defined(ROTATION) || defined(ALIGNED_AXIS)
    v_rotationMatrix = rotationMatrix;
#else
    v_rotationMatrix = mat2(1.0, 0.0, 0.0, 1.0);
#endif

    float enableDepthCheck = 0.0;
    if (lengthSq < disableDepthTestDistance)
    {
        enableDepthCheck = 1.0;
    }

    float dw = floor(clamp(dimensions.x, 0.0, SHIFT_LEFT12));
    float dh = floor(clamp(dimensions.y, 0.0, SHIFT_LEFT12));

    float iw = floor(clamp(imageSize.x, 0.0, SHIFT_LEFT12));
    float ih = floor(clamp(imageSize.y, 0.0, SHIFT_LEFT12));

    v_compressed.x = eyeDepth;
    v_compressed.y = applyTranslate * SHIFT_LEFT1 + enableDepthCheck;
    v_compressed.z = dw * SHIFT_LEFT12 + dh;
    v_compressed.w = iw * SHIFT_LEFT12 + ih;
    v_originTextureCoordinateAndTranslate.xy = depthOrigin;
    v_originTextureCoordinateAndTranslate.zw = translate;
    v_textureCoordinateBounds = textureCoordinateBoundsOrLabelTranslate;

#endif

#ifdef SDF
    vec4 outlineColor;
    float outlineWidth;

    temp = sdf.x;
    temp = temp * SHIFT_RIGHT8;
    outlineColor.b = (temp - floor(temp)) * SHIFT_LEFT8;
    temp = floor(temp) * SHIFT_RIGHT8;
    outlineColor.g = (temp - floor(temp)) * SHIFT_LEFT8;
    outlineColor.r = floor(temp);

    temp = sdf.y;
    temp = temp * SHIFT_RIGHT8;
    float temp3 = (temp - floor(temp)) * SHIFT_LEFT8;
    temp = floor(temp) * SHIFT_RIGHT8;
    outlineWidth = (temp - floor(temp)) * SHIFT_LEFT8;
    outlineColor.a = floor(temp);
    outlineColor /= 255.0;

    v_outlineWidth = outlineWidth / 255.0;
    v_outlineColor = outlineColor;
    v_outlineColor.a *= translucency;
#endif

    v_pickColor = pickColor;

    v_color = color;
    v_color.a *= translucency;

}
`;var _N={ADD:S.FUNC_ADD,SUBTRACT:S.FUNC_SUBTRACT,REVERSE_SUBTRACT:S.FUNC_REVERSE_SUBTRACT,MIN:S.MIN,MAX:S.MAX},En=Object.freeze(_N);var ON={ZERO:S.ZERO,ONE:S.ONE,SOURCE_COLOR:S.SRC_COLOR,ONE_MINUS_SOURCE_COLOR:S.ONE_MINUS_SRC_COLOR,DESTINATION_COLOR:S.DST_COLOR,ONE_MINUS_DESTINATION_COLOR:S.ONE_MINUS_DST_COLOR,SOURCE_ALPHA:S.SRC_ALPHA,ONE_MINUS_SOURCE_ALPHA:S.ONE_MINUS_SRC_ALPHA,DESTINATION_ALPHA:S.DST_ALPHA,ONE_MINUS_DESTINATION_ALPHA:S.ONE_MINUS_DST_ALPHA,CONSTANT_COLOR:S.CONSTANT_COLOR,ONE_MINUS_CONSTANT_COLOR:S.ONE_MINUS_CONSTANT_COLOR,CONSTANT_ALPHA:S.CONSTANT_ALPHA,ONE_MINUS_CONSTANT_ALPHA:S.ONE_MINUS_CONSTANT_ALPHA,SOURCE_ALPHA_SATURATE:S.SRC_ALPHA_SATURATE},gh=Object.freeze(ON);var wN={DISABLED:Object.freeze({enabled:!1}),ALPHA_BLEND:Object.freeze({enabled:!0,equationRgb:En.ADD,equationAlpha:En.ADD,functionSourceRgb:gh.SOURCE_ALPHA,functionSourceAlpha:gh.ONE,functionDestinationRgb:gh.ONE_MINUS_SOURCE_ALPHA,functionDestinationAlpha:gh.ONE_MINUS_SOURCE_ALPHA}),PRE_MULTIPLIED_ALPHA_BLEND:Object.freeze({enabled:!0,equationRgb:En.ADD,equationAlpha:En.ADD,functionSourceRgb:gh.ONE,functionSourceAlpha:gh.ONE,functionDestinationRgb:gh.ONE_MINUS_SOURCE_ALPHA,functionDestinationAlpha:gh.ONE_MINUS_SOURCE_ALPHA}),ADDITIVE_BLEND:Object.freeze({enabled:!0,equationRgb:En.ADD,equationAlpha:En.ADD,functionSourceRgb:gh.SOURCE_ALPHA,functionSourceAlpha:gh.ONE,functionDestinationRgb:gh.ONE,functionDestinationAlpha:gh.ONE})},fh=Object.freeze(wN);var yN={OPAQUE:0,TRANSLUCENT:1,OPAQUE_AND_TRANSLUCENT:2},Fm=Object.freeze(yN);var HN={FONT_SIZE:48,PADDING:10,RADIUS:8,CUTOFF:.25},lh=Object.freeze(HN);function Pa(Z,m,h){let n=Z._gl;n.framebufferTexture2D(n.FRAMEBUFFER,m,h._target,h._texture,0)}function LA(Z,m,h){let n=Z._gl;n.framebufferRenderbuffer(n.FRAMEBUFFER,m,n.RENDERBUFFER,h._getRenderbuffer())}function ZY(Z){Z=l(Z,l.EMPTY_OBJECT);let m=Z.context;y.defined("options.context",m);let h=m._gl,n=$Z.maximumColorAttachments;if(this._gl=h,this._framebuffer=h.createFramebuffer(),this._colorTextures=[],this._colorRenderbuffers=[],this._activeColorAttachments=[],this._depthTexture=void 0,this._depthRenderbuffer=void 0,this._stencilRenderbuffer=void 0,this._depthStencilTexture=void 0,this._depthStencilRenderbuffer=void 0,this.destroyAttachments=l(Z.destroyAttachments,!0),V(Z.colorTextures)&&V(Z.colorRenderbuffers))throw new U("Cannot have both color texture and color renderbuffer attachments.");if(V(Z.depthTexture)&&V(Z.depthRenderbuffer))throw new U("Cannot have both a depth texture and depth renderbuffer attachment.");if(V(Z.depthStencilTexture)&&V(Z.depthStencilRenderbuffer))throw new U("Cannot have both a depth-stencil texture and depth-stencil renderbuffer attachment.");let i=V(Z.depthTexture)||V(Z.depthRenderbuffer),A=V(Z.depthStencilTexture)||V(Z.depthStencilRenderbuffer);if(i&&A)throw new U("Cannot have both a depth and depth-stencil attachment.");if(V(Z.stencilRenderbuffer)&&A)throw new U("Cannot have both a stencil and depth-stencil attachment.");if(i&&V(Z.stencilRenderbuffer))throw new U("Cannot have both a depth and stencil attachment.");this._bind();let t,W,e,G,F;if(V(Z.colorTextures)){let d=Z.colorTextures;if(G=this._colorTextures.length=this._activeColorAttachments.length=d.length,G>n)throw new U("The number of color attachments exceeds the number supported.");for(e=0;e<G;++e){if(t=d[e],!JZ.isColorFormat(t.pixelFormat))throw new U("The color-texture pixel-format must be a color format.");if(t.pixelDatatype===QZ.FLOAT&&!m.colorBufferFloat)throw new U("The color texture pixel datatype is FLOAT and the WebGL implementation does not support the EXT_color_buffer_float or WEBGL_color_buffer_float extensions. See Context.colorBufferFloat.");if(t.pixelDatatype===QZ.HALF_FLOAT&&!m.colorBufferHalfFloat)throw new U("The color texture pixel datatype is HALF_FLOAT and the WebGL implementation does not support the EXT_color_buffer_half_float extension. See Context.colorBufferHalfFloat.");F=this._gl.COLOR_ATTACHMENT0+e,Pa(this,F,t),this._activeColorAttachments[e]=F,this._colorTextures[e]=t}}if(V(Z.colorRenderbuffers)){let d=Z.colorRenderbuffers;if(G=this._colorRenderbuffers.length=this._activeColorAttachments.length=d.length,G>n)throw new U("The number of color attachments exceeds the number supported.");for(e=0;e<G;++e)W=d[e],F=this._gl.COLOR_ATTACHMENT0+e,LA(this,F,W),this._activeColorAttachments[e]=F,this._colorRenderbuffers[e]=W}if(V(Z.depthTexture)){if(t=Z.depthTexture,t.pixelFormat!==JZ.DEPTH_COMPONENT)throw new U("The depth-texture pixel-format must be DEPTH_COMPONENT.");Pa(this,this._gl.DEPTH_ATTACHMENT,t),this._depthTexture=t}if(V(Z.depthRenderbuffer)&&(W=Z.depthRenderbuffer,LA(this,this._gl.DEPTH_ATTACHMENT,W),this._depthRenderbuffer=W),V(Z.stencilRenderbuffer)&&(W=Z.stencilRenderbuffer,LA(this,this._gl.STENCIL_ATTACHMENT,W),this._stencilRenderbuffer=W),V(Z.depthStencilTexture)){if(t=Z.depthStencilTexture,t.pixelFormat!==JZ.DEPTH_STENCIL)throw new U("The depth-stencil pixel-format must be DEPTH_STENCIL.");Pa(this,this._gl.DEPTH_STENCIL_ATTACHMENT,t),this._depthStencilTexture=t}V(Z.depthStencilRenderbuffer)&&(W=Z.depthStencilRenderbuffer,LA(this,this._gl.DEPTH_STENCIL_ATTACHMENT,W),this._depthStencilRenderbuffer=W),this._unBind()}Object.defineProperties(ZY.prototype,{status:{get:function(){this._bind();let Z=this._gl.checkFramebufferStatus(this._gl.FRAMEBUFFER);return this._unBind(),Z}},numberOfColorAttachments:{get:function(){return this._activeColorAttachments.length}},depthTexture:{get:function(){return this._depthTexture}},depthRenderbuffer:{get:function(){return this._depthRenderbuffer}},stencilRenderbuffer:{get:function(){return this._stencilRenderbuffer}},depthStencilTexture:{get:function(){return this._depthStencilTexture}},depthStencilRenderbuffer:{get:function(){return this._depthStencilRenderbuffer}},hasDepthAttachment:{get:function(){return!!(this.depthTexture||this.depthRenderbuffer||this.depthStencilTexture||this.depthStencilRenderbuffer)}}});ZY.prototype._bind=function(){let Z=this._gl;Z.bindFramebuffer(Z.FRAMEBUFFER,this._framebuffer)};ZY.prototype._unBind=function(){let Z=this._gl;Z.bindFramebuffer(Z.FRAMEBUFFER,null)};ZY.prototype.bindDraw=function(){let Z=this._gl;Z.bindFramebuffer(Z.DRAW_FRAMEBUFFER,this._framebuffer)};ZY.prototype.bindRead=function(){let Z=this._gl;Z.bindFramebuffer(Z.READ_FRAMEBUFFER,this._framebuffer)};ZY.prototype._getActiveColorAttachments=function(){return this._activeColorAttachments};ZY.prototype.getColorTexture=function(Z){if(!V(Z)||Z<0||Z>=this._colorTextures.length)throw new U("index is required, must be greater than or equal to zero and must be less than the number of color attachments.");return this._colorTextures[Z]};ZY.prototype.getColorRenderbuffer=function(Z){if(!V(Z)||Z<0||Z>=this._colorRenderbuffers.length)throw new U("index is required, must be greater than or equal to zero and must be less than the number of color attachments.");return this._colorRenderbuffers[Z]};ZY.prototype.isDestroyed=function(){return!1};ZY.prototype.destroy=function(){if(this.destroyAttachments){let Z=0,m=this._colorTextures,h=m.length;for(;Z<h;++Z){let i=m[Z];V(i)&&i.destroy()}let n=this._colorRenderbuffers;for(h=n.length,Z=0;Z<h;++Z){let i=n[Z];V(i)&&i.destroy()}this._depthTexture=this._depthTexture&&this._depthTexture.destroy(),this._depthRenderbuffer=this._depthRenderbuffer&&this._depthRenderbuffer.destroy(),this._stencilRenderbuffer=this._stencilRenderbuffer&&this._stencilRenderbuffer.destroy(),this._depthStencilTexture=this._depthStencilTexture&&this._depthStencilTexture.destroy(),this._depthStencilRenderbuffer=this._depthStencilRenderbuffer&&this._depthStencilRenderbuffer.destroy()}return this._gl.deleteFramebuffer(this._framebuffer),cZ(this)};var Dl=ZY;var vA={DONT_CARE:S.DONT_CARE,FASTEST:S.FASTEST,NICEST:S.NICEST,validate:function(Z){return Z===vA.DONT_CARE||Z===vA.FASTEST||Z===vA.NICEST}},Hn=Object.freeze(vA);var PA={NEAREST:S.NEAREST,LINEAR:S.LINEAR};PA.validate=function(Z){return Z===PA.NEAREST||Z===PA.LINEAR};var mY=Object.freeze(PA);var KY={NEAREST:S.NEAREST,LINEAR:S.LINEAR,NEAREST_MIPMAP_NEAREST:S.NEAREST_MIPMAP_NEAREST,LINEAR_MIPMAP_NEAREST:S.LINEAR_MIPMAP_NEAREST,NEAREST_MIPMAP_LINEAR:S.NEAREST_MIPMAP_LINEAR,LINEAR_MIPMAP_LINEAR:S.LINEAR_MIPMAP_LINEAR};KY.validate=function(Z){return Z===KY.NEAREST||Z===KY.LINEAR||Z===KY.NEAREST_MIPMAP_NEAREST||Z===KY.LINEAR_MIPMAP_NEAREST||Z===KY.NEAREST_MIPMAP_LINEAR||Z===KY.LINEAR_MIPMAP_LINEAR};var um=Object.freeze(KY);var KA={CLAMP_TO_EDGE:S.CLAMP_TO_EDGE,REPEAT:S.REPEAT,MIRRORED_REPEAT:S.MIRRORED_REPEAT,validate:function(Z){return Z===KA.CLAMP_TO_EDGE||Z===KA.REPEAT||Z===KA.MIRRORED_REPEAT}},kn=Object.freeze(KA);function Ci(Z){Z=l(Z,l.EMPTY_OBJECT);let m=l(Z.wrapS,kn.CLAMP_TO_EDGE),h=l(Z.wrapT,kn.CLAMP_TO_EDGE),n=l(Z.minificationFilter,um.LINEAR),i=l(Z.magnificationFilter,mY.LINEAR),A=V(Z.maximumAnisotropy)?Z.maximumAnisotropy:1;if(!kn.validate(m))throw new U("Invalid sampler.wrapS.");if(!kn.validate(h))throw new U("Invalid sampler.wrapT.");if(!um.validate(n))throw new U("Invalid sampler.minificationFilter.");if(!mY.validate(i))throw new U("Invalid sampler.magnificationFilter.");y.typeOf.number.greaterThanOrEquals("maximumAnisotropy",A,1),this._wrapS=m,this._wrapT=h,this._minificationFilter=n,this._magnificationFilter=i,this._maximumAnisotropy=A}Object.defineProperties(Ci.prototype,{wrapS:{get:function(){return this._wrapS}},wrapT:{get:function(){return this._wrapT}},minificationFilter:{get:function(){return this._minificationFilter}},magnificationFilter:{get:function(){return this._magnificationFilter}},maximumAnisotropy:{get:function(){return this._maximumAnisotropy}}});Ci.equals=function(Z,m){return Z===m||V(Z)&&V(m)&&Z._wrapS===m._wrapS&&Z._wrapT===m._wrapT&&Z._minificationFilter===m._minificationFilter&&Z._magnificationFilter===m._magnificationFilter&&Z._maximumAnisotropy===m._maximumAnisotropy};Ci.NEAREST=Object.freeze(new Ci({wrapS:kn.CLAMP_TO_EDGE,wrapT:kn.CLAMP_TO_EDGE,minificationFilter:um.NEAREST,magnificationFilter:mY.NEAREST}));var sY=Ci;function hY(Z){Z=l(Z,l.EMPTY_OBJECT),y.defined("options.context",Z.context);let m=Z.context,h=Z.width,n=Z.height,i=Z.source;V(i)&&(V(h)||(h=l(i.videoWidth,i.width)),V(n)||(n=l(i.videoHeight,i.height)));let A=l(Z.pixelFormat,JZ.RGBA),t=l(Z.pixelDatatype,QZ.UNSIGNED_BYTE),W=JZ.toInternalFormat(A,t,m),e=JZ.isCompressedFormat(W);if(!V(h)||!V(n))throw new U("options requires a source field to create an initialized texture or width and height fields to create a blank texture.");if(y.typeOf.number.greaterThan("width",h,0),h>$Z.maximumTextureSize)throw new U(`Width must be less than or equal to the maximum texture size (${$Z.maximumTextureSize}).  Check maximumTextureSize.`);if(y.typeOf.number.greaterThan("height",n,0),n>$Z.maximumTextureSize)throw new U(`Height must be less than or equal to the maximum texture size (${$Z.maximumTextureSize}).  Check maximumTextureSize.`);if(!JZ.validate(A))throw new U("Invalid options.pixelFormat.");if(!e&&!QZ.validate(t))throw new U("Invalid options.pixelDatatype.");if(A===JZ.DEPTH_COMPONENT&&t!==QZ.UNSIGNED_SHORT&&t!==QZ.UNSIGNED_INT)throw new U("When options.pixelFormat is DEPTH_COMPONENT, options.pixelDatatype must be UNSIGNED_SHORT or UNSIGNED_INT.");if(A===JZ.DEPTH_STENCIL&&t!==QZ.UNSIGNED_INT_24_8)throw new U("When options.pixelFormat is DEPTH_STENCIL, options.pixelDatatype must be UNSIGNED_INT_24_8.");if(t===QZ.FLOAT&&!m.floatingPointTexture)throw new U("When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.  Check context.floatingPointTexture.");if(t===QZ.HALF_FLOAT&&!m.halfFloatingPointTexture)throw new U("When options.pixelDatatype is HALF_FLOAT, this WebGL implementation must support the OES_texture_half_float extension. Check context.halfFloatingPointTexture.");if(JZ.isDepthFormat(A)){if(V(i))throw new U("When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, source cannot be provided.");if(!m.depthTexture)throw new U("When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, this WebGL implementation must support WEBGL_depth_texture.  Check context.depthTexture.")}if(e){if(!V(i)||!V(i.arrayBufferView))throw new U("When options.pixelFormat is compressed, options.source.arrayBufferView must be defined.");if(JZ.isDXTFormat(W)&&!m.s3tc)throw new U("When options.pixelFormat is S3TC compressed, this WebGL implementation must support the WEBGL_compressed_texture_s3tc extension. Check context.s3tc.");if(JZ.isPVRTCFormat(W)&&!m.pvrtc)throw new U("When options.pixelFormat is PVRTC compressed, this WebGL implementation must support the WEBGL_compressed_texture_pvrtc extension. Check context.pvrtc.");if(JZ.isASTCFormat(W)&&!m.astc)throw new U("When options.pixelFormat is ASTC compressed, this WebGL implementation must support the WEBGL_compressed_texture_astc extension. Check context.astc.");if(JZ.isETC2Format(W)&&!m.etc)throw new U("When options.pixelFormat is ETC2 compressed, this WebGL implementation must support the WEBGL_compressed_texture_etc extension. Check context.etc.");if(JZ.isETC1Format(W)&&!m.etc1)throw new U("When options.pixelFormat is ETC1 compressed, this WebGL implementation must support the WEBGL_compressed_texture_etc1 extension. Check context.etc1.");if(JZ.isBC7Format(W)&&!m.bc7)throw new U("When options.pixelFormat is BC7 compressed, this WebGL implementation must support the EXT_texture_compression_bptc extension. Check context.bc7.");if(JZ.compressedTextureSizeInBytes(W,h,n)!==i.arrayBufferView.byteLength)throw new U("The byte length of the array buffer is invalid for the compressed texture with the given width and height.")}let G=Z.preMultiplyAlpha||A===JZ.RGB||A===JZ.LUMINANCE,F=l(Z.flipY,!0),d=l(Z.skipColorSpaceConversion,!1),J=!0,k=m._gl,r=k.TEXTURE_2D,Q=k.createTexture();k.activeTexture(k.TEXTURE0),k.bindTexture(r,Q);let p=4;if(V(i)&&V(i.arrayBufferView)&&!e&&(p=JZ.alignmentInBytes(A,t,h)),k.pixelStorei(k.UNPACK_ALIGNMENT,p),d?k.pixelStorei(k.UNPACK_COLORSPACE_CONVERSION_WEBGL,k.NONE):k.pixelStorei(k.UNPACK_COLORSPACE_CONVERSION_WEBGL,k.BROWSER_DEFAULT_WEBGL),V(i))if(V(i.arrayBufferView)){k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,!1);let I=i.arrayBufferView,f,b,O;if(e){if(k.compressedTexImage2D(r,0,W,h,n,0,I),V(i.mipLevels))for(b=h,O=n,f=0;f<i.mipLevels.length;++f)b=Math.floor(b/2)|0,b<1&&(b=1),O=Math.floor(O/2)|0,O<1&&(O=1),k.compressedTexImage2D(r,f+1,W,b,O,0,i.mipLevels[f])}else if(F&&(I=JZ.flipY(I,A,t,h,n)),k.texImage2D(r,0,W,h,n,0,A,QZ.toWebGLConstant(t,m),I),V(i.mipLevels))for(b=h,O=n,f=0;f<i.mipLevels.length;++f)b=Math.floor(b/2)|0,b<1&&(b=1),O=Math.floor(O/2)|0,O<1&&(O=1),k.texImage2D(r,f+1,W,b,O,0,A,QZ.toWebGLConstant(t,m),i.mipLevels[f])}else V(i.framebuffer)?(k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,!1),i.framebuffer!==m.defaultFramebuffer&&i.framebuffer._bind(),k.copyTexImage2D(r,0,W,i.xOffset,i.yOffset,h,n,0),i.framebuffer!==m.defaultFramebuffer&&i.framebuffer._unBind()):(k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,G),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,F),k.texImage2D(r,0,W,A,QZ.toWebGLConstant(t,m),i));else k.texImage2D(r,0,W,h,n,0,A,QZ.toWebGLConstant(t,m),null),J=!1;k.bindTexture(r,null);let T;e?T=JZ.compressedTextureSizeInBytes(A,h,n):T=JZ.textureSizeInBytes(A,t,h,n),this._id=Km(),this._context=m,this._textureFilterAnisotropic=m._textureFilterAnisotropic,this._textureTarget=r,this._texture=Q,this._internalFormat=W,this._pixelFormat=A,this._pixelDatatype=t,this._width=h,this._height=n,this._dimensions=new q(h,n),this._hasMipmap=!1,this._sizeInBytes=T,this._preMultiplyAlpha=G,this._flipY=F,this._initialized=J,this._sampler=void 0,this.sampler=V(Z.sampler)?Z.sampler:new sY}hY.create=function(Z){return new hY(Z)};hY.fromFramebuffer=function(Z){Z=l(Z,l.EMPTY_OBJECT),y.defined("options.context",Z.context);let m=Z.context,h=m._gl,n=l(Z.pixelFormat,JZ.RGB),i=l(Z.framebufferXOffset,0),A=l(Z.framebufferYOffset,0),t=l(Z.width,h.drawingBufferWidth),W=l(Z.height,h.drawingBufferHeight),e=Z.framebuffer;if(!JZ.validate(n))throw new U("Invalid pixelFormat.");if(JZ.isDepthFormat(n)||JZ.isCompressedFormat(n))throw new U("pixelFormat cannot be DEPTH_COMPONENT, DEPTH_STENCIL or a compressed format.");if(y.defined("options.context",Z.context),y.typeOf.number.greaterThanOrEquals("framebufferXOffset",i,0),y.typeOf.number.greaterThanOrEquals("framebufferYOffset",A,0),i+t>h.drawingBufferWidth)throw new U("framebufferXOffset + width must be less than or equal to drawingBufferWidth");if(A+W>h.drawingBufferHeight)throw new U("framebufferYOffset + height must be less than or equal to drawingBufferHeight.");return new hY({context:m,width:t,height:W,pixelFormat:n,source:{framebuffer:V(e)?e:m.defaultFramebuffer,xOffset:i,yOffset:A,width:t,height:W}})};Object.defineProperties(hY.prototype,{id:{get:function(){return this._id}},sampler:{get:function(){return this._sampler},set:function(Z){let m=Z.minificationFilter,h=Z.magnificationFilter,n=this._context,i=this._pixelFormat,A=this._pixelDatatype,t=m===um.NEAREST_MIPMAP_NEAREST||m===um.NEAREST_MIPMAP_LINEAR||m===um.LINEAR_MIPMAP_NEAREST||m===um.LINEAR_MIPMAP_LINEAR;(A===QZ.FLOAT&&!n.textureFloatLinear||A===QZ.HALF_FLOAT&&!n.textureHalfFloatLinear)&&(m=t?um.NEAREST_MIPMAP_NEAREST:um.NEAREST,h=mY.NEAREST),n.webgl2&&JZ.isDepthFormat(i)&&(m=um.NEAREST,h=mY.NEAREST);let W=n._gl,e=this._textureTarget;W.activeTexture(W.TEXTURE0),W.bindTexture(e,this._texture),W.texParameteri(e,W.TEXTURE_MIN_FILTER,m),W.texParameteri(e,W.TEXTURE_MAG_FILTER,h),W.texParameteri(e,W.TEXTURE_WRAP_S,Z.wrapS),W.texParameteri(e,W.TEXTURE_WRAP_T,Z.wrapT),V(this._textureFilterAnisotropic)&&W.texParameteri(e,this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,Z.maximumAnisotropy),W.bindTexture(e,null),this._sampler=Z}},pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},dimensions:{get:function(){return this._dimensions}},preMultiplyAlpha:{get:function(){return this._preMultiplyAlpha}},flipY:{get:function(){return this._flipY}},width:{get:function(){return this._width}},height:{get:function(){return this._height}},sizeInBytes:{get:function(){return this._hasMipmap?Math.floor(this._sizeInBytes*4/3):this._sizeInBytes}},_target:{get:function(){return this._textureTarget}}});hY.prototype.copyFrom=function(Z){y.defined("options",Z);let m=l(Z.xOffset,0),h=l(Z.yOffset,0);if(y.defined("options.source",Z.source),JZ.isDepthFormat(this._pixelFormat))throw new U("Cannot call copyFrom when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.");if(JZ.isCompressedFormat(this._pixelFormat))throw new U("Cannot call copyFrom with a compressed texture pixel format.");y.typeOf.number.greaterThanOrEquals("xOffset",m,0),y.typeOf.number.greaterThanOrEquals("yOffset",h,0),y.typeOf.number.lessThanOrEquals("xOffset + options.source.width",m+Z.source.width,this._width),y.typeOf.number.lessThanOrEquals("yOffset + options.source.height",h+Z.source.height,this._height);let n=Z.source,i=this._context,A=i._gl,t=this._textureTarget;A.activeTexture(A.TEXTURE0),A.bindTexture(t,this._texture);let W=n.width,e=n.height,G=n.arrayBufferView,F=this._width,d=this._height,J=this._internalFormat,k=this._pixelFormat,r=this._pixelDatatype,Q=this._preMultiplyAlpha,p=this._flipY,T=l(Z.skipColorSpaceConversion,!1),I=4;V(G)&&(I=JZ.alignmentInBytes(k,r,W)),A.pixelStorei(A.UNPACK_ALIGNMENT,I),T?A.pixelStorei(A.UNPACK_COLORSPACE_CONVERSION_WEBGL,A.NONE):A.pixelStorei(A.UNPACK_COLORSPACE_CONVERSION_WEBGL,A.BROWSER_DEFAULT_WEBGL);let f=!1;if(!this._initialized){if(m===0&&h===0&&W===F&&e===d)V(G)?(A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,!1),p&&(G=JZ.flipY(G,k,r,F,d)),A.texImage2D(t,0,J,F,d,0,k,QZ.toWebGLConstant(r,i),G)):(A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Q),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,p),A.texImage2D(t,0,J,k,QZ.toWebGLConstant(r,i),n)),f=!0;else{A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,!1);let b=JZ.createTypedArray(k,r,F,d);A.texImage2D(t,0,J,F,d,0,k,QZ.toWebGLConstant(r,i),b)}this._initialized=!0}f||(V(G)?(A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,!1),p&&(G=JZ.flipY(G,k,r,W,e)),A.texSubImage2D(t,0,m,h,W,e,k,QZ.toWebGLConstant(r,i),G)):(A.pixelStorei(A.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Q),A.pixelStorei(A.UNPACK_FLIP_Y_WEBGL,p),A.texSubImage2D(t,0,m,h,k,QZ.toWebGLConstant(r,i),n))),A.bindTexture(t,null)};hY.prototype.copyFromFramebuffer=function(Z,m,h,n,i,A){if(Z=l(Z,0),m=l(m,0),h=l(h,0),n=l(n,0),i=l(i,this._width),A=l(A,this._height),JZ.isDepthFormat(this._pixelFormat))throw new U("Cannot call copyFromFramebuffer when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.");if(this._pixelDatatype===QZ.FLOAT)throw new U("Cannot call copyFromFramebuffer when the texture pixel data type is FLOAT.");if(this._pixelDatatype===QZ.HALF_FLOAT)throw new U("Cannot call copyFromFramebuffer when the texture pixel data type is HALF_FLOAT.");if(JZ.isCompressedFormat(this._pixelFormat))throw new U("Cannot call copyFrom with a compressed texture pixel format.");y.typeOf.number.greaterThanOrEquals("xOffset",Z,0),y.typeOf.number.greaterThanOrEquals("yOffset",m,0),y.typeOf.number.greaterThanOrEquals("framebufferXOffset",h,0),y.typeOf.number.greaterThanOrEquals("framebufferYOffset",n,0),y.typeOf.number.lessThanOrEquals("xOffset + width",Z+i,this._width),y.typeOf.number.lessThanOrEquals("yOffset + height",m+A,this._height);let t=this._context._gl,W=this._textureTarget;t.activeTexture(t.TEXTURE0),t.bindTexture(W,this._texture),t.copyTexSubImage2D(W,0,Z,m,h,n,i,A),t.bindTexture(W,null),this._initialized=!0};hY.prototype.generateMipmap=function(Z){if(Z=l(Z,Hn.DONT_CARE),JZ.isDepthFormat(this._pixelFormat))throw new U("Cannot call generateMipmap when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.");if(JZ.isCompressedFormat(this._pixelFormat))throw new U("Cannot call generateMipmap with a compressed pixel format.");if(!this._context.webgl2){if(this._width>1&&!gZ.isPowerOfTwo(this._width))throw new U("width must be a power of two to call generateMipmap() in a WebGL1 context.");if(this._height>1&&!gZ.isPowerOfTwo(this._height))throw new U("height must be a power of two to call generateMipmap() in a WebGL1 context.")}if(!Hn.validate(Z))throw new U("hint is invalid.");this._hasMipmap=!0;let m=this._context._gl,h=this._textureTarget;m.hint(m.GENERATE_MIPMAP_HINT,Z),m.activeTexture(m.TEXTURE0),m.bindTexture(h,this._texture),m.generateMipmap(h),m.bindTexture(h,null)};hY.prototype.isDestroyed=function(){return!1};hY.prototype.destroy=function(){return this._context._gl.deleteTexture(this._texture),cZ(this)};var YY=hY;function jY(Z,m,h,n,i){this.bottomLeft=l(Z,q.ZERO),this.topRight=l(m,q.ZERO),this.childNode1=h,this.childNode2=n,this.imageIndex=i}var zN=new q(16,16);function qY(Z){Z=l(Z,l.EMPTY_OBJECT);let m=l(Z.borderWidthInPixels,1),h=l(Z.initialSize,zN);if(!V(Z.context))throw new U("context is required.");if(m<0)throw new U("borderWidthInPixels must be greater than or equal to zero.");if(h.x<1||h.y<1)throw new U("initialSize must be greater than zero.");this._context=Z.context,this._pixelFormat=l(Z.pixelFormat,JZ.RGBA),this._borderWidthInPixels=m,this._textureCoordinates=[],this._guid=Km(),this._idHash={},this._indexHash={},this._initialSize=h,this._root=void 0}Object.defineProperties(qY.prototype,{borderWidthInPixels:{get:function(){return this._borderWidthInPixels}},textureCoordinates:{get:function(){return this._textureCoordinates}},texture:{get:function(){return V(this._texture)||(this._texture=new YY({context:this._context,width:this._initialSize.x,height:this._initialSize.y,pixelFormat:this._pixelFormat})),this._texture}},numberOfImages:{get:function(){return this._textureCoordinates.length}},guid:{get:function(){return this._guid}}});function XN(Z,m){let h=Z._context,n=Z.numberOfImages,i=2,A=Z._borderWidthInPixels;if(n>0){let t=Z._texture.width,W=Z._texture.height,e=i*(t+m.width+A),G=i*(W+m.height+A),F=t/e,d=W/G,J=new jY(new q(t+A,A),new q(e,W)),k=new jY(new q,new q(e,W),Z._root,J),r=new jY(new q(A,W+A),new q(e,G)),Q=new jY(new q,new q(e,G),k,r);for(let I=0;I<Z._textureCoordinates.length;I++){let f=Z._textureCoordinates[I];V(f)&&(f.x*=F,f.y*=d,f.width*=F,f.height*=d)}let p=new YY({context:Z._context,width:e,height:G,pixelFormat:Z._pixelFormat}),T=new Dl({context:h,colorTextures:[Z._texture],destroyAttachments:!1});T._bind(),p.copyFromFramebuffer(0,0,0,0,e,G),T._unBind(),T.destroy(),Z._texture=Z._texture&&Z._texture.destroy(),Z._texture=p,Z._root=Q}else{let t=i*(m.width+2*A),W=i*(m.height+2*A);t<Z._initialSize.x&&(t=Z._initialSize.x),W<Z._initialSize.y&&(W=Z._initialSize.y),Z._texture=Z._texture&&Z._texture.destroy(),Z._texture=new YY({context:Z._context,width:t,height:W,pixelFormat:Z._pixelFormat}),Z._root=new jY(new q(A,A),new q(t,W))}}function qA(Z,m,h){if(V(m)){if(!V(m.childNode1)&&!V(m.childNode2)){if(V(m.imageIndex))return;let n=m.topRight.x-m.bottomLeft.x,i=m.topRight.y-m.bottomLeft.y,A=n-h.width,t=i-h.height;if(A<0||t<0)return;if(A===0&&t===0)return m;if(A>t){m.childNode1=new jY(new q(m.bottomLeft.x,m.bottomLeft.y),new q(m.bottomLeft.x+h.width,m.topRight.y));let W=m.bottomLeft.x+h.width+Z._borderWidthInPixels;W<m.topRight.x&&(m.childNode2=new jY(new q(W,m.bottomLeft.y),new q(m.topRight.x,m.topRight.y)))}else{m.childNode1=new jY(new q(m.bottomLeft.x,m.bottomLeft.y),new q(m.topRight.x,m.bottomLeft.y+h.height));let W=m.bottomLeft.y+h.height+Z._borderWidthInPixels;W<m.topRight.y&&(m.childNode2=new jY(new q(m.bottomLeft.x,W),new q(m.topRight.x,m.topRight.y)))}return qA(Z,m.childNode1,h)}return qA(Z,m.childNode1,h)||qA(Z,m.childNode2,h)}}function fl(Z,m,h){let n=qA(Z,Z._root,m);if(V(n)){n.imageIndex=h;let i=Z._texture.width,A=Z._texture.height,t=n.topRight.x-n.bottomLeft.x,W=n.topRight.y-n.bottomLeft.y,e=n.bottomLeft.x/i,G=n.bottomLeft.y/A,F=t/i,d=W/A;Z._textureCoordinates[h]=new qZ(e,G,F,d),Z._texture.copyFrom({source:m,xOffset:n.bottomLeft.x,yOffset:n.bottomLeft.y})}else XN(Z,m),fl(Z,m,h);Z._guid=Km()}function ul(Z,m){if(!V(Z)||Z.isDestroyed())return-1;let h=Z.numberOfImages;return fl(Z,m,h),h}qY.prototype.getImageIndex=function(Z){if(!V(Z))throw new U("id is required.");return this._indexHash[Z]};qY.prototype.addImageSync=function(Z,m){if(!V(Z))throw new U("id is required.");if(!V(m))throw new U("image is required.");let h=this._indexHash[Z];return V(h)||(h=ul(this,m),this._idHash[Z]=Promise.resolve(h),this._indexHash[Z]=h),h};qY.prototype.addImage=function(Z,m){if(!V(Z))throw new U("id is required.");if(!V(m))throw new U("image is required.");let h=this._idHash[Z];if(V(h))return h;if(typeof m=="function"){if(m=m(Z),!V(m))throw new U("image is required.")}else(typeof m=="string"||m instanceof Dm)&&(m=Dm.createIfNeeded(m).fetchImage());let n=this;return h=Promise.resolve(m).then(function(i){let A=ul(n,i);return n._indexHash[Z]=A,A}),this._idHash[Z]=h,h};qY.prototype.addSubRegion=function(Z,m){if(!V(Z))throw new U("id is required.");if(!V(m))throw new U("subRegion is required.");let h=this._idHash[Z];if(!V(h))throw new Sm(`image with id "${Z}" not found in the atlas.`);let n=this;return Promise.resolve(h).then(function(i){if(i===-1)return-1;let A=n._texture.width,t=n._texture.height,W=n._textureCoordinates[i],e=W.x+m.x/A,G=W.y+m.y/t,F=m.width/A,d=m.height/t,J=n._textureCoordinates.push(new qZ(e,G,F,d))-1;return n._indexHash[Z]=J,n._guid=Km(),J})};qY.prototype.isDestroyed=function(){return!1};qY.prototype.destroy=function(){return this._texture=this._texture&&this._texture.destroy(),cZ(this)};var Bi=qY;var LN=em.SHOW_INDEX,Ii=em.POSITION_INDEX,bl=em.PIXEL_OFFSET_INDEX,xl=em.EYE_OFFSET_INDEX,vN=em.HORIZONTAL_ORIGIN_INDEX,PN=em.VERTICAL_ORIGIN_INDEX,KN=em.SCALE_INDEX,gi=em.IMAGE_INDEX_INDEX,_l=em.COLOR_INDEX,qN=em.ROTATION_INDEX,$N=em.ALIGNED_AXIS_INDEX,Ol=em.SCALE_BY_DISTANCE_INDEX,wl=em.TRANSLUCENCY_BY_DISTANCE_INDEX,yl=em.PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX,Hl=em.DISTANCE_DISPLAY_CONDITION,ZE=em.DISABLE_DEPTH_DISTANCE,mE=em.TEXTURE_COORDINATE_BOUNDS,zl=em.SDF_INDEX,Yt=em.NUMBER_OF_PROPERTIES,Zm,hE={positionHighAndScale:0,positionLowAndRotation:1,compressedAttribute0:2,compressedAttribute1:3,compressedAttribute2:4,eyeOffset:5,scaleByDistance:6,pixelOffsetScaleByDistance:7,compressedAttribute3:8,textureCoordinateBoundsOrLabelTranslate:9,a_batchId:10,sdf:11},YE={direction:0,positionHighAndScale:1,positionLowAndRotation:2,compressedAttribute0:3,compressedAttribute1:4,compressedAttribute2:5,eyeOffset:6,scaleByDistance:7,pixelOffsetScaleByDistance:8,compressedAttribute3:9,textureCoordinateBoundsOrLabelTranslate:10,a_batchId:11,sdf:12};function xh(Z){Z=l(Z,l.EMPTY_OBJECT),this._scene=Z.scene,this._batchTable=Z.batchTable,this._textureAtlas=void 0,this._textureAtlasGUID=void 0,this._destroyTextureAtlas=!0,this._sp=void 0,this._spTranslucent=void 0,this._rsOpaque=void 0,this._rsTranslucent=void 0,this._vaf=void 0,this._billboards=[],this._billboardsToUpdate=[],this._billboardsToUpdateIndex=0,this._billboardsRemoved=!1,this._createVertexArray=!1,this._shaderRotation=!1,this._compiledShaderRotation=!1,this._shaderAlignedAxis=!1,this._compiledShaderAlignedAxis=!1,this._shaderScaleByDistance=!1,this._compiledShaderScaleByDistance=!1,this._shaderTranslucencyByDistance=!1,this._compiledShaderTranslucencyByDistance=!1,this._shaderPixelOffsetScaleByDistance=!1,this._compiledShaderPixelOffsetScaleByDistance=!1,this._shaderDistanceDisplayCondition=!1,this._compiledShaderDistanceDisplayCondition=!1,this._shaderDisableDepthDistance=!1,this._compiledShaderDisableDepthDistance=!1,this._shaderClampToGround=!1,this._compiledShaderClampToGround=!1,this._propertiesChanged=new Uint32Array(Yt),this._maxSize=0,this._maxEyeOffset=0,this._maxScale=1,this._maxPixelOffset=0,this._allHorizontalCenter=!0,this._allVerticalCenter=!0,this._allSizedInMeters=!0,this._baseVolume=new BZ,this._baseVolumeWC=new BZ,this._baseVolume2D=new BZ,this._boundingVolume=new BZ,this._boundingVolumeDirty=!1,this._colorCommands=[],this.show=l(Z.show,!0),this.modelMatrix=eZ.clone(l(Z.modelMatrix,eZ.IDENTITY)),this._modelMatrix=eZ.clone(eZ.IDENTITY),this.debugShowBoundingVolume=l(Z.debugShowBoundingVolume,!1),this.debugShowTextureAtlas=l(Z.debugShowTextureAtlas,!1),this.blendOption=l(Z.blendOption,Fm.OPAQUE_AND_TRANSLUCENT),this._blendOption=void 0,this._mode=UZ.SCENE3D,this._buffersUsage=[jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW],this._highlightColor=H.clone(H.WHITE);let m=this;this._uniforms={u_atlas:function(){return m._textureAtlas.texture},u_highlightColor:function(){return m._highlightColor}};let h=this._scene;V(h)&&V(h.terrainProviderChanged)&&(this._removeCallbackFunc=h.terrainProviderChanged.addEventListener(function(){let n=this._billboards,i=n.length;for(let A=0;A<i;++A)V(n[A])&&n[A]._updateClamping()},this))}Object.defineProperties(xh.prototype,{length:{get:function(){return nt(this),this._billboards.length}},textureAtlas:{get:function(){return this._textureAtlas},set:function(Z){this._textureAtlas!==Z&&(this._textureAtlas=this._destroyTextureAtlas&&this._textureAtlas&&this._textureAtlas.destroy(),this._textureAtlas=Z,this._createVertexArray=!0)}},destroyTextureAtlas:{get:function(){return this._destroyTextureAtlas},set:function(Z){this._destroyTextureAtlas=Z}}});function Xl(Z){let m=Z.length;for(let h=0;h<m;++h)Z[h]&&Z[h]._destroy()}xh.prototype.add=function(Z){let m=new em(Z,this);return m._index=this._billboards.length,this._billboards.push(m),this._createVertexArray=!0,m};xh.prototype.remove=function(Z){return this.contains(Z)?(this._billboards[Z._index]=void 0,this._billboardsRemoved=!0,this._createVertexArray=!0,Z._destroy(),!0):!1};xh.prototype.removeAll=function(){Xl(this._billboards),this._billboards=[],this._billboardsToUpdate=[],this._billboardsToUpdateIndex=0,this._billboardsRemoved=!1,this._createVertexArray=!0};function nt(Z){if(Z._billboardsRemoved){Z._billboardsRemoved=!1;let m=[],h=Z._billboards,n=h.length;for(let i=0,A=0;i<n;++i){let t=h[i];V(t)&&(t._index=A++,m.push(t))}Z._billboards=m}}xh.prototype._updateBillboard=function(Z,m){Z._dirty||(this._billboardsToUpdate[this._billboardsToUpdateIndex++]=Z),++this._propertiesChanged[m]};xh.prototype.contains=function(Z){return V(Z)&&Z._billboardCollection===this};xh.prototype.get=function(Z){return y.typeOf.number("index",Z),nt(this),this._billboards[Z]};var Ka;function nE(Z){let h=Z.cache.billboardCollection_indexBufferBatched;if(V(h))return h;let n=16384*6-6,i=new Uint16Array(n);for(let A=0,t=0;A<n;A+=6,t+=4)i[A]=t,i[A+1]=t+1,i[A+2]=t+2,i[A+3]=t+0,i[A+4]=t+2,i[A+5]=t+3;return h=$h.createIndexBuffer({context:Z,typedArray:i,usage:jZ.STATIC_DRAW,indexDatatype:RY.UNSIGNED_SHORT}),h.vertexArrayDestroyable=!1,Z.cache.billboardCollection_indexBufferBatched=h,h}function iE(Z){let m=Z.cache.billboardCollection_indexBufferInstanced;return V(m)||(m=$h.createIndexBuffer({context:Z,typedArray:new Uint16Array([0,1,2,0,2,3]),usage:jZ.STATIC_DRAW,indexDatatype:RY.UNSIGNED_SHORT}),m.vertexArrayDestroyable=!1,Z.cache.billboardCollection_indexBufferInstanced=m),m}function AE(Z){let m=Z.cache.billboardCollection_vertexBufferInstanced;return V(m)||(m=$h.createVertexBuffer({context:Z,typedArray:new Float32Array([0,0,1,0,1,1,0,1]),usage:jZ.STATIC_DRAW}),m.vertexArrayDestroyable=!1,Z.cache.billboardCollection_vertexBufferInstanced=m),m}xh.prototype.computeNewBuffersUsage=function(){let Z=this._buffersUsage,m=!1,h=this._propertiesChanged;for(let n=0;n<Yt;++n){let i=h[n]===0?jZ.STATIC_DRAW:jZ.STREAM_DRAW;m=m||Z[n]!==i,Z[n]=i}return m};function aE(Z,m,h,n,i,A){let t=[{index:Zm.positionHighAndScale,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[Ii]},{index:Zm.positionLowAndRotation,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[Ii]},{index:Zm.compressedAttribute0,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[bl]},{index:Zm.compressedAttribute1,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[wl]},{index:Zm.compressedAttribute2,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[_l]},{index:Zm.eyeOffset,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[xl]},{index:Zm.scaleByDistance,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[Ol]},{index:Zm.pixelOffsetScaleByDistance,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[yl]},{index:Zm.compressedAttribute3,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[Hl]},{index:Zm.textureCoordinateBoundsOrLabelTranslate,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[mE]}];n&&t.push({index:Zm.direction,componentsPerAttribute:2,componentDatatype:WZ.FLOAT,vertexBuffer:AE(Z)}),V(i)&&t.push({index:Zm.a_batchId,componentsPerAttribute:1,componentDatatype:WZ.FLOAT,bufferUsage:jZ.STATIC_DRAW}),A&&t.push({index:Zm.sdf,componentsPerAttribute:2,componentDatatype:WZ.FLOAT,usage:h[zl]});let W=n?m:4*m;return new XA(Z,t,W,n)}var qa=new Pm;function Ll(Z,m,h,n,i){let A,t=n[Zm.positionHighAndScale],W=n[Zm.positionLowAndRotation],e=i._getActualPosition();Z._mode===UZ.SCENE3D&&(BZ.expand(Z._baseVolume,e,Z._baseVolume),Z._boundingVolumeDirty=!0),Pm.fromCartesian(e,qa);let G=i.scale,F=i.rotation;F!==0&&(Z._shaderRotation=!0),Z._maxScale=Math.max(Z._maxScale,G);let d=qa.high,J=qa.low;Z._instanced?(A=i._index,t(A,d.x,d.y,d.z,G),W(A,J.x,J.y,J.z,F)):(A=i._index*4,t(A+0,d.x,d.y,d.z,G),t(A+1,d.x,d.y,d.z,G),t(A+2,d.x,d.y,d.z,G),t(A+3,d.x,d.y,d.z,G),W(A+0,J.x,J.y,J.z,F),W(A+1,J.x,J.y,J.z,F),W(A+2,J.x,J.y,J.z,F),W(A+3,J.x,J.y,J.z,F))}var bh=new q,uh=32768,zn=65536,$a=4096,rY=256,tE=128,WE=32,eE=8,vl=4,oE=1/256,Pl=0,Kl=2,ql=3,$l=1;function ZR(Z,m,h,n,i){let A,t=n[Zm.compressedAttribute0],W=i.pixelOffset,e=W.x,G=W.y,F=i._translate,d=F.x,J=F.y;Z._maxPixelOffset=Math.max(Z._maxPixelOffset,Math.abs(e+d),Math.abs(-G+J));let k=i.horizontalOrigin,r=i._verticalOrigin,Q=i.show&&i.clusterShow;i.color.alpha===0&&(Q=!1),r===im.BASELINE&&(r=im.BOTTOM),Z._allHorizontalCenter=Z._allHorizontalCenter&&k===ah.CENTER,Z._allVerticalCenter=Z._allVerticalCenter&&r===im.CENTER;let p=0,T=0,I=0,f=0,b=i._imageIndex;if(b!==-1){let nZ=h[b];if(!V(nZ))throw new U(`Invalid billboard image index: ${b}`);p=nZ.x,T=nZ.y,I=nZ.width,f=nZ.height}let O=p+I,v=T+f,hZ=Math.floor(gZ.clamp(e,-uh,uh)+uh)*tE;hZ+=(k+1)*WE,hZ+=(r+1)*eE,hZ+=(Q?1:0)*vl;let K=Math.floor(gZ.clamp(G,-uh,uh)+uh)*rY,tZ=Math.floor(gZ.clamp(d,-uh,uh)+uh)*rY,NZ=(gZ.clamp(J,-uh,uh)+uh)*oE,Y=Math.floor(NZ),ZZ=Math.floor((NZ-Y)*rY);K+=Y,tZ+=ZZ,bh.x=p,bh.y=T;let oZ=dn.compressTextureCoordinates(bh);bh.x=O;let RZ=dn.compressTextureCoordinates(bh);bh.y=v;let EZ=dn.compressTextureCoordinates(bh);bh.x=p;let z=dn.compressTextureCoordinates(bh);Z._instanced?(A=i._index,t(A,hZ,K,tZ,oZ)):(A=i._index*4,t(A+0,hZ+Pl,K,tZ,oZ),t(A+1,hZ+Kl,K,tZ,RZ),t(A+2,hZ+ql,K,tZ,EZ),t(A+3,hZ+$l,K,tZ,z))}function mR(Z,m,h,n,i){let A,t=n[Zm.compressedAttribute1],W=i.alignedAxis;_.equals(W,_.ZERO)||(Z._shaderAlignedAxis=!0);let e=0,G=1,F=1,d=1,J=i.translucencyByDistance;V(J)&&(e=J.near,G=J.nearValue,F=J.far,d=J.farValue,(G!==1||d!==1)&&(Z._shaderTranslucencyByDistance=!0));let k=0,r=i._imageIndex;if(r!==-1){let f=h[r];if(!V(f))throw new U(`Invalid billboard image index: ${r}`);k=f.width}let Q=Z._textureAtlas.texture.width,p=Math.round(l(i.width,Q*k));Z._maxSize=Math.max(Z._maxSize,p);let T=gZ.clamp(p,0,zn),I=0;Math.abs(_.magnitudeSquared(W)-1)<gZ.EPSILON6&&(I=dn.octEncodeFloat(W)),G=gZ.clamp(G,0,1),G=G===1?255:G*255|0,T=T*rY+G,d=gZ.clamp(d,0,1),d=d===1?255:d*255|0,I=I*rY+d,Z._instanced?(A=i._index,t(A,T,I,e,F)):(A=i._index*4,t(A+0,T,I,e,F),t(A+1,T,I,e,F),t(A+2,T,I,e,F),t(A+3,T,I,e,F))}function mt(Z,m,h,n,i){let A,t=n[Zm.compressedAttribute2],W=i.color,e=V(Z._batchTable)?H.WHITE:i.getPickId(m.context).color,G=i.sizeInMeters?1:0,F=Math.abs(_.magnitudeSquared(i.alignedAxis)-1)<gZ.EPSILON6?1:0;Z._allSizedInMeters=Z._allSizedInMeters&&G===1;let d=0,J=i._imageIndex;if(J!==-1){let hZ=h[J];if(!V(hZ))throw new U(`Invalid billboard image index: ${J}`);d=hZ.height}let k=Z._textureAtlas.texture.dimensions,r=Math.round(l(i.height,k.y*d));Z._maxSize=Math.max(Z._maxSize,r);let Q=l(i._labelHorizontalOrigin,-2);Q+=2;let p=r*vl+Q,T=H.floatToByte(W.red),I=H.floatToByte(W.green),f=H.floatToByte(W.blue),b=T*zn+I*rY+f;T=H.floatToByte(e.red),I=H.floatToByte(e.green),f=H.floatToByte(e.blue);let O=T*zn+I*rY+f,v=H.floatToByte(W.alpha)*zn+H.floatToByte(e.alpha)*rY;v+=G*2+F,Z._instanced?(A=i._index,t(A,b,O,v,p)):(A=i._index*4,t(A+0,b,O,v,p),t(A+1,b,O,v,p),t(A+2,b,O,v,p),t(A+3,b,O,v,p))}function ht(Z,m,h,n,i){let A,t=n[Zm.eyeOffset],W=i.eyeOffset,e=W.z;if(i._heightReference!==hh.NONE&&(e*=1.005),Z._maxEyeOffset=Math.max(Z._maxEyeOffset,Math.abs(W.x),Math.abs(W.y),Math.abs(e)),Z._instanced){let G=0,F=0,d=i._imageIndex;if(d!==-1){let k=h[d];if(!V(k))throw new U(`Invalid billboard image index: ${d}`);G=k.width,F=k.height}bh.x=G,bh.y=F;let J=dn.compressTextureCoordinates(bh);A=i._index,t(A,W.x,W.y,e,J)}else A=i._index*4,t(A+0,W.x,W.y,e,0),t(A+1,W.x,W.y,e,0),t(A+2,W.x,W.y,e,0),t(A+3,W.x,W.y,e,0)}function hR(Z,m,h,n,i){let A,t=n[Zm.scaleByDistance],W=0,e=1,G=1,F=1,d=i.scaleByDistance;V(d)&&(W=d.near,e=d.nearValue,G=d.far,F=d.farValue,(e!==1||F!==1)&&(Z._shaderScaleByDistance=!0)),Z._instanced?(A=i._index,t(A,W,e,G,F)):(A=i._index*4,t(A+0,W,e,G,F),t(A+1,W,e,G,F),t(A+2,W,e,G,F),t(A+3,W,e,G,F))}function YR(Z,m,h,n,i){let A,t=n[Zm.pixelOffsetScaleByDistance],W=0,e=1,G=1,F=1,d=i.pixelOffsetScaleByDistance;V(d)&&(W=d.near,e=d.nearValue,G=d.far,F=d.farValue,(e!==1||F!==1)&&(Z._shaderPixelOffsetScaleByDistance=!0)),Z._instanced?(A=i._index,t(A,W,e,G,F)):(A=i._index*4,t(A+0,W,e,G,F),t(A+1,W,e,G,F),t(A+2,W,e,G,F),t(A+3,W,e,G,F))}function nR(Z,m,h,n,i){let A,t=n[Zm.compressedAttribute3],W=0,e=Number.MAX_VALUE,G=i.distanceDisplayCondition;V(G)&&(W=G.near,e=G.far,W*=W,e*=e,Z._shaderDistanceDisplayCondition=!0);let F=i.disableDepthTestDistance,d=i.heightReference===hh.CLAMP_TO_GROUND&&m.context.depthTexture;V(F)||(F=d?5e3:0),F*=F,(d||F>0)&&(Z._shaderDisableDepthDistance=!0,F===Number.POSITIVE_INFINITY&&(F=-1));let J,k;if(V(i._labelDimensions))k=i._labelDimensions.x,J=i._labelDimensions.y;else{let T=0,I=0,f=i._imageIndex;if(f!==-1){let O=h[f];if(!V(O))throw new U(`Invalid billboard image index: ${f}`);T=O.height,I=O.width}J=Math.round(l(i.height,Z._textureAtlas.texture.dimensions.y*T));let b=Z._textureAtlas.texture.width;k=Math.round(l(i.width,b*I))}let r=Math.floor(gZ.clamp(k,0,$a)),Q=Math.floor(gZ.clamp(J,0,$a)),p=r*$a+Q;Z._instanced?(A=i._index,t(A,W,e,F,p)):(A=i._index*4,t(A+0,W,e,F,p),t(A+1,W,e,F,p),t(A+2,W,e,F,p),t(A+3,W,e,F,p))}function iR(Z,m,h,n,i){if(i.heightReference===hh.CLAMP_TO_GROUND){let r=Z._scene,Q=m.context,p=m.globeTranslucencyState.translucent,T=V(r.globe)&&r.globe.depthTestAgainstTerrain;Z._shaderClampToGround=Q.depthTexture&&!p&&T}let A,t=n[Zm.textureCoordinateBoundsOrLabelTranslate];if($Z.maximumVertexTextureImageUnits>0){let r=0,Q=0;V(i._labelTranslate)&&(r=i._labelTranslate.x,Q=i._labelTranslate.y),Z._instanced?(A=i._index,t(A,r,Q,0,0)):(A=i._index*4,t(A+0,r,Q,0,0),t(A+1,r,Q,0,0),t(A+2,r,Q,0,0),t(A+3,r,Q,0,0));return}let W=0,e=0,G=0,F=0,d=i._imageIndex;if(d!==-1){let r=h[d];if(!V(r))throw new U(`Invalid billboard image index: ${d}`);W=r.x,e=r.y,G=r.width,F=r.height}let J=W+G,k=e+F;Z._instanced?(A=i._index,t(A,W,e,J,k)):(A=i._index*4,t(A+0,W,e,J,k),t(A+1,W,e,J,k),t(A+2,W,e,J,k),t(A+3,W,e,J,k))}function VE(Z,m,h,n,i){if(!V(Z._batchTable))return;let A=n[Zm.a_batchId],t=i._batchIndex,W;Z._instanced?(W=i._index,A(W,t)):(W=i._index*4,A(W+0,t),A(W+1,t),A(W+2,t),A(W+3,t))}function AR(Z,m,h,n,i){if(!Z._sdf)return;let A,t=n[Zm.sdf],W=i.outlineColor,e=i.outlineWidth,G=H.floatToByte(W.red),F=H.floatToByte(W.green),d=H.floatToByte(W.blue),J=G*zn+F*rY+d,k=e/lh.RADIUS,r=H.floatToByte(W.alpha)*zn+H.floatToByte(k)*rY;Z._instanced?(A=i._index,t(A,J,r)):(A=i._index*4,t(A+0,J+Pl,r),t(A+1,J+Kl,r),t(A+2,J+ql,r),t(A+3,J+$l,r))}function lE(Z,m,h,n,i){Ll(Z,m,h,n,i),ZR(Z,m,h,n,i),mR(Z,m,h,n,i),mt(Z,m,h,n,i),ht(Z,m,h,n,i),hR(Z,m,h,n,i),YR(Z,m,h,n,i),nR(Z,m,h,n,i),iR(Z,m,h,n,i),VE(Z,m,h,n,i),AR(Z,m,h,n,i)}function Zt(Z,m,h,n,i,A){let t;n.mode===UZ.SCENE3D?(t=Z._baseVolume,Z._boundingVolumeDirty=!0):t=Z._baseVolume2D;let W=[];for(let e=0;e<h;++e){let G=m[e],F=G.position,d=em._computeActualPosition(G,F,n,i);V(d)&&(G._setActualPosition(d),A?W.push(d):BZ.expand(t,d,t))}A&&BZ.fromPoints(W,t)}function RE(Z,m){let h=m.mode,n=Z._billboards,i=Z._billboardsToUpdate,A=Z._modelMatrix;Z._createVertexArray||Z._mode!==h||h!==UZ.SCENE3D&&!eZ.equals(A,Z.modelMatrix)?(Z._mode=h,eZ.clone(Z.modelMatrix,A),Z._createVertexArray=!0,(h===UZ.SCENE3D||h===UZ.SCENE2D||h===UZ.COLUMBUS_VIEW)&&Zt(Z,n,n.length,m,A,!0)):h===UZ.MORPHING?Zt(Z,n,n.length,m,A,!0):(h===UZ.SCENE2D||h===UZ.COLUMBUS_VIEW)&&Zt(Z,i,Z._billboardsToUpdateIndex,m,A,!1)}function GE(Z,m,h){let n=1;(!Z._allSizedInMeters||Z._maxPixelOffset!==0)&&(n=m.camera.getPixelSize(h,m.context.drawingBufferWidth,m.context.drawingBufferHeight));let i=n*Z._maxScale*Z._maxSize*2;Z._allHorizontalCenter&&Z._allVerticalCenter&&(i*=.5);let A=n*Z._maxPixelOffset+Z._maxEyeOffset;h.radius+=i+A}function FE(Z,m){let h=`uniform sampler2D billboard_texture; 
in vec2 v_textureCoordinates; 
void main() 
{ 
    out_FragColor = texture(billboard_texture, v_textureCoordinates); 
} 
`,n=m.createViewportQuadCommand(h,{uniformMap:{billboard_texture:function(){return Z._textureAtlas.texture}}});return n.pass=gm.OVERLAY,n}var dE=[];xh.prototype.update=function(Z){if(nt(this),!this.show)return;let m=this._billboards,h=m.length,n=Z.context;this._instanced=n.instancedArrays,Zm=this._instanced?YE:hE,Ka=this._instanced?iE:nE;let i=this._textureAtlas;if(!V(i)){i=this._textureAtlas=new Bi({context:n});for(let K=0;K<h;++K)m[K]._loadImage()}let A=i.textureCoordinates;if(A.length===0)return;RE(this,Z),m=this._billboards,h=m.length;let t=this._billboardsToUpdate,W=this._billboardsToUpdateIndex,e=this._propertiesChanged,G=i.guid,F=this._createVertexArray||this._textureAtlasGUID!==G;this._textureAtlasGUID=G;let d,J=Z.passes,k=J.pick;if(F||!k&&this.computeNewBuffersUsage()){this._createVertexArray=!1;for(let K=0;K<Yt;++K)e[K]=0;if(this._vaf=this._vaf&&this._vaf.destroy(),h>0){this._vaf=aE(n,h,this._buffersUsage,this._instanced,this._batchTable,this._sdf),d=this._vaf.writers;for(let K=0;K<h;++K){let tZ=this._billboards[K];tZ._dirty=!1,lE(this,Z,A,d,tZ)}this._vaf.commit(Ka(n))}this._billboardsToUpdateIndex=0}else if(W>0){let K=dE;K.length=0,(e[Ii]||e[qN]||e[KN])&&K.push(Ll),(e[gi]||e[bl]||e[vN]||e[PN]||e[LN])&&(K.push(ZR),this._instanced&&K.push(ht)),(e[gi]||e[$N]||e[wl])&&(K.push(mR),K.push(mt)),(e[gi]||e[_l])&&K.push(mt),e[xl]&&K.push(ht),e[Ol]&&K.push(hR),e[yl]&&K.push(YR),(e[Hl]||e[ZE]||e[gi]||e[Ii])&&K.push(nR),(e[gi]||e[Ii])&&K.push(iR),e[zl]&&K.push(AR);let tZ=K.length;if(d=this._vaf.writers,W/h>.1){for(let NZ=0;NZ<W;++NZ){let Y=t[NZ];Y._dirty=!1;for(let ZZ=0;ZZ<tZ;++ZZ)K[ZZ](this,Z,A,d,Y)}this._vaf.commit(Ka(n))}else{for(let NZ=0;NZ<W;++NZ){let Y=t[NZ];Y._dirty=!1;for(let ZZ=0;ZZ<tZ;++ZZ)K[ZZ](this,Z,A,d,Y);this._instanced?this._vaf.subCommit(Y._index,1):this._vaf.subCommit(Y._index*4,4)}this._vaf.endSubCommits()}this._billboardsToUpdateIndex=0}if(W>h*1.5&&(t.length=h),!V(this._vaf)||!V(this._vaf.va))return;this._boundingVolumeDirty&&(this._boundingVolumeDirty=!1,BZ.transform(this._baseVolume,this.modelMatrix,this._baseVolumeWC));let r,Q=eZ.IDENTITY;Z.mode===UZ.SCENE3D?(Q=this.modelMatrix,r=BZ.clone(this._baseVolumeWC,this._boundingVolume)):r=BZ.clone(this._baseVolume2D,this._boundingVolume),GE(this,Z,r);let p=this._blendOption!==this.blendOption;if(this._blendOption=this.blendOption,p){this._blendOption===Fm.OPAQUE||this._blendOption===Fm.OPAQUE_AND_TRANSLUCENT?this._rsOpaque=Vm.fromCache({depthTest:{enabled:!0,func:S.LESS},depthMask:!0}):this._rsOpaque=void 0;let K=this._blendOption===Fm.TRANSLUCENT;this._blendOption===Fm.TRANSLUCENT||this._blendOption===Fm.OPAQUE_AND_TRANSLUCENT?this._rsTranslucent=Vm.fromCache({depthTest:{enabled:!0,func:K?S.LEQUAL:S.LESS},depthMask:K,blending:fh.ALPHA_BLEND}):this._rsTranslucent=void 0}this._shaderDisableDepthDistance=this._shaderDisableDepthDistance||Z.minimumDisableDepthTestDistance!==0;let T,I,f,b,O,v=$Z.maximumVertexTextureImageUnits>0;if(p||this._shaderRotation!==this._compiledShaderRotation||this._shaderAlignedAxis!==this._compiledShaderAlignedAxis||this._shaderScaleByDistance!==this._compiledShaderScaleByDistance||this._shaderTranslucencyByDistance!==this._compiledShaderTranslucencyByDistance||this._shaderPixelOffsetScaleByDistance!==this._compiledShaderPixelOffsetScaleByDistance||this._shaderDistanceDisplayCondition!==this._compiledShaderDistanceDisplayCondition||this._shaderDisableDepthDistance!==this._compiledShaderDisableDepthDistance||this._shaderClampToGround!==this._compiledShaderClampToGround||this._sdf!==this._compiledSDF){T=Sl,I=Ml,O=[],V(this._batchTable)&&(O.push("VECTOR_TILE"),T=this._batchTable.getVertexShaderCallback(!1,"a_batchId",void 0)(T),I=this._batchTable.getFragmentShaderCallback(!1,void 0)(I)),f=new zZ({defines:O,sources:[T]}),this._instanced&&f.defines.push("INSTANCED"),this._shaderRotation&&f.defines.push("ROTATION"),this._shaderAlignedAxis&&f.defines.push("ALIGNED_AXIS"),this._shaderScaleByDistance&&f.defines.push("EYE_DISTANCE_SCALING"),this._shaderTranslucencyByDistance&&f.defines.push("EYE_DISTANCE_TRANSLUCENCY"),this._shaderPixelOffsetScaleByDistance&&f.defines.push("EYE_DISTANCE_PIXEL_OFFSET"),this._shaderDistanceDisplayCondition&&f.defines.push("DISTANCE_DISPLAY_CONDITION"),this._shaderDisableDepthDistance&&f.defines.push("DISABLE_DEPTH_DISTANCE"),this._shaderClampToGround&&(v?f.defines.push("VERTEX_DEPTH_CHECK"):f.defines.push("FRAGMENT_DEPTH_CHECK"));let K=1-lh.CUTOFF;this._sdf&&f.defines.push("SDF");let tZ=V(this._batchTable)?"VECTOR_TILE":"";this._blendOption===Fm.OPAQUE_AND_TRANSLUCENT&&(b=new zZ({defines:["OPAQUE",tZ],sources:[I]}),this._shaderClampToGround&&(v?b.defines.push("VERTEX_DEPTH_CHECK"):b.defines.push("FRAGMENT_DEPTH_CHECK")),this._sdf&&(b.defines.push("SDF"),b.defines.push(`SDF_EDGE ${K}`)),this._sp=fm.replaceCache({context:n,shaderProgram:this._sp,vertexShaderSource:f,fragmentShaderSource:b,attributeLocations:Zm}),b=new zZ({defines:["TRANSLUCENT",tZ],sources:[I]}),this._shaderClampToGround&&(v?b.defines.push("VERTEX_DEPTH_CHECK"):b.defines.push("FRAGMENT_DEPTH_CHECK")),this._sdf&&(b.defines.push("SDF"),b.defines.push(`SDF_EDGE ${K}`)),this._spTranslucent=fm.replaceCache({context:n,shaderProgram:this._spTranslucent,vertexShaderSource:f,fragmentShaderSource:b,attributeLocations:Zm})),this._blendOption===Fm.OPAQUE&&(b=new zZ({defines:[tZ],sources:[I]}),this._shaderClampToGround&&(v?b.defines.push("VERTEX_DEPTH_CHECK"):b.defines.push("FRAGMENT_DEPTH_CHECK")),this._sdf&&(b.defines.push("SDF"),b.defines.push(`SDF_EDGE ${K}`)),this._sp=fm.replaceCache({context:n,shaderProgram:this._sp,vertexShaderSource:f,fragmentShaderSource:b,attributeLocations:Zm})),this._blendOption===Fm.TRANSLUCENT&&(b=new zZ({defines:[tZ],sources:[I]}),this._shaderClampToGround&&(v?b.defines.push("VERTEX_DEPTH_CHECK"):b.defines.push("FRAGMENT_DEPTH_CHECK")),this._sdf&&(b.defines.push("SDF"),b.defines.push(`SDF_EDGE ${K}`)),this._spTranslucent=fm.replaceCache({context:n,shaderProgram:this._spTranslucent,vertexShaderSource:f,fragmentShaderSource:b,attributeLocations:Zm})),this._compiledShaderRotation=this._shaderRotation,this._compiledShaderAlignedAxis=this._shaderAlignedAxis,this._compiledShaderScaleByDistance=this._shaderScaleByDistance,this._compiledShaderTranslucencyByDistance=this._shaderTranslucencyByDistance,this._compiledShaderPixelOffsetScaleByDistance=this._shaderPixelOffsetScaleByDistance,this._compiledShaderDistanceDisplayCondition=this._shaderDistanceDisplayCondition,this._compiledShaderDisableDepthDistance=this._shaderDisableDepthDistance,this._compiledShaderClampToGround=this._shaderClampToGround,this._compiledSDF=this._sdf}let hZ=Z.commandList;if(J.render||J.pick){let K=this._colorCommands,tZ=this._blendOption===Fm.OPAQUE,NZ=this._blendOption===Fm.OPAQUE_AND_TRANSLUCENT,Y=this._vaf.va,ZZ=Y.length,oZ=this._uniforms,RZ;V(this._batchTable)?(oZ=this._batchTable.getUniformMapCallback()(oZ),RZ=this._batchTable.getPickId()):RZ="v_pickColor",K.length=ZZ;let EZ=NZ?ZZ*2:ZZ;for(let z=0;z<EZ;++z){let nZ=K[z];V(nZ)||(nZ=K[z]=new Am);let XZ=tZ||NZ&&z%2===0;nZ.pass=XZ||!NZ?gm.OPAQUE:gm.TRANSLUCENT,nZ.owner=this;let wZ=NZ?Math.floor(z/2):z;nZ.boundingVolume=r,nZ.modelMatrix=Q,nZ.count=Y[wZ].indicesCount,nZ.shaderProgram=XZ?this._sp:this._spTranslucent,nZ.uniformMap=oZ,nZ.vertexArray=Y[wZ].va,nZ.renderState=XZ?this._rsOpaque:this._rsTranslucent,nZ.debugShowBoundingVolume=this.debugShowBoundingVolume,nZ.pickId=RZ,this._instanced&&(nZ.count=6,nZ.instanceCount=h),hZ.push(nZ)}this.debugShowTextureAtlas&&(V(this.debugCommand)||(this.debugCommand=FE(this,Z.context)),hZ.push(this.debugCommand))}};xh.prototype.isDestroyed=function(){return!1};xh.prototype.destroy=function(){return V(this._removeCallbackFunc)&&(this._removeCallbackFunc(),this._removeCallbackFunc=void 0),this._textureAtlas=this._destroyTextureAtlas&&this._textureAtlas&&this._textureAtlas.destroy(),this._sp=this._sp&&this._sp.destroy(),this._spTranslucent=this._spTranslucent&&this._spTranslucent.destroy(),this._vaf=this._vaf&&this._vaf.destroy(),Xl(this._billboards),cZ(this)};var Xn=xh;var sE={FILL:0,OUTLINE:1,FILL_AND_OUTLINE:2},nY=Object.freeze(sE);var aR={},tR=0,rE=256,NE=new H(.165,.165,.165,.8),EE=new q(7,5),bm=Object.freeze({LTR:0,RTL:1,WEAK:2,BRACKETS:3});function Un(Z){!Z._rebindAllGlyphs&&!Z._repositionAllGlyphs&&Z._labelCollection._labelsToUpdate.push(Z),Z._rebindAllGlyphs=!0}function pi(Z){!Z._rebindAllGlyphs&&!Z._repositionAllGlyphs&&Z._labelCollection._labelsToUpdate.push(Z),Z._repositionAllGlyphs=!0}function ji(Z,m){return document.defaultView.getComputedStyle(Z,null).getPropertyValue(m)}function eR(Z){let m=aR[Z._font];if(!V(m)){let h=document.createElement("div");h.style.position="absolute",h.style.opacity=0,h.style.font=Z._font,document.body.appendChild(h);let n=parseFloat(ji(h,"line-height"));isNaN(n)&&(n=void 0),m={family:ji(h,"font-family"),size:ji(h,"font-size").replace("px",""),style:ji(h,"font-style"),weight:ji(h,"font-weight"),lineHeight:n},document.body.removeChild(h),tR<rE&&(aR[Z._font]=m,tR++)}Z._fontFamily=m.family,Z._fontSize=m.size,Z._fontStyle=m.style,Z._fontWeight=m.weight,Z._lineHeight=m.lineHeight}function cY(Z,m){if(Z=l(Z,l.EMPTY_OBJECT),V(Z.disableDepthTestDistance)&&Z.disableDepthTestDistance<0)throw new U("disableDepthTestDistance must be greater than 0.0.");let h=Z.translucencyByDistance,n=Z.pixelOffsetScaleByDistance,i=Z.scaleByDistance,A=Z.distanceDisplayCondition;if(V(h)){if(h.far<=h.near)throw new U("translucencyByDistance.far must be greater than translucencyByDistance.near.");h=bZ.clone(h)}if(V(n)){if(n.far<=n.near)throw new U("pixelOffsetScaleByDistance.far must be greater than pixelOffsetScaleByDistance.near.");n=bZ.clone(n)}if(V(i)){if(i.far<=i.near)throw new U("scaleByDistance.far must be greater than scaleByDistance.near.");i=bZ.clone(i)}if(V(A)){if(A.far<=A.near)throw new U("distanceDisplayCondition.far must be greater than distanceDisplayCondition.near.");A=dh.clone(A)}this._renderedText=void 0,this._text=void 0,this._show=l(Z.show,!0),this._font=l(Z.font,"30px sans-serif"),this._fillColor=H.clone(l(Z.fillColor,H.WHITE)),this._outlineColor=H.clone(l(Z.outlineColor,H.BLACK)),this._outlineWidth=l(Z.outlineWidth,1),this._showBackground=l(Z.showBackground,!1),this._backgroundColor=H.clone(l(Z.backgroundColor,NE)),this._backgroundPadding=q.clone(l(Z.backgroundPadding,EE)),this._style=l(Z.style,nY.FILL),this._verticalOrigin=l(Z.verticalOrigin,im.BASELINE),this._horizontalOrigin=l(Z.horizontalOrigin,ah.LEFT),this._pixelOffset=q.clone(l(Z.pixelOffset,q.ZERO)),this._eyeOffset=_.clone(l(Z.eyeOffset,_.ZERO)),this._position=_.clone(l(Z.position,_.ZERO)),this._scale=l(Z.scale,1),this._id=Z.id,this._translucencyByDistance=h,this._pixelOffsetScaleByDistance=n,this._scaleByDistance=i,this._heightReference=l(Z.heightReference,hh.NONE),this._distanceDisplayCondition=A,this._disableDepthTestDistance=Z.disableDepthTestDistance,this._labelCollection=m,this._glyphs=[],this._backgroundBillboard=void 0,this._batchIndex=void 0,this._rebindAllGlyphs=!0,this._repositionAllGlyphs=!0,this._actualClampedPosition=void 0,this._removeCallbackFunc=void 0,this._mode=void 0,this._clusterShow=!0,this.text=l(Z.text,""),this._relativeSize=1,eR(this),this._updateClamping()}Object.defineProperties(cY.prototype,{show:{get:function(){return this._show},set:function(Z){if(!V(Z))throw new U("value is required.");if(this._show!==Z){this._show=Z;let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n].billboard;V(A)&&(A.show=Z)}let h=this._backgroundBillboard;V(h)&&(h.show=Z)}}},position:{get:function(){return this._position},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._position;if(!_.equals(m,Z)){_.clone(Z,m);let h=this._glyphs;for(let i=0,A=h.length;i<A;i++){let t=h[i].billboard;V(t)&&(t.position=Z)}let n=this._backgroundBillboard;V(n)&&(n.position=Z),this._updateClamping()}}},heightReference:{get:function(){return this._heightReference},set:function(Z){if(!V(Z))throw new U("value is required.");if(Z!==this._heightReference){this._heightReference=Z;let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n].billboard;V(A)&&(A.heightReference=Z)}let h=this._backgroundBillboard;V(h)&&(h.heightReference=Z),pi(this),this._updateClamping()}}},text:{get:function(){return this._text},set:function(Z){if(!V(Z))throw new U("value is required.");if(this._text!==Z){this._text=Z;let m=Z.replace(/\u00ad/g,"");this._renderedText=cY.enableRightToLeftDetection?BE(m):m,Un(this)}}},font:{get:function(){return this._font},set:function(Z){if(!V(Z))throw new U("value is required.");this._font!==Z&&(this._font=Z,Un(this),eR(this))}},fillColor:{get:function(){return this._fillColor},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._fillColor;H.equals(m,Z)||(H.clone(Z,m),Un(this))}},outlineColor:{get:function(){return this._outlineColor},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._outlineColor;H.equals(m,Z)||(H.clone(Z,m),Un(this))}},outlineWidth:{get:function(){return this._outlineWidth},set:function(Z){if(!V(Z))throw new U("value is required.");this._outlineWidth!==Z&&(this._outlineWidth=Z,Un(this))}},showBackground:{get:function(){return this._showBackground},set:function(Z){if(!V(Z))throw new U("value is required.");this._showBackground!==Z&&(this._showBackground=Z,Un(this))}},backgroundColor:{get:function(){return this._backgroundColor},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._backgroundColor;if(!H.equals(m,Z)){H.clone(Z,m);let h=this._backgroundBillboard;V(h)&&(h.color=m)}}},backgroundPadding:{get:function(){return this._backgroundPadding},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._backgroundPadding;q.equals(m,Z)||(q.clone(Z,m),pi(this))}},style:{get:function(){return this._style},set:function(Z){if(!V(Z))throw new U("value is required.");this._style!==Z&&(this._style=Z,Un(this))}},pixelOffset:{get:function(){return this._pixelOffset},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._pixelOffset;if(!q.equals(m,Z)){q.clone(Z,m);let h=this._glyphs;for(let i=0,A=h.length;i<A;i++){let t=h[i];V(t.billboard)&&(t.billboard.pixelOffset=Z)}let n=this._backgroundBillboard;V(n)&&(n.pixelOffset=Z)}}},translucencyByDistance:{get:function(){return this._translucencyByDistance},set:function(Z){if(V(Z)&&Z.far<=Z.near)throw new U("far distance must be greater than near distance.");let m=this._translucencyByDistance;if(!bZ.equals(m,Z)){this._translucencyByDistance=bZ.clone(Z,m);let h=this._glyphs;for(let i=0,A=h.length;i<A;i++){let t=h[i];V(t.billboard)&&(t.billboard.translucencyByDistance=Z)}let n=this._backgroundBillboard;V(n)&&(n.translucencyByDistance=Z)}}},pixelOffsetScaleByDistance:{get:function(){return this._pixelOffsetScaleByDistance},set:function(Z){if(V(Z)&&Z.far<=Z.near)throw new U("far distance must be greater than near distance.");let m=this._pixelOffsetScaleByDistance;if(!bZ.equals(m,Z)){this._pixelOffsetScaleByDistance=bZ.clone(Z,m);let h=this._glyphs;for(let i=0,A=h.length;i<A;i++){let t=h[i];V(t.billboard)&&(t.billboard.pixelOffsetScaleByDistance=Z)}let n=this._backgroundBillboard;V(n)&&(n.pixelOffsetScaleByDistance=Z)}}},scaleByDistance:{get:function(){return this._scaleByDistance},set:function(Z){if(V(Z)&&Z.far<=Z.near)throw new U("far distance must be greater than near distance.");let m=this._scaleByDistance;if(!bZ.equals(m,Z)){this._scaleByDistance=bZ.clone(Z,m);let h=this._glyphs;for(let i=0,A=h.length;i<A;i++){let t=h[i];V(t.billboard)&&(t.billboard.scaleByDistance=Z)}let n=this._backgroundBillboard;V(n)&&(n.scaleByDistance=Z)}}},eyeOffset:{get:function(){return this._eyeOffset},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._eyeOffset;if(!_.equals(m,Z)){_.clone(Z,m);let h=this._glyphs;for(let i=0,A=h.length;i<A;i++){let t=h[i];V(t.billboard)&&(t.billboard.eyeOffset=Z)}let n=this._backgroundBillboard;V(n)&&(n.eyeOffset=Z)}}},horizontalOrigin:{get:function(){return this._horizontalOrigin},set:function(Z){if(!V(Z))throw new U("value is required.");this._horizontalOrigin!==Z&&(this._horizontalOrigin=Z,pi(this))}},verticalOrigin:{get:function(){return this._verticalOrigin},set:function(Z){if(!V(Z))throw new U("value is required.");if(this._verticalOrigin!==Z){this._verticalOrigin=Z;let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n];V(A.billboard)&&(A.billboard.verticalOrigin=Z)}let h=this._backgroundBillboard;V(h)&&(h.verticalOrigin=Z),pi(this)}}},scale:{get:function(){return this._scale},set:function(Z){if(!V(Z))throw new U("value is required.");if(this._scale!==Z){this._scale=Z;let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n];V(A.billboard)&&(A.billboard.scale=Z*this._relativeSize)}let h=this._backgroundBillboard;V(h)&&(h.scale=Z*this._relativeSize),pi(this)}}},totalScale:{get:function(){return this._scale*this._relativeSize}},distanceDisplayCondition:{get:function(){return this._distanceDisplayCondition},set:function(Z){if(V(Z)&&Z.far<=Z.near)throw new U("far must be greater than near");if(!dh.equals(Z,this._distanceDisplayCondition)){this._distanceDisplayCondition=dh.clone(Z,this._distanceDisplayCondition);let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n];V(A.billboard)&&(A.billboard.distanceDisplayCondition=Z)}let h=this._backgroundBillboard;V(h)&&(h.distanceDisplayCondition=Z)}}},disableDepthTestDistance:{get:function(){return this._disableDepthTestDistance},set:function(Z){if(this._disableDepthTestDistance!==Z){if(V(Z)&&Z<0)throw new U("disableDepthTestDistance must be greater than 0.0.");this._disableDepthTestDistance=Z;let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n];V(A.billboard)&&(A.billboard.disableDepthTestDistance=Z)}let h=this._backgroundBillboard;V(h)&&(h.disableDepthTestDistance=Z)}}},id:{get:function(){return this._id},set:function(Z){if(this._id!==Z){this._id=Z;let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n];V(A.billboard)&&(A.billboard.id=Z)}let h=this._backgroundBillboard;V(h)&&(h.id=Z)}}},pickId:{get:function(){if(!(this._glyphs.length===0||!V(this._glyphs[0].billboard)))return this._glyphs[0].billboard.pickId}},_clampedPosition:{get:function(){return this._actualClampedPosition},set:function(Z){this._actualClampedPosition=_.clone(Z,this._actualClampedPosition);let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n];V(A.billboard)&&(A.billboard._clampedPosition=Z)}let h=this._backgroundBillboard;V(h)&&(h._clampedPosition=Z)}},clusterShow:{get:function(){return this._clusterShow},set:function(Z){if(this._clusterShow!==Z){this._clusterShow=Z;let m=this._glyphs;for(let n=0,i=m.length;n<i;n++){let A=m[n];V(A.billboard)&&(A.billboard.clusterShow=Z)}let h=this._backgroundBillboard;V(h)&&(h.clusterShow=Z)}}}});cY.prototype._updateClamping=function(){em._updateClamping(this._labelCollection,this)};cY.prototype.computeScreenSpacePosition=function(Z,m){if(!V(Z))throw new U("scene is required.");V(m)||(m=new q);let n=this._labelCollection.modelMatrix,i=V(this._actualClampedPosition)?this._actualClampedPosition:this._position;return em._computeScreenSpacePosition(n,i,this._eyeOffset,this._pixelOffset,Z,m)};cY.getScreenSpaceBoundingBox=function(Z,m,h){let n=0,i=0,A=0,t=0,W=Z.totalScale,e=Z._backgroundBillboard;if(V(e))n=m.x+e._translate.x,i=m.y-e._translate.y,A=e.width*W,t=e.height*W,Z.verticalOrigin===im.BOTTOM||Z.verticalOrigin===im.BASELINE?i-=t:Z.verticalOrigin===im.CENTER&&(i-=t*.5);else{n=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY;let G=0,F=0,d=Z._glyphs,J=d.length;for(let k=0;k<J;++k){let r=d[k],Q=r.billboard;if(!V(Q))continue;let p=m.x+Q._translate.x,T=m.y-Q._translate.y,I=r.dimensions.width*W,f=r.dimensions.height*W;Z.verticalOrigin===im.BOTTOM||Z.verticalOrigin===im.BASELINE?T-=f:Z.verticalOrigin===im.CENTER&&(T-=f*.5),Z._verticalOrigin===im.TOP?T+=lh.PADDING*W:(Z._verticalOrigin===im.BOTTOM||Z._verticalOrigin===im.BASELINE)&&(T-=lh.PADDING*W),n=Math.min(n,p),i=Math.min(i,T),G=Math.max(G,p+I),F=Math.max(F,T+f)}A=G-n,t=F-i}return V(h)||(h=new qZ),h.x=n,h.y=i,h.width=A,h.height=t,h};cY.prototype.equals=function(Z){return this===Z||V(Z)&&this._show===Z._show&&this._scale===Z._scale&&this._outlineWidth===Z._outlineWidth&&this._showBackground===Z._showBackground&&this._style===Z._style&&this._verticalOrigin===Z._verticalOrigin&&this._horizontalOrigin===Z._horizontalOrigin&&this._heightReference===Z._heightReference&&this._renderedText===Z._renderedText&&this._font===Z._font&&_.equals(this._position,Z._position)&&H.equals(this._fillColor,Z._fillColor)&&H.equals(this._outlineColor,Z._outlineColor)&&H.equals(this._backgroundColor,Z._backgroundColor)&&q.equals(this._backgroundPadding,Z._backgroundPadding)&&q.equals(this._pixelOffset,Z._pixelOffset)&&_.equals(this._eyeOffset,Z._eyeOffset)&&bZ.equals(this._translucencyByDistance,Z._translucencyByDistance)&&bZ.equals(this._pixelOffsetScaleByDistance,Z._pixelOffsetScaleByDistance)&&bZ.equals(this._scaleByDistance,Z._scaleByDistance)&&dh.equals(this._distanceDisplayCondition,Z._distanceDisplayCondition)&&this._disableDepthTestDistance===Z._disableDepthTestDistance&&this._id===Z._id};cY.prototype.isDestroyed=function(){return!1};cY.enableRightToLeftDetection=!1;function kE(Z,m){let h=/[a-zA-Z0-9]/,n=/[()[\]{}<>]/,i=[],A="",t=bm.LTR,W="",e=Z.length;for(let G=0;G<e;++G){let F=Z.charAt(G);m.test(F)?W=bm.RTL:h.test(F)?W=bm.LTR:n.test(F)?W=bm.BRACKETS:W=bm.WEAK,G===0&&(t=W),t===W&&W!==bm.BRACKETS?A+=F:(A!==""&&i.push({Type:t,Word:A}),t=W,A=F)}return i.push({Type:W,Word:A}),i}function UE(Z){return Z.split("").reverse().join("")}function ci(Z,m,h){return Z.slice(0,m)+h+Z.slice(m)}function JE(Z){switch(Z){case"(":return")";case")":return"(";case"[":return"]";case"]":return"[";case"{":return"}";case"}":return"{";case"<":return">";case">":return"<"}}var QE="\u05D0-\u05EA",CE="\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF",WR=new RegExp(`[${QE}${CE}]`);function BE(Z){let m=Z.split(`
`),h="";for(let n=0;n<m.length;n++){let i=m[n],A=WR.test(i.charAt(0)),t=kE(i,WR),W=0,e="";for(let G=0;G<t.length;++G){let F=t[G],d=F.Type===bm.BRACKETS?JE(F.Word):UE(F.Word);A?F.Type===bm.RTL?(e=d+e,W=0):F.Type===bm.LTR?(e=ci(e,W,F.Word),W+=F.Word.length):(F.Type===bm.WEAK||F.Type===bm.BRACKETS)&&(F.Type===bm.WEAK&&t[G-1].Type===bm.BRACKETS?e=d+e:t[G-1].Type===bm.RTL?(e=d+e,W=0):t.length>G+1?t[G+1].Type===bm.RTL?(e=d+e,W=0):(e=ci(e,W,F.Word),W+=F.Word.length):e=ci(e,0,d)):F.Type===bm.RTL?e=ci(e,W,d):F.Type===bm.LTR?(e+=F.Word,W=e.length):(F.Type===bm.WEAK||F.Type===bm.BRACKETS)&&(G>0&&t[G-1].Type===bm.RTL?t.length>G+1?t[G+1].Type===bm.RTL?e=ci(e,W,d):(e+=F.Word,W=e.length):e+=F.Word:(e+=F.Word,W=e.length))}h+=e,n<m.length-1&&(h+=`
`)}return h}var Ti=cY;function gE(Z,m,h,n,i){let A=Z.measureText(m);if(!!/\S/.test(m)){let W=document.defaultView.getComputedStyle(Z.canvas).getPropertyValue("font-size").replace("px",""),e=document.createElement("canvas"),G=100,F=A.width+G|0,d=3*W,J=d/2;e.width=F,e.height=d;let k=e.getContext("2d");k.font=h,k.fillStyle="white",k.fillRect(0,0,e.width+1,e.height+1),n&&(k.strokeStyle="black",k.lineWidth=Z.lineWidth,k.strokeText(m,G/2,J)),i&&(k.fillStyle="black",k.fillText(m,G/2,J));let r=k.getImageData(0,0,F,d).data,Q=r.length,p=F*4,T,I,f,b;for(T=0;T<Q;++T)if(r[T]!==255){f=T/p|0;break}for(T=Q-1;T>=0;--T)if(r[T]!==255){b=T/p|0;break}let O=-1;for(T=0;T<F&&O===-1;++T)for(I=0;I<d;++I){let v=T*4+I*p;if(r[v]!==255||r[v+1]!==255||r[v+2]!==255||r[v+3]!==255){O=T;break}}return{width:A.width,height:b-f,ascent:J-f,descent:b-J,minx:O-G/2}}return{width:A.width,height:0,ascent:0,descent:0,minx:0}}var Jn;function IE(Z,m){if(!V(Z))throw new U("text is required.");if(Z==="")return;m=l(m,l.EMPTY_OBJECT);let h=l(m.font,"10px sans-serif"),n=l(m.stroke,!1),i=l(m.fill,!0),A=l(m.strokeWidth,1),t=l(m.backgroundColor,H.TRANSPARENT),W=l(m.padding,0),e=W*2,G=document.createElement("canvas");G.width=1,G.height=1,G.style.font=h;let F=G.getContext("2d",{willReadFrequently:!0});V(Jn)||(V(F.imageSmoothingEnabled)?Jn="imageSmoothingEnabled":V(F.mozImageSmoothingEnabled)?Jn="mozImageSmoothingEnabled":V(F.webkitImageSmoothingEnabled)?Jn="webkitImageSmoothingEnabled":V(F.msImageSmoothingEnabled)&&(Jn="msImageSmoothingEnabled")),F.font=h,F.lineJoin="round",F.lineWidth=A,F[Jn]=!1,G.style.visibility="hidden",document.body.appendChild(G);let d=gE(F,Z,h,n,i);G.dimensions=d,document.body.removeChild(G),G.style.visibility="";let J=-d.minx,k=Math.ceil(d.width)+J+e,r=d.height+e,Q=r-d.ascent+W,p=r-Q+e;if(G.width=k,G.height=r,F.font=h,F.lineJoin="round",F.lineWidth=A,F[Jn]=!1,t!==H.TRANSPARENT&&(F.fillStyle=t.toCssColorString(),F.fillRect(0,0,G.width,G.height)),n){let T=l(m.strokeColor,H.BLACK);F.strokeStyle=T.toCssColorString(),F.strokeText(Z,J+W,p)}if(i){let T=l(m.fillColor,H.WHITE);F.fillStyle=T.toCssColorString(),F.fillText(Z,J+W,p)}return G}var oR=IE;var sR=ba(GR(),1);var rR=ba(FR(),1);function cE(){this.textureInfo=void 0,this.dimensions=void 0,this.billboard=void 0}function TE(Z,m,h){this.labelCollection=Z,this.index=m,this.dimensions=h}var ME=1.2,NR="ID_WHITE_PIXEL",it=new q(4,4),SE=new qZ(1,1,1,1);function DE(Z){let m=document.createElement("canvas");m.width=it.x,m.height=it.y;let h=m.getContext("2d");return h.fillStyle="#fff",h.fillRect(0,0,m.width,m.height),Z.addImage(NR,m)}var _h={};function fE(Z,m,h,n,i,A,t){return _h.font=m,_h.fillColor=h,_h.strokeColor=n,_h.strokeWidth=i,_h.padding=lh.PADDING,t===im.CENTER?_h.textBaseline="middle":t===im.TOP?_h.textBaseline="top":_h.textBaseline="bottom",_h.fill=A===nY.FILL||A===nY.FILL_AND_OUTLINE,_h.stroke=A===nY.OUTLINE||A===nY.FILL_AND_OUTLINE,_h.backgroundColor=H.BLACK,oR(Z,_h)}function At(Z,m){m.textureInfo=void 0,m.dimensions=void 0;let h=m.billboard;V(h)&&(h.show=!1,h.image=void 0,V(h._removeCallbackFunc)&&(h._removeCallbackFunc(),h._removeCallbackFunc=void 0),Z._spareBillboards.push(h),m.billboard=void 0)}function uE(Z,m,h,n){n.index=Z.addImageSync(m,h)}var bE=new rR.default;function xE(Z,m){let h=m._renderedText,n=bE.splitGraphemes(h),i=n.length,A=m._glyphs,t=A.length,W,e,G;if(m._relativeSize=m._fontSize/lh.FONT_SIZE,i<t)for(e=i;e<t;++e)At(Z,A[e]);A.length=i;let F=m.show&&m._showBackground&&h.split(`
`).join("").length>0,d=m._backgroundBillboard,J=Z._backgroundBillboardCollection;F?(V(d)||(d=J.add({collection:Z,image:NR,imageSubRegion:SE}),m._backgroundBillboard=d),d.color=m._backgroundColor,d.show=m._show,d.position=m._position,d.eyeOffset=m._eyeOffset,d.pixelOffset=m._pixelOffset,d.horizontalOrigin=ah.LEFT,d.verticalOrigin=m._verticalOrigin,d.heightReference=m._heightReference,d.scale=m.totalScale,d.pickPrimitive=m,d.id=m._id,d.translucencyByDistance=m._translucencyByDistance,d.pixelOffsetScaleByDistance=m._pixelOffsetScaleByDistance,d.scaleByDistance=m._scaleByDistance,d.distanceDisplayCondition=m._distanceDisplayCondition,d.disableDepthTestDistance=m._disableDepthTestDistance,d.clusterShow=m.clusterShow):V(d)&&(J.remove(d),m._backgroundBillboard=d=void 0);let k=Z._glyphTextureCache;for(G=0;G<i;++G){let r=n[G],Q=m._verticalOrigin,p=JSON.stringify([r,m._fontFamily,m._fontStyle,m._fontWeight,+Q]),T=k[p];if(!V(T)){let I=`${m._fontStyle} ${m._fontWeight} ${lh.FONT_SIZE}px ${m._fontFamily}`,f=fE(r,I,H.WHITE,H.WHITE,0,nY.FILL,Q);if(T=new TE(Z,-1,f.dimensions),k[p]=T,f.width>0&&f.height>0){let b=(0,sR.default)(f,{cutoff:lh.CUTOFF,radius:lh.RADIUS}),O=f.getContext("2d"),v=f.width,hZ=f.height,K=O.getImageData(0,0,v,hZ);for(let tZ=0;tZ<v;tZ++)for(let NZ=0;NZ<hZ;NZ++){let Y=NZ*v+tZ,ZZ=b[Y]*255,oZ=Y*4;K.data[oZ+0]=ZZ,K.data[oZ+1]=ZZ,K.data[oZ+2]=ZZ,K.data[oZ+3]=ZZ}O.putImageData(K,0,0),r!==" "&&uE(Z._textureAtlas,p,f,T)}}if(W=A[G],V(W)?T.index===-1?At(Z,W):V(W.textureInfo)&&(W.textureInfo=void 0):(W=new cE,A[G]=W),W.textureInfo=T,W.dimensions=T.dimensions,T.index!==-1){let I=W.billboard,f=Z._spareBillboards;V(I)||(f.length>0?I=f.pop():(I=Z._billboardCollection.add({collection:Z}),I._labelDimensions=new q,I._labelTranslate=new q),W.billboard=I),I.show=m._show,I.position=m._position,I.eyeOffset=m._eyeOffset,I.pixelOffset=m._pixelOffset,I.horizontalOrigin=ah.LEFT,I.verticalOrigin=m._verticalOrigin,I.heightReference=m._heightReference,I.scale=m.totalScale,I.pickPrimitive=m,I.id=m._id,I.image=p,I.translucencyByDistance=m._translucencyByDistance,I.pixelOffsetScaleByDistance=m._pixelOffsetScaleByDistance,I.scaleByDistance=m._scaleByDistance,I.distanceDisplayCondition=m._distanceDisplayCondition,I.disableDepthTestDistance=m._disableDepthTestDistance,I._batchIndex=m._batchIndex,I.outlineColor=m.outlineColor,m.style===nY.FILL_AND_OUTLINE?(I.color=m._fillColor,I.outlineWidth=m.outlineWidth):m.style===nY.FILL?(I.color=m._fillColor,I.outlineWidth=0):m.style===nY.OUTLINE&&(I.color=H.TRANSPARENT,I.outlineWidth=m.outlineWidth)}}m._repositionAllGlyphs=!0}function dR(Z,m,h){return m===ah.CENTER?-Z/2:m===ah.RIGHT?-(Z+h.x):h.x}var sm=new q,_E=new q;function OE(Z){let m=Z._glyphs,h=Z._renderedText,n,i,A=0,t=0,W=[],e=Number.NEGATIVE_INFINITY,G=0,F=1,d,J=m.length,k=Z._backgroundBillboard,r=q.clone(V(k)?Z._backgroundPadding:q.ZERO,_E);for(r.x/=Z._relativeSize,r.y/=Z._relativeSize,d=0;d<J;++d)h.charAt(d)===`
`?(W.push(A),++F,A=0):(n=m[d],i=n.dimensions,G=Math.max(G,i.height-i.descent),e=Math.max(e,i.descent),A+=i.width-i.minx,d<J-1&&(A+=m[d+1].dimensions.minx),t=Math.max(t,A));W.push(A);let Q=G+e,p=Z.totalScale,T=Z._horizontalOrigin,I=Z._verticalOrigin,f=0,b=W[f],O=dR(b,T,r),v=(V(Z._lineHeight)?Z._lineHeight:ME*Z._fontSize)/Z._relativeSize,hZ=v*(F-1),K=t,tZ=Q+hZ;V(k)&&(K+=r.x*2,tZ+=r.y*2,k._labelHorizontalOrigin=T),sm.x=O*p,sm.y=0;let NZ=!0,Y=0;for(d=0;d<J;++d)if(h.charAt(d)===`
`)++f,Y+=v,b=W[f],O=dR(b,T,r),sm.x=O*p,NZ=!0;else if(n=m[d],i=n.dimensions,I===im.TOP?(sm.y=i.height-G-r.y,sm.y+=lh.PADDING):I===im.CENTER?sm.y=(hZ+i.height-G)/2:I===im.BASELINE?(sm.y=hZ,sm.y-=lh.PADDING):(sm.y=hZ+e+r.y,sm.y-=lh.PADDING),sm.y=(sm.y-i.descent-Y)*p,NZ&&(sm.x-=lh.PADDING*p,NZ=!1),V(n.billboard)&&(n.billboard._setTranslate(sm),n.billboard._labelDimensions.x=K,n.billboard._labelDimensions.y=tZ,n.billboard._labelHorizontalOrigin=T),d<J-1){let ZZ=m[d+1];sm.x+=(i.width-i.minx+ZZ.dimensions.minx)*p}if(V(k)&&h.split(`
`).join("").length>0&&(T===ah.CENTER?O=-t/2-r.x:T===ah.RIGHT?O=-(t+r.x*2):O=0,sm.x=O*p,I===im.TOP?sm.y=Q-G-e:I===im.CENTER?sm.y=(Q-G)/2-e:I===im.BASELINE?sm.y=-r.y-e:sm.y=0,sm.y=sm.y*p,k.width=K,k.height=tZ,k._setTranslate(sm),k._labelTranslate=q.clone(sm,k._labelTranslate)),Z.heightReference===hh.CLAMP_TO_GROUND)for(d=0;d<J;++d){n=m[d];let ZZ=n.billboard;V(ZZ)&&(ZZ._labelTranslate=q.clone(sm,ZZ._labelTranslate))}}function ER(Z,m){let h=m._glyphs;for(let n=0,i=h.length;n<i;++n)At(Z,h[n]);V(m._backgroundBillboard)&&(Z._backgroundBillboardCollection.remove(m._backgroundBillboard),m._backgroundBillboard=void 0),m._labelCollection=void 0,V(m._removeCallbackFunc)&&m._removeCallbackFunc(),cZ(m)}function NY(Z){Z=l(Z,l.EMPTY_OBJECT),this._scene=Z.scene,this._batchTable=Z.batchTable,this._textureAtlas=void 0,this._backgroundTextureAtlas=void 0,this._backgroundBillboardCollection=new Xn({scene:this._scene}),this._backgroundBillboardCollection.destroyTextureAtlas=!1,this._billboardCollection=new Xn({scene:this._scene,batchTable:this._batchTable}),this._billboardCollection.destroyTextureAtlas=!1,this._billboardCollection._sdf=!0,this._spareBillboards=[],this._glyphTextureCache={},this._labels=[],this._labelsToUpdate=[],this._totalGlyphCount=0,this._highlightColor=H.clone(H.WHITE),this.show=l(Z.show,!0),this.modelMatrix=eZ.clone(l(Z.modelMatrix,eZ.IDENTITY)),this.debugShowBoundingVolume=l(Z.debugShowBoundingVolume,!1),this.blendOption=l(Z.blendOption,Fm.OPAQUE_AND_TRANSLUCENT)}Object.defineProperties(NY.prototype,{length:{get:function(){return this._labels.length}}});NY.prototype.add=function(Z){let m=new Ti(Z,this);return this._labels.push(m),this._labelsToUpdate.push(m),m};NY.prototype.remove=function(Z){if(V(Z)&&Z._labelCollection===this){let m=this._labels.indexOf(Z);if(m!==-1)return this._labels.splice(m,1),ER(this,Z),!0}return!1};NY.prototype.removeAll=function(){let Z=this._labels;for(let m=0,h=Z.length;m<h;++m)ER(this,Z[m]);Z.length=0};NY.prototype.contains=function(Z){return V(Z)&&Z._labelCollection===this};NY.prototype.get=function(Z){if(!V(Z))throw new U("index is required.");return this._labels[Z]};NY.prototype.update=function(Z){if(!this.show)return;let m=this._billboardCollection,h=this._backgroundBillboardCollection;m.modelMatrix=this.modelMatrix,m.debugShowBoundingVolume=this.debugShowBoundingVolume,h.modelMatrix=this.modelMatrix,h.debugShowBoundingVolume=this.debugShowBoundingVolume;let n=Z.context;V(this._textureAtlas)||(this._textureAtlas=new Bi({context:n}),m.textureAtlas=this._textureAtlas),V(this._backgroundTextureAtlas)||(this._backgroundTextureAtlas=new Bi({context:n,initialSize:it}),h.textureAtlas=this._backgroundTextureAtlas,DE(this._backgroundTextureAtlas));let i=this._labelsToUpdate.length;for(let t=0;t<i;++t){let W=this._labelsToUpdate[t];if(W.isDestroyed())continue;let e=W._glyphs.length;W._rebindAllGlyphs&&(xE(this,W),W._rebindAllGlyphs=!1),W._repositionAllGlyphs&&(OE(W),W._repositionAllGlyphs=!1);let G=W._glyphs.length-e;this._totalGlyphCount+=G}let A=h.length>0?Fm.TRANSLUCENT:this.blendOption;m.blendOption=A,h.blendOption=A,m._highlightColor=this._highlightColor,h._highlightColor=this._highlightColor,this._labelsToUpdate.length=0,h.update(Z),m.update(Z)};NY.prototype.isDestroyed=function(){return!1};NY.prototype.destroy=function(){return this.removeAll(),this._billboardCollection=this._billboardCollection.destroy(),this._textureAtlas=this._textureAtlas&&this._textureAtlas.destroy(),this._backgroundBillboardCollection=this._backgroundBillboardCollection.destroy(),this._backgroundTextureAtlas=this._backgroundTextureAtlas&&this._backgroundTextureAtlas.destroy(),cZ(this)};var at=NY;function Im(Z,m){if(Z=l(Z,l.EMPTY_OBJECT),V(Z.disableDepthTestDistance)&&Z.disableDepthTestDistance<0)throw new U("disableDepthTestDistance must be greater than or equal to 0.0.");let h=Z.translucencyByDistance,n=Z.scaleByDistance,i=Z.distanceDisplayCondition;if(V(h)){if(h.far<=h.near)throw new U("translucencyByDistance.far must be greater than translucencyByDistance.near.");h=bZ.clone(h)}if(V(n)){if(n.far<=n.near)throw new U("scaleByDistance.far must be greater than scaleByDistance.near.");n=bZ.clone(n)}if(V(i)){if(i.far<=i.near)throw new U("distanceDisplayCondition.far must be greater than distanceDisplayCondition.near.");i=dh.clone(i)}this._show=l(Z.show,!0),this._position=_.clone(l(Z.position,_.ZERO)),this._actualPosition=_.clone(this._position),this._color=H.clone(l(Z.color,H.WHITE)),this._outlineColor=H.clone(l(Z.outlineColor,H.TRANSPARENT)),this._outlineWidth=l(Z.outlineWidth,0),this._pixelSize=l(Z.pixelSize,10),this._scaleByDistance=n,this._translucencyByDistance=h,this._distanceDisplayCondition=i,this._disableDepthTestDistance=l(Z.disableDepthTestDistance,0),this._id=Z.id,this._collection=l(Z.collection,m),this._clusterShow=!0,this._pickId=void 0,this._pointPrimitiveCollection=m,this._dirty=!1,this._index=-1}var kR=Im.SHOW_INDEX=0,QR=Im.POSITION_INDEX=1,wE=Im.COLOR_INDEX=2,yE=Im.OUTLINE_COLOR_INDEX=3,HE=Im.OUTLINE_WIDTH_INDEX=4,zE=Im.PIXEL_SIZE_INDEX=5,XE=Im.SCALE_BY_DISTANCE_INDEX=6,LE=Im.TRANSLUCENCY_BY_DISTANCE_INDEX=7,vE=Im.DISTANCE_DISPLAY_CONDITION_INDEX=8,PE=Im.DISABLE_DEPTH_DISTANCE_INDEX=9;Im.NUMBER_OF_PROPERTIES=10;function Oh(Z,m){let h=Z._pointPrimitiveCollection;V(h)&&(h._updatePointPrimitive(Z,m),Z._dirty=!0)}Object.defineProperties(Im.prototype,{show:{get:function(){return this._show},set:function(Z){if(!V(Z))throw new U("value is required.");this._show!==Z&&(this._show=Z,Oh(this,kR))}},position:{get:function(){return this._position},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._position;_.equals(m,Z)||(_.clone(Z,m),_.clone(Z,this._actualPosition),Oh(this,QR))}},scaleByDistance:{get:function(){return this._scaleByDistance},set:function(Z){if(V(Z)&&Z.far<=Z.near)throw new U("far distance must be greater than near distance.");let m=this._scaleByDistance;bZ.equals(m,Z)||(this._scaleByDistance=bZ.clone(Z,m),Oh(this,XE))}},translucencyByDistance:{get:function(){return this._translucencyByDistance},set:function(Z){if(V(Z)&&Z.far<=Z.near)throw new U("far distance must be greater than near distance.");let m=this._translucencyByDistance;bZ.equals(m,Z)||(this._translucencyByDistance=bZ.clone(Z,m),Oh(this,LE))}},pixelSize:{get:function(){return this._pixelSize},set:function(Z){if(!V(Z))throw new U("value is required.");this._pixelSize!==Z&&(this._pixelSize=Z,Oh(this,zE))}},color:{get:function(){return this._color},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._color;H.equals(m,Z)||(H.clone(Z,m),Oh(this,wE))}},outlineColor:{get:function(){return this._outlineColor},set:function(Z){if(!V(Z))throw new U("value is required.");let m=this._outlineColor;H.equals(m,Z)||(H.clone(Z,m),Oh(this,yE))}},outlineWidth:{get:function(){return this._outlineWidth},set:function(Z){if(!V(Z))throw new U("value is required.");this._outlineWidth!==Z&&(this._outlineWidth=Z,Oh(this,HE))}},distanceDisplayCondition:{get:function(){return this._distanceDisplayCondition},set:function(Z){if(V(Z)&&Z.far<=Z.near)throw new U("far must be greater than near");dh.equals(this._distanceDisplayCondition,Z)||(this._distanceDisplayCondition=dh.clone(Z,this._distanceDisplayCondition),Oh(this,vE))}},disableDepthTestDistance:{get:function(){return this._disableDepthTestDistance},set:function(Z){if(this._disableDepthTestDistance!==Z){if(!V(Z)||Z<0)throw new U("disableDepthTestDistance must be greater than or equal to 0.0.");this._disableDepthTestDistance=Z,Oh(this,PE)}}},id:{get:function(){return this._id},set:function(Z){this._id=Z,V(this._pickId)&&(this._pickId.object.id=Z)}},pickId:{get:function(){return this._pickId}},clusterShow:{get:function(){return this._clusterShow},set:function(Z){this._clusterShow!==Z&&(this._clusterShow=Z,Oh(this,kR))}}});Im.prototype.getPickId=function(Z){return V(this._pickId)||(this._pickId=Z.createPickId({primitive:this,collection:this._collection,id:this._id})),this._pickId};Im.prototype._getActualPosition=function(){return this._actualPosition};Im.prototype._setActualPosition=function(Z){_.clone(Z,this._actualPosition),Oh(this,QR)};var UR=new CZ;Im._computeActualPosition=function(Z,m,h){return m.mode===UZ.SCENE3D?Z:(eZ.multiplyByPoint(h,Z,UR),On.computeActualWgs84Position(m,UR))};var JR=new CZ;Im._computeScreenSpacePosition=function(Z,m,h,n){let i=eZ.multiplyByVector(Z,CZ.fromElements(m.x,m.y,m.z,1,JR),JR);return On.wgs84ToWindowCoordinates(h,i,n)};Im.prototype.computeScreenSpacePosition=function(Z,m){let h=this._pointPrimitiveCollection;if(V(m)||(m=new q),!V(h))throw new U("PointPrimitive must be in a collection.");if(!V(Z))throw new U("scene is required.");let n=h.modelMatrix,i=Im._computeScreenSpacePosition(n,this._actualPosition,Z,m);if(V(i))return i.y=Z.canvas.clientHeight-i.y,i};Im.getScreenSpaceBoundingBox=function(Z,m,h){let n=Z.pixelSize,i=n*.5,A=m.x-i,t=m.y-i,W=n,e=n;return V(h)||(h=new qZ),h.x=A,h.y=t,h.width=W,h.height=e,h};Im.prototype.equals=function(Z){return this===Z||V(Z)&&this._id===Z._id&&_.equals(this._position,Z._position)&&H.equals(this._color,Z._color)&&this._pixelSize===Z._pixelSize&&this._outlineWidth===Z._outlineWidth&&this._show===Z._show&&H.equals(this._outlineColor,Z._outlineColor)&&bZ.equals(this._scaleByDistance,Z._scaleByDistance)&&bZ.equals(this._translucencyByDistance,Z._translucencyByDistance)&&dh.equals(this._distanceDisplayCondition,Z._distanceDisplayCondition)&&this._disableDepthTestDistance===Z._disableDepthTestDistance};Im.prototype._destroy=function(){this._pickId=this._pickId&&this._pickId.destroy(),this._pointPrimitiveCollection=void 0};var Rh=Im;var Si=`in vec4 v_color;
in vec4 v_outlineColor;
in float v_innerPercent;
in float v_pixelDistance;
in vec4 v_pickColor;

void main()
{
    // The distance in UV space from this fragment to the center of the point, at most 0.5.
    float distanceToCenter = length(gl_PointCoord - vec2(0.5));
    // The max distance stops one pixel shy of the edge to leave space for anti-aliasing.
    float maxDistance = max(0.0, 0.5 - v_pixelDistance);
    float wholeAlpha = 1.0 - smoothstep(maxDistance, 0.5, distanceToCenter);
    float innerAlpha = 1.0 - smoothstep(maxDistance * v_innerPercent, 0.5 * v_innerPercent, distanceToCenter);

    vec4 color = mix(v_outlineColor, v_color, innerAlpha);
    color.a *= wholeAlpha;

// Fully transparent parts of the billboard are not pickable.
#if !defined(OPAQUE) && !defined(TRANSLUCENT)
    if (color.a < 0.005)   // matches 0/255 and 1/255
    {
        discard;
    }
#else
// The billboard is rendered twice. The opaque pass discards translucent fragments
// and the translucent pass discards opaque fragments.
#ifdef OPAQUE
    if (color.a < 0.995)   // matches < 254/255
    {
        discard;
    }
#else
    if (color.a >= 0.995)  // matches 254/255 and 255/255
    {
        discard;
    }
#endif
#endif

    out_FragColor = czm_gammaCorrect(color);
    czm_writeLogDepth();
}
`;var CR=`uniform float u_maxTotalPointSize;

in vec4 positionHighAndSize;
in vec4 positionLowAndOutline;
in vec4 compressedAttribute0;                       // color, outlineColor, pick color
in vec4 compressedAttribute1;                       // show, translucency by distance, some free space
in vec4 scaleByDistance;                            // near, nearScale, far, farScale
in vec3 distanceDisplayConditionAndDisableDepth;    // near, far, disableDepthTestDistance

out vec4 v_color;
out vec4 v_outlineColor;
out float v_innerPercent;
out float v_pixelDistance;
out vec4 v_pickColor;

const float SHIFT_LEFT8 = 256.0;
const float SHIFT_RIGHT8 = 1.0 / 256.0;

void main()
{
    // Modifying this shader may also require modifications to PointPrimitive._computeScreenSpacePosition

    // unpack attributes
    vec3 positionHigh = positionHighAndSize.xyz;
    vec3 positionLow = positionLowAndOutline.xyz;
    float outlineWidthBothSides = 2.0 * positionLowAndOutline.w;
    float totalSize = positionHighAndSize.w + outlineWidthBothSides;
    float outlinePercent = outlineWidthBothSides / totalSize;
    // Scale in response to browser-zoom.
    totalSize *= czm_pixelRatio;

    float temp = compressedAttribute1.x * SHIFT_RIGHT8;
    float show = floor(temp);

#ifdef EYE_DISTANCE_TRANSLUCENCY
    vec4 translucencyByDistance;
    translucencyByDistance.x = compressedAttribute1.z;
    translucencyByDistance.z = compressedAttribute1.w;

    translucencyByDistance.y = ((temp - floor(temp)) * SHIFT_LEFT8) / 255.0;

    temp = compressedAttribute1.y * SHIFT_RIGHT8;
    translucencyByDistance.w = ((temp - floor(temp)) * SHIFT_LEFT8) / 255.0;
#endif

    ///////////////////////////////////////////////////////////////////////////

    vec4 color;
    vec4 outlineColor;
    vec4 pickColor;

    // compressedAttribute0.z => pickColor.rgb

    temp = compressedAttribute0.z * SHIFT_RIGHT8;
    pickColor.b = (temp - floor(temp)) * SHIFT_LEFT8;
    temp = floor(temp) * SHIFT_RIGHT8;
    pickColor.g = (temp - floor(temp)) * SHIFT_LEFT8;
    pickColor.r = floor(temp);

    // compressedAttribute0.x => color.rgb

    temp = compressedAttribute0.x * SHIFT_RIGHT8;
    color.b = (temp - floor(temp)) * SHIFT_LEFT8;
    temp = floor(temp) * SHIFT_RIGHT8;
    color.g = (temp - floor(temp)) * SHIFT_LEFT8;
    color.r = floor(temp);

    // compressedAttribute0.y => outlineColor.rgb

    temp = compressedAttribute0.y * SHIFT_RIGHT8;
    outlineColor.b = (temp - floor(temp)) * SHIFT_LEFT8;
    temp = floor(temp) * SHIFT_RIGHT8;
    outlineColor.g = (temp - floor(temp)) * SHIFT_LEFT8;
    outlineColor.r = floor(temp);

    // compressedAttribute0.w => color.a, outlineColor.a, pickColor.a

    temp = compressedAttribute0.w * SHIFT_RIGHT8;
    pickColor.a = (temp - floor(temp)) * SHIFT_LEFT8;
    pickColor = pickColor / 255.0;

    temp = floor(temp) * SHIFT_RIGHT8;
    outlineColor.a = (temp - floor(temp)) * SHIFT_LEFT8;
    outlineColor /= 255.0;
    color.a = floor(temp);
    color /= 255.0;

    ///////////////////////////////////////////////////////////////////////////

    vec4 p = czm_translateRelativeToEye(positionHigh, positionLow);
    vec4 positionEC = czm_modelViewRelativeToEye * p;

    ///////////////////////////////////////////////////////////////////////////

#if defined(EYE_DISTANCE_SCALING) || defined(EYE_DISTANCE_TRANSLUCENCY) || defined(DISTANCE_DISPLAY_CONDITION) || defined(DISABLE_DEPTH_DISTANCE)
    float lengthSq;
    if (czm_sceneMode == czm_sceneMode2D)
    {
        // 2D camera distance is a special case
        // treat all billboards as flattened to the z=0.0 plane
        lengthSq = czm_eyeHeight2D.y;
    }
    else
    {
        lengthSq = dot(positionEC.xyz, positionEC.xyz);
    }
#endif

#ifdef EYE_DISTANCE_SCALING
    totalSize *= czm_nearFarScalar(scaleByDistance, lengthSq);
#endif
    if (totalSize > 0.0) {
        // Add padding for anti-aliasing on both sides.
        totalSize += 3.0;
    }

    // Clamp to max point size.
    totalSize = min(totalSize, u_maxTotalPointSize);
    // If size is too small, push vertex behind near plane for clipping.
    // Note that context.minimumAliasedPointSize "will be at most 1.0".
    if (totalSize < 1.0)
    {
        positionEC.xyz = vec3(0.0);
        totalSize = 1.0;
    }

    float translucency = 1.0;
#ifdef EYE_DISTANCE_TRANSLUCENCY
    translucency = czm_nearFarScalar(translucencyByDistance, lengthSq);
    // push vertex behind near plane for clipping
    if (translucency < 0.004)
    {
        positionEC.xyz = vec3(0.0);
    }
#endif

#ifdef DISTANCE_DISPLAY_CONDITION
    float nearSq = distanceDisplayConditionAndDisableDepth.x;
    float farSq = distanceDisplayConditionAndDisableDepth.y;
    if (lengthSq < nearSq || lengthSq > farSq) {
        // push vertex behind camera to force it to be clipped
        positionEC.xyz = vec3(0.0, 0.0, 1.0);
    }
#endif

    gl_Position = czm_projection * positionEC;
    czm_vertexLogDepth();

#ifdef DISABLE_DEPTH_DISTANCE
    float disableDepthTestDistance = distanceDisplayConditionAndDisableDepth.z;
    if (disableDepthTestDistance == 0.0 && czm_minimumDisableDepthTestDistance != 0.0)
    {
        disableDepthTestDistance = czm_minimumDisableDepthTestDistance;
    }

    if (disableDepthTestDistance != 0.0)
    {
        // Don't try to "multiply both sides" by w.  Greater/less-than comparisons won't work for negative values of w.
        float zclip = gl_Position.z / gl_Position.w;
        bool clipped = (zclip < -1.0 || zclip > 1.0);
        if (!clipped && (disableDepthTestDistance < 0.0 || (lengthSq > 0.0 && lengthSq < disableDepthTestDistance)))
        {
            // Position z on the near plane.
            gl_Position.z = -gl_Position.w;
#ifdef LOG_DEPTH
            czm_vertexLogDepth(vec4(czm_currentFrustum.x));
#endif
        }
    }
#endif

    v_color = color;
    v_color.a *= translucency * show;
    v_outlineColor = outlineColor;
    v_outlineColor.a *= translucency * show;

    v_innerPercent = 1.0 - outlinePercent;
    v_pixelDistance = 2.0 / totalSize;
    gl_PointSize = totalSize * show;
    gl_Position *= show;

    v_pickColor = pickColor;
}
`;var KE=Rh.SHOW_INDEX,et=Rh.POSITION_INDEX,BR=Rh.COLOR_INDEX,qE=Rh.OUTLINE_COLOR_INDEX,$E=Rh.OUTLINE_WIDTH_INDEX,Zk=Rh.PIXEL_SIZE_INDEX,gR=Rh.SCALE_BY_DISTANCE_INDEX,IR=Rh.TRANSLUCENCY_BY_DISTANCE_INDEX,pR=Rh.DISTANCE_DISPLAY_CONDITION_INDEX,mk=Rh.DISABLE_DEPTH_DISTANCE_INDEX,ot=Rh.NUMBER_OF_PROPERTIES,Gh={positionHighAndSize:0,positionLowAndOutline:1,compressedAttribute0:2,compressedAttribute1:3,scaleByDistance:4,distanceDisplayConditionAndDisableDepth:5};function wh(Z){Z=l(Z,l.EMPTY_OBJECT),this._sp=void 0,this._spTranslucent=void 0,this._rsOpaque=void 0,this._rsTranslucent=void 0,this._vaf=void 0,this._pointPrimitives=[],this._pointPrimitivesToUpdate=[],this._pointPrimitivesToUpdateIndex=0,this._pointPrimitivesRemoved=!1,this._createVertexArray=!1,this._shaderScaleByDistance=!1,this._compiledShaderScaleByDistance=!1,this._shaderTranslucencyByDistance=!1,this._compiledShaderTranslucencyByDistance=!1,this._shaderDistanceDisplayCondition=!1,this._compiledShaderDistanceDisplayCondition=!1,this._shaderDisableDepthDistance=!1,this._compiledShaderDisableDepthDistance=!1,this._propertiesChanged=new Uint32Array(ot),this._maxPixelSize=1,this._baseVolume=new BZ,this._baseVolumeWC=new BZ,this._baseVolume2D=new BZ,this._boundingVolume=new BZ,this._boundingVolumeDirty=!1,this._colorCommands=[],this.show=l(Z.show,!0),this.modelMatrix=eZ.clone(l(Z.modelMatrix,eZ.IDENTITY)),this._modelMatrix=eZ.clone(eZ.IDENTITY),this.debugShowBoundingVolume=l(Z.debugShowBoundingVolume,!1),this.blendOption=l(Z.blendOption,Fm.OPAQUE_AND_TRANSLUCENT),this._blendOption=void 0,this._mode=UZ.SCENE3D,this._maxTotalPointSize=1,this._buffersUsage=[jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW,jZ.STATIC_DRAW];let m=this;this._uniforms={u_maxTotalPointSize:function(){return m._maxTotalPointSize}}}Object.defineProperties(wh.prototype,{length:{get:function(){return Vt(this),this._pointPrimitives.length}}});function jR(Z){let m=Z.length;for(let h=0;h<m;++h)Z[h]&&Z[h]._destroy()}wh.prototype.add=function(Z){let m=new Rh(Z,this);return m._index=this._pointPrimitives.length,this._pointPrimitives.push(m),this._createVertexArray=!0,m};wh.prototype.remove=function(Z){return this.contains(Z)?(this._pointPrimitives[Z._index]=null,this._pointPrimitivesRemoved=!0,this._createVertexArray=!0,Z._destroy(),!0):!1};wh.prototype.removeAll=function(){jR(this._pointPrimitives),this._pointPrimitives=[],this._pointPrimitivesToUpdate=[],this._pointPrimitivesToUpdateIndex=0,this._pointPrimitivesRemoved=!1,this._createVertexArray=!0};function Vt(Z){if(Z._pointPrimitivesRemoved){Z._pointPrimitivesRemoved=!1;let m=[],h=Z._pointPrimitives,n=h.length;for(let i=0,A=0;i<n;++i){let t=h[i];t&&(t._index=A++,m.push(t))}Z._pointPrimitives=m}}wh.prototype._updatePointPrimitive=function(Z,m){Z._dirty||(this._pointPrimitivesToUpdate[this._pointPrimitivesToUpdateIndex++]=Z),++this._propertiesChanged[m]};wh.prototype.contains=function(Z){return V(Z)&&Z._pointPrimitiveCollection===this};wh.prototype.get=function(Z){if(!V(Z))throw new U("index is required.");return Vt(this),this._pointPrimitives[Z]};wh.prototype.computeNewBuffersUsage=function(){let Z=this._buffersUsage,m=!1,h=this._propertiesChanged;for(let n=0;n<ot;++n){let i=h[n]===0?jZ.STATIC_DRAW:jZ.STREAM_DRAW;m=m||Z[n]!==i,Z[n]=i}return m};function hk(Z,m,h){return new XA(Z,[{index:Gh.positionHighAndSize,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[et]},{index:Gh.positionLowAndShow,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[et]},{index:Gh.compressedAttribute0,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[BR]},{index:Gh.compressedAttribute1,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[IR]},{index:Gh.scaleByDistance,componentsPerAttribute:4,componentDatatype:WZ.FLOAT,usage:h[gR]},{index:Gh.distanceDisplayConditionAndDisableDepth,componentsPerAttribute:3,componentDatatype:WZ.FLOAT,usage:h[pR]}],m)}var tt=new Pm;function cR(Z,m,h,n){let i=n._index,A=n._getActualPosition();Z._mode===UZ.SCENE3D&&(BZ.expand(Z._baseVolume,A,Z._baseVolume),Z._boundingVolumeDirty=!0),Pm.fromCartesian(A,tt);let t=n.pixelSize,W=n.outlineWidth;Z._maxPixelSize=Math.max(Z._maxPixelSize,t+W);let e=h[Gh.positionHighAndSize],G=tt.high;e(i,G.x,G.y,G.z,t);let F=h[Gh.positionLowAndOutline],d=tt.low;F(i,d.x,d.y,d.z,W)}var Za=65536,Di=256;function TR(Z,m,h,n){let i=n._index,A=n.color,t=n.getPickId(m).color,W=n.outlineColor,e=H.floatToByte(A.red),G=H.floatToByte(A.green),F=H.floatToByte(A.blue),d=e*Za+G*Di+F;e=H.floatToByte(W.red),G=H.floatToByte(W.green),F=H.floatToByte(W.blue);let J=e*Za+G*Di+F;e=H.floatToByte(t.red),G=H.floatToByte(t.green),F=H.floatToByte(t.blue);let k=e*Za+G*Di+F,r=H.floatToByte(A.alpha)*Za+H.floatToByte(W.alpha)*Di+H.floatToByte(t.alpha),Q=h[Gh.compressedAttribute0];Q(i,d,J,k,r)}function MR(Z,m,h,n){let i=n._index,A=0,t=1,W=1,e=1,G=n.translucencyByDistance;V(G)&&(A=G.near,t=G.nearValue,W=G.far,e=G.farValue,(t!==1||e!==1)&&(Z._shaderTranslucencyByDistance=!0));let F=n.show&&n.clusterShow;n.color.alpha===0&&n.outlineColor.alpha===0&&(F=!1),t=gZ.clamp(t,0,1),t=t===1?255:t*255|0;let d=(F?1:0)*Di+t;e=gZ.clamp(e,0,1),e=e===1?255:e*255|0;let J=e,k=h[Gh.compressedAttribute1];k(i,d,J,A,W)}function SR(Z,m,h,n){let i=n._index,A=h[Gh.scaleByDistance],t=0,W=1,e=1,G=1,F=n.scaleByDistance;V(F)&&(t=F.near,W=F.nearValue,e=F.far,G=F.farValue,(W!==1||G!==1)&&(Z._shaderScaleByDistance=!0)),A(i,t,W,e,G)}function DR(Z,m,h,n){let i=n._index,A=h[Gh.distanceDisplayConditionAndDisableDepth],t=0,W=Number.MAX_VALUE,e=n.distanceDisplayCondition;V(e)&&(t=e.near,W=e.far,t*=t,W*=W,Z._shaderDistanceDisplayCondition=!0);let G=n.disableDepthTestDistance;G*=G,G>0&&(Z._shaderDisableDepthDistance=!0,G===Number.POSITIVE_INFINITY&&(G=-1)),A(i,t,W,G)}function Yk(Z,m,h,n){cR(Z,m,h,n),TR(Z,m,h,n),MR(Z,m,h,n),SR(Z,m,h,n),DR(Z,m,h,n)}function Wt(Z,m,h,n,i,A){let t;n.mode===UZ.SCENE3D?(t=Z._baseVolume,Z._boundingVolumeDirty=!0):t=Z._baseVolume2D;let W=[];for(let e=0;e<h;++e){let G=m[e],F=G.position,d=Rh._computeActualPosition(F,n,i);V(d)&&(G._setActualPosition(d),A?W.push(d):BZ.expand(t,d,t))}A&&BZ.fromPoints(W,t)}function nk(Z,m){let h=m.mode,n=Z._pointPrimitives,i=Z._pointPrimitivesToUpdate,A=Z._modelMatrix;Z._createVertexArray||Z._mode!==h||h!==UZ.SCENE3D&&!eZ.equals(A,Z.modelMatrix)?(Z._mode=h,eZ.clone(Z.modelMatrix,A),Z._createVertexArray=!0,(h===UZ.SCENE3D||h===UZ.SCENE2D||h===UZ.COLUMBUS_VIEW)&&Wt(Z,n,n.length,m,A,!0)):h===UZ.MORPHING?Wt(Z,n,n.length,m,A,!0):(h===UZ.SCENE2D||h===UZ.COLUMBUS_VIEW)&&Wt(Z,i,Z._pointPrimitivesToUpdateIndex,m,A,!1)}function ik(Z,m,h){let i=m.camera.getPixelSize(h,m.context.drawingBufferWidth,m.context.drawingBufferHeight)*Z._maxPixelSize;h.radius+=i}var Ak=[];wh.prototype.update=function(Z){if(Vt(this),!this.show)return;this._maxTotalPointSize=$Z.maximumAliasedPointSize,nk(this,Z);let h=this._pointPrimitives.length,n=this._pointPrimitivesToUpdate,i=this._pointPrimitivesToUpdateIndex,A=this._propertiesChanged,t=this._createVertexArray,W,e=Z.context,G=Z.passes,F=G.pick;if(t||!F&&this.computeNewBuffersUsage()){this._createVertexArray=!1;for(let O=0;O<ot;++O)A[O]=0;if(this._vaf=this._vaf&&this._vaf.destroy(),h>0){this._vaf=hk(e,h,this._buffersUsage),W=this._vaf.writers;for(let O=0;O<h;++O){let v=this._pointPrimitives[O];v._dirty=!1,Yk(this,e,W,v)}this._vaf.commit()}this._pointPrimitivesToUpdateIndex=0}else if(i>0){let O=Ak;O.length=0,(A[et]||A[$E]||A[Zk])&&O.push(cR),(A[BR]||A[qE])&&O.push(TR),(A[KE]||A[IR])&&O.push(MR),A[gR]&&O.push(SR),(A[pR]||A[mk])&&O.push(DR);let v=O.length;if(W=this._vaf.writers,i/h>.1){for(let hZ=0;hZ<i;++hZ){let K=n[hZ];K._dirty=!1;for(let tZ=0;tZ<v;++tZ)O[tZ](this,e,W,K)}this._vaf.commit()}else{for(let hZ=0;hZ<i;++hZ){let K=n[hZ];K._dirty=!1;for(let tZ=0;tZ<v;++tZ)O[tZ](this,e,W,K);this._vaf.subCommit(K._index,1)}this._vaf.endSubCommits()}this._pointPrimitivesToUpdateIndex=0}if(i>h*1.5&&(n.length=h),!V(this._vaf)||!V(this._vaf.va))return;this._boundingVolumeDirty&&(this._boundingVolumeDirty=!1,BZ.transform(this._baseVolume,this.modelMatrix,this._baseVolumeWC));let d,J=eZ.IDENTITY;Z.mode===UZ.SCENE3D?(J=this.modelMatrix,d=BZ.clone(this._baseVolumeWC,this._boundingVolume)):d=BZ.clone(this._baseVolume2D,this._boundingVolume),ik(this,Z,d);let k=this._blendOption!==this.blendOption;this._blendOption=this.blendOption,k&&(this._blendOption===Fm.OPAQUE||this._blendOption===Fm.OPAQUE_AND_TRANSLUCENT?this._rsOpaque=Vm.fromCache({depthTest:{enabled:!0,func:S.LEQUAL},depthMask:!0}):this._rsOpaque=void 0,this._blendOption===Fm.TRANSLUCENT||this._blendOption===Fm.OPAQUE_AND_TRANSLUCENT?this._rsTranslucent=Vm.fromCache({depthTest:{enabled:!0,func:S.LEQUAL},depthMask:!1,blending:fh.ALPHA_BLEND}):this._rsTranslucent=void 0),this._shaderDisableDepthDistance=this._shaderDisableDepthDistance||Z.minimumDisableDepthTestDistance!==0;let r,Q;(k||this._shaderScaleByDistance&&!this._compiledShaderScaleByDistance||this._shaderTranslucencyByDistance&&!this._compiledShaderTranslucencyByDistance||this._shaderDistanceDisplayCondition&&!this._compiledShaderDistanceDisplayCondition||this._shaderDisableDepthDistance!==this._compiledShaderDisableDepthDistance)&&(r=new zZ({sources:[CR]}),this._shaderScaleByDistance&&r.defines.push("EYE_DISTANCE_SCALING"),this._shaderTranslucencyByDistance&&r.defines.push("EYE_DISTANCE_TRANSLUCENCY"),this._shaderDistanceDisplayCondition&&r.defines.push("DISTANCE_DISPLAY_CONDITION"),this._shaderDisableDepthDistance&&r.defines.push("DISABLE_DEPTH_DISTANCE"),this._blendOption===Fm.OPAQUE_AND_TRANSLUCENT&&(Q=new zZ({defines:["OPAQUE"],sources:[Si]}),this._sp=fm.replaceCache({context:e,shaderProgram:this._sp,vertexShaderSource:r,fragmentShaderSource:Q,attributeLocations:Gh}),Q=new zZ({defines:["TRANSLUCENT"],sources:[Si]}),this._spTranslucent=fm.replaceCache({context:e,shaderProgram:this._spTranslucent,vertexShaderSource:r,fragmentShaderSource:Q,attributeLocations:Gh})),this._blendOption===Fm.OPAQUE&&(Q=new zZ({sources:[Si]}),this._sp=fm.replaceCache({context:e,shaderProgram:this._sp,vertexShaderSource:r,fragmentShaderSource:Q,attributeLocations:Gh})),this._blendOption===Fm.TRANSLUCENT&&(Q=new zZ({sources:[Si]}),this._spTranslucent=fm.replaceCache({context:e,shaderProgram:this._spTranslucent,vertexShaderSource:r,fragmentShaderSource:Q,attributeLocations:Gh})),this._compiledShaderScaleByDistance=this._shaderScaleByDistance,this._compiledShaderTranslucencyByDistance=this._shaderTranslucencyByDistance,this._compiledShaderDistanceDisplayCondition=this._shaderDistanceDisplayCondition,this._compiledShaderDisableDepthDistance=this._shaderDisableDepthDistance);let p,T,I,f,b=Z.commandList;if(G.render||F){let O=this._colorCommands,v=this._blendOption===Fm.OPAQUE,hZ=this._blendOption===Fm.OPAQUE_AND_TRANSLUCENT;p=this._vaf.va,T=p.length,O.length=T;let K=hZ?T*2:T;for(f=0;f<K;++f){let tZ=v||hZ&&f%2===0;I=O[f],V(I)||(I=O[f]=new Am),I.primitiveType=jA.POINTS,I.pass=tZ||!hZ?gm.OPAQUE:gm.TRANSLUCENT,I.owner=this;let NZ=hZ?Math.floor(f/2):f;I.boundingVolume=d,I.modelMatrix=J,I.shaderProgram=tZ?this._sp:this._spTranslucent,I.uniformMap=this._uniforms,I.vertexArray=p[NZ].va,I.renderState=tZ?this._rsOpaque:this._rsTranslucent,I.debugShowBoundingVolume=this.debugShowBoundingVolume,I.pickId="v_pickColor",b.push(I)}}};wh.prototype.isDestroyed=function(){return!1};wh.prototype.destroy=function(){return this._sp=this._sp&&this._sp.destroy(),this._spTranslucent=this._spTranslucent&&this._spTranslucent.destroy(),this._spPick=this._spPick&&this._spPick.destroy(),this._vaf=this._vaf&&this._vaf.destroy(),jR(this._pointPrimitives),cZ(this)};var lt=wh;var fR=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],Rt=1,fi=8,bi=class Z{static from(m){if(!(m instanceof ArrayBuffer))throw new Error("Data must be an instance of ArrayBuffer.");let[h,n]=new Uint8Array(m,0,2);if(h!==219)throw new Error("Data does not appear to be in a KDBush format.");let i=n>>4;if(i!==Rt)throw new Error(`Got v${i} data when expected v${Rt}.`);let A=fR[n&15];if(!A)throw new Error("Unrecognized array type.");let[t]=new Uint16Array(m,2,1),[W]=new Uint32Array(m,4,1);return new Z(W,t,A,m)}constructor(m,h=64,n=Float64Array,i){if(isNaN(m)||m<0)throw new Error(`Unpexpected numItems value: ${m}.`);this.numItems=+m,this.nodeSize=Math.min(Math.max(+h,2),65535),this.ArrayType=n,this.IndexArrayType=m<65536?Uint16Array:Uint32Array;let A=fR.indexOf(this.ArrayType),t=m*2*this.ArrayType.BYTES_PER_ELEMENT,W=m*this.IndexArrayType.BYTES_PER_ELEMENT,e=(8-W%8)%8;if(A<0)throw new Error(`Unexpected typed array class: ${n}.`);i&&i instanceof ArrayBuffer?(this.data=i,this.ids=new this.IndexArrayType(this.data,fi,m),this.coords=new this.ArrayType(this.data,fi+W+e,m*2),this._pos=m*2,this._finished=!0):(this.data=new ArrayBuffer(fi+t+W+e),this.ids=new this.IndexArrayType(this.data,fi,m),this.coords=new this.ArrayType(this.data,fi+W+e,m*2),this._pos=0,this._finished=!1,new Uint8Array(this.data,0,2).set([219,(Rt<<4)+A]),new Uint16Array(this.data,2,1)[0]=h,new Uint32Array(this.data,4,1)[0]=m)}add(m,h){let n=this._pos>>1;return this.ids[n]=n,this.coords[this._pos++]=m,this.coords[this._pos++]=h,n}finish(){let m=this._pos>>1;if(m!==this.numItems)throw new Error(`Added ${m} items when expected ${this.numItems}.`);return Ft(this.ids,this.coords,this.nodeSize,0,this.numItems-1,0),this._finished=!0,this}range(m,h,n,i){if(!this._finished)throw new Error("Data not yet indexed - call index.finish().");let{ids:A,coords:t,nodeSize:W}=this,e=[0,A.length-1,0],G=[];for(;e.length;){let F=e.pop()||0,d=e.pop()||0,J=e.pop()||0;if(d-J<=W){for(let p=J;p<=d;p++){let T=t[2*p],I=t[2*p+1];T>=m&&T<=n&&I>=h&&I<=i&&G.push(A[p])}continue}let k=J+d>>1,r=t[2*k],Q=t[2*k+1];r>=m&&r<=n&&Q>=h&&Q<=i&&G.push(A[k]),(F===0?m<=r:h<=Q)&&(e.push(J),e.push(k-1),e.push(1-F)),(F===0?n>=r:i>=Q)&&(e.push(k+1),e.push(d),e.push(1-F))}return G}within(m,h,n){if(!this._finished)throw new Error("Data not yet indexed - call index.finish().");let{ids:i,coords:A,nodeSize:t}=this,W=[0,i.length-1,0],e=[],G=n*n;for(;W.length;){let F=W.pop()||0,d=W.pop()||0,J=W.pop()||0;if(d-J<=t){for(let p=J;p<=d;p++)uR(A[2*p],A[2*p+1],m,h)<=G&&e.push(i[p]);continue}let k=J+d>>1,r=A[2*k],Q=A[2*k+1];uR(r,Q,m,h)<=G&&e.push(i[k]),(F===0?m-n<=r:h-n<=Q)&&(W.push(J),W.push(k-1),W.push(1-F)),(F===0?m+n>=r:h+n>=Q)&&(W.push(k+1),W.push(d),W.push(1-F))}return e}};function Ft(Z,m,h,n,i,A){if(i-n<=h)return;let t=n+i>>1;bR(Z,m,t,n,i,A),Ft(Z,m,h,n,t-1,1-A),Ft(Z,m,h,t+1,i,1-A)}function bR(Z,m,h,n,i,A){for(;i>n;){if(i-n>600){let G=i-n+1,F=h-n+1,d=Math.log(G),J=.5*Math.exp(2*d/3),k=.5*Math.sqrt(d*J*(G-J)/G)*(F-G/2<0?-1:1),r=Math.max(n,Math.floor(h-F*J/G+k)),Q=Math.min(i,Math.floor(h+(G-F)*J/G+k));bR(Z,m,h,r,Q,A)}let t=m[2*h+A],W=n,e=i;for(ui(Z,m,n,h),m[2*i+A]>t&&ui(Z,m,n,i);W<e;){for(ui(Z,m,W,e),W++,e--;m[2*W+A]<t;)W++;for(;m[2*e+A]>t;)e--}m[2*n+A]===t?ui(Z,m,n,e):(e++,ui(Z,m,e,i)),e<=h&&(n=e+1),h<=e&&(i=e-1)}}function ui(Z,m,h,n){Gt(Z,h,n),Gt(m,2*h,2*n),Gt(m,2*h+1,2*n+1)}function Gt(Z,m,h){let n=Z[m];Z[m]=Z[h],Z[h]=n}function uR(Z,m,h,n){let i=Z-h,A=m-n;return i*i+A*A}function iY(Z){Z=l(Z,l.EMPTY_OBJECT),this._enabled=l(Z.enabled,!1),this._pixelRange=l(Z.pixelRange,80),this._minimumClusterSize=l(Z.minimumClusterSize,2),this._clusterBillboards=l(Z.clusterBillboards,!0),this._clusterLabels=l(Z.clusterLabels,!0),this._clusterPoints=l(Z.clusterPoints,!0),this._labelCollection=void 0,this._billboardCollection=void 0,this._pointCollection=void 0,this._clusterBillboardCollection=void 0,this._clusterLabelCollection=void 0,this._clusterPointCollection=void 0,this._collectionIndicesByEntity={},this._unusedLabelIndices=[],this._unusedBillboardIndices=[],this._unusedPointIndices=[],this._previousClusters=[],this._previousHeight=void 0,this._enabledDirty=!1,this._clusterDirty=!1,this._cluster=void 0,this._removeEventListener=void 0,this._clusterEvent=new sZ,this.show=l(Z.show,!0)}function xR(Z,m){Z.x-=m,Z.y-=m,Z.width+=m*2,Z.height+=m*2}var ak=new qZ;function _R(Z,m,h,n,i){if(V(Z._labelCollection)&&n._clusterLabels?i=Ti.getScreenSpaceBoundingBox(Z,m,i):V(Z._billboardCollection)&&n._clusterBillboards?i=em.getScreenSpaceBoundingBox(Z,m,i):V(Z._pointPrimitiveCollection)&&n._clusterPoints&&(i=Rh.getScreenSpaceBoundingBox(Z,m,i)),xR(i,h),n._clusterLabels&&!V(Z._labelCollection)&&V(Z.id)&&wR(n,Z.id.id)&&V(Z.id._label)){let A=n._collectionIndicesByEntity[Z.id.id].labelIndex,t=n._labelCollection.get(A),W=Ti.getScreenSpaceBoundingBox(t,m,ak);xR(W,h),i=qZ.union(i,W,i)}return i}function tk(Z,m){if(Z.clusterShow=!0,!V(Z._labelCollection)&&V(Z.id)&&wR(m,Z.id.id)&&V(Z.id._label)){let h=m._collectionIndicesByEntity[Z.id.id].labelIndex,n=m._labelCollection.get(h);n.clusterShow=!0}}function OR(Z,m,h,n){let i={billboard:n._clusterBillboardCollection.add(),label:n._clusterLabelCollection.add(),point:n._clusterPointCollection.add()};i.billboard.show=!1,i.point.show=!1,i.label.show=!0,i.label.text=m.toLocaleString(),i.label.id=h,i.billboard.position=i.label.position=i.point.position=Z,n._clusterEvent.raiseEvent(h,i)}function wR(Z,m){return V(Z)&&V(Z._collectionIndicesByEntity[m])&&V(Z._collectionIndicesByEntity[m].labelIndex)}function dt(Z,m,h,n,i){if(!V(Z))return;let A=Z.length;for(let t=0;t<A;++t){let W=Z.get(t);if(W.clusterShow=!1,!W.show||i._scene.mode===UZ.SCENE3D&&!n.isPointVisible(W.position))continue;let e=i._clusterLabels&&V(W._labelCollection),G=i._clusterBillboards&&V(W.id._billboard),F=i._clusterPoints&&V(W.id._point);if(e&&(F||G))continue;let d=W.computeScreenSpacePosition(h);V(d)&&m.push({index:t,collection:Z,clustered:!1,coord:d})}}var Wk=new qZ,ek=new qZ,ok=new qZ;function Vk(Z){return function(m){if(V(m)&&m<.05||!Z.enabled)return;let h=Z._scene,n=Z._labelCollection,i=Z._billboardCollection,A=Z._pointCollection;if(!V(n)&&!V(i)&&!V(A)||!Z._clusterBillboards&&!Z._clusterLabels&&!Z._clusterPoints)return;let t=Z._clusterLabelCollection,W=Z._clusterBillboardCollection,e=Z._clusterPointCollection;V(t)?t.removeAll():t=Z._clusterLabelCollection=new at({scene:h}),V(W)?W.removeAll():W=Z._clusterBillboardCollection=new Xn({scene:h}),V(e)?e.removeAll():e=Z._clusterPointCollection=new lt;let G=Z._pixelRange,F=Z._minimumClusterSize,d=Z._previousClusters,J=[],k=Z._previousHeight,r=h.camera.positionCartographic.height,Q=h.mapProjection.ellipsoid,p=h.camera.positionWC,T=new xW(Q,p),I=[];Z._clusterLabels&&dt(n,I,h,T,Z),Z._clusterBillboards&&dt(i,I,h,T,Z),Z._clusterPoints&&dt(A,I,h,T,Z);let f,b,O,v,hZ,K,tZ,NZ,Y,ZZ,oZ,RZ;if(I.length>0){let EZ=new bi(I.length,64,Uint32Array);for(let z=0;z<I.length;++z)EZ.add(I[z].coord.x,I[z].coord.y);if(EZ.finish(),r<k)for(O=d.length,f=0;f<O;++f){let z=d[f];if(!T.isPointVisible(z.position))continue;let nZ=em._computeScreenSpacePosition(eZ.IDENTITY,z.position,_.ZERO,q.ZERO,h);if(!V(nZ))continue;let XZ=1-r/k,wZ=z.width=z.width*XZ,DZ=z.height=z.height*XZ;wZ=Math.max(wZ,z.minimumWidth),DZ=Math.max(DZ,z.minimumHeight);let TZ=nZ.x-wZ*.5,LZ=nZ.y-DZ*.5,Cm=nZ.x+wZ,pm=nZ.y+DZ;for(hZ=EZ.range(TZ,LZ,Cm,pm),K=hZ.length,ZZ=0,Y=[],b=0;b<K;++b)tZ=hZ[b],NZ=I[tZ],NZ.clustered||(++ZZ,oZ=NZ.collection,RZ=NZ.index,Y.push(oZ.get(RZ).id));if(ZZ>=F)for(OR(z.position,ZZ,Y,Z),J.push(z),b=0;b<K;++b)I[hZ[b]].clustered=!0}for(O=I.length,f=0;f<O;++f){let z=I[f];if(z.clustered)continue;z.clustered=!0,oZ=z.collection,RZ=z.index;let nZ=oZ.get(RZ);v=_R(nZ,z.coord,G,Z,Wk);let XZ=qZ.clone(v,ek);hZ=EZ.range(v.x,v.y,v.x+v.width,v.y+v.height),K=hZ.length;let wZ=_.clone(nZ.position);for(ZZ=1,Y=[nZ.id],b=0;b<K;++b)if(tZ=hZ[b],NZ=I[tZ],!NZ.clustered){let DZ=NZ.collection.get(NZ.index),TZ=_R(DZ,NZ.coord,G,Z,ok);_.add(DZ.position,wZ,wZ),qZ.union(XZ,TZ,XZ),++ZZ,Y.push(DZ.id)}if(ZZ>=F){let DZ=_.multiplyByScalar(wZ,1/ZZ,wZ);for(OR(DZ,ZZ,Y,Z),J.push({position:DZ,width:XZ.width,height:XZ.height,minimumWidth:v.width,minimumHeight:v.height}),b=0;b<K;++b)I[hZ[b]].clustered=!0}else tk(nZ,Z)}}t.length===0&&(t.destroy(),Z._clusterLabelCollection=void 0),W.length===0&&(W.destroy(),Z._clusterBillboardCollection=void 0),e.length===0&&(e.destroy(),Z._clusterPointCollection=void 0),Z._previousClusters=J,Z._previousHeight=r}}iY.prototype._initialize=function(Z){this._scene=Z;let m=Vk(this);this._cluster=m,this._removeEventListener=Z.camera.changed.addEventListener(m)};Object.defineProperties(iY.prototype,{enabled:{get:function(){return this._enabled},set:function(Z){this._enabledDirty=Z!==this._enabled,this._enabled=Z}},pixelRange:{get:function(){return this._pixelRange},set:function(Z){this._clusterDirty=this._clusterDirty||Z!==this._pixelRange,this._pixelRange=Z}},minimumClusterSize:{get:function(){return this._minimumClusterSize},set:function(Z){this._clusterDirty=this._clusterDirty||Z!==this._minimumClusterSize,this._minimumClusterSize=Z}},clusterEvent:{get:function(){return this._clusterEvent}},clusterBillboards:{get:function(){return this._clusterBillboards},set:function(Z){this._clusterDirty=this._clusterDirty||Z!==this._clusterBillboards,this._clusterBillboards=Z}},clusterLabels:{get:function(){return this._clusterLabels},set:function(Z){this._clusterDirty=this._clusterDirty||Z!==this._clusterLabels,this._clusterLabels=Z}},clusterPoints:{get:function(){return this._clusterPoints},set:function(Z){this._clusterDirty=this._clusterDirty||Z!==this._clusterPoints,this._clusterPoints=Z}}});function rt(Z,m,h,n){return function(i){let A=this[Z];V(this._collectionIndicesByEntity)||(this._collectionIndicesByEntity={});let t=this._collectionIndicesByEntity[i.id];if(V(t)||(t=this._collectionIndicesByEntity[i.id]={billboardIndex:void 0,labelIndex:void 0,pointIndex:void 0}),V(A)&&V(t[n]))return A.get(t[n]);V(A)||(A=this[Z]=new m({scene:this._scene}));let W,e,G=this[h];G.length>0?(W=G.shift(),e=A.get(W)):(e=A.add(),W=A.length-1),t[n]=W;let F=this;return Promise.resolve().then(function(){F._clusterDirty=!0}),e}}function Nt(Z,m){let h=Z._collectionIndicesByEntity[m];!V(h.billboardIndex)&&!V(h.labelIndex)&&!V(h.pointIndex)&&delete Z._collectionIndicesByEntity[m]}iY.prototype.getLabel=rt("_labelCollection",at,"_unusedLabelIndices","labelIndex");iY.prototype.removeLabel=function(Z){let m=this._collectionIndicesByEntity&&this._collectionIndicesByEntity[Z.id];if(!V(this._labelCollection)||!V(m)||!V(m.labelIndex))return;let h=m.labelIndex;m.labelIndex=void 0,Nt(this,Z.id);let n=this._labelCollection.get(h);n.show=!1,n.text="",n.id=void 0,this._unusedLabelIndices.push(h),this._clusterDirty=!0};iY.prototype.getBillboard=rt("_billboardCollection",Xn,"_unusedBillboardIndices","billboardIndex");iY.prototype.removeBillboard=function(Z){let m=this._collectionIndicesByEntity&&this._collectionIndicesByEntity[Z.id];if(!V(this._billboardCollection)||!V(m)||!V(m.billboardIndex))return;let h=m.billboardIndex;m.billboardIndex=void 0,Nt(this,Z.id);let n=this._billboardCollection.get(h);n.id=void 0,n.show=!1,n.image=void 0,this._unusedBillboardIndices.push(h),this._clusterDirty=!0};iY.prototype.getPoint=rt("_pointCollection",lt,"_unusedPointIndices","pointIndex");iY.prototype.removePoint=function(Z){let m=this._collectionIndicesByEntity&&this._collectionIndicesByEntity[Z.id];if(!V(this._pointCollection)||!V(m)||!V(m.pointIndex))return;let h=m.pointIndex;m.pointIndex=void 0,Nt(this,Z.id);let n=this._pointCollection.get(h);n.show=!1,n.id=void 0,this._unusedPointIndices.push(h),this._clusterDirty=!0};function st(Z){if(!V(Z))return;let m=Z.length;for(let h=0;h<m;++h)Z.get(h).clusterShow=!0}function lk(Z){Z.enabled||(V(Z._clusterLabelCollection)&&Z._clusterLabelCollection.destroy(),V(Z._clusterBillboardCollection)&&Z._clusterBillboardCollection.destroy(),V(Z._clusterPointCollection)&&Z._clusterPointCollection.destroy(),Z._clusterLabelCollection=void 0,Z._clusterBillboardCollection=void 0,Z._clusterPointCollection=void 0,st(Z._labelCollection),st(Z._billboardCollection),st(Z._pointCollection))}iY.prototype.update=function(Z){if(!this.show)return;let m;V(this._labelCollection)&&this._labelCollection.length>0&&this._labelCollection.get(0)._glyphs.length===0&&(m=Z.commandList,Z.commandList=[],this._labelCollection.update(Z),Z.commandList=m),V(this._billboardCollection)&&this._billboardCollection.length>0&&!V(this._billboardCollection.get(0).width)&&(m=Z.commandList,Z.commandList=[],this._billboardCollection.update(Z),Z.commandList=m),this._enabledDirty&&(this._enabledDirty=!1,lk(this),this._clusterDirty=!0),this._clusterDirty&&(this._clusterDirty=!1,this._cluster()),V(this._clusterLabelCollection)&&this._clusterLabelCollection.update(Z),V(this._clusterBillboardCollection)&&this._clusterBillboardCollection.update(Z),V(this._clusterPointCollection)&&this._clusterPointCollection.update(Z),V(this._labelCollection)&&this._labelCollection.update(Z),V(this._billboardCollection)&&this._billboardCollection.update(Z),V(this._pointCollection)&&this._pointCollection.update(Z)};iY.prototype.destroy=function(){this._labelCollection=this._labelCollection&&this._labelCollection.destroy(),this._billboardCollection=this._billboardCollection&&this._billboardCollection.destroy(),this._pointCollection=this._pointCollection&&this._pointCollection.destroy(),this._clusterLabelCollection=this._clusterLabelCollection&&this._clusterLabelCollection.destroy(),this._clusterBillboardCollection=this._clusterBillboardCollection&&this._clusterBillboardCollection.destroy(),this._clusterPointCollection=this._clusterPointCollection&&this._clusterPointCollection.destroy(),V(this._removeEventListener)&&(this._removeEventListener(),this._removeEventListener=void 0),this._labelCollection=void 0,this._billboardCollection=void 0,this._pointCollection=void 0,this._clusterBillboardCollection=void 0,this._clusterLabelCollection=void 0,this._clusterPointCollection=void 0,this._collectionIndicesByEntity=void 0,this._unusedLabelIndices=[],this._unusedBillboardIndices=[],this._unusedPointIndices=[],this._previousClusters=[],this._previousHeight=void 0,this._enabledDirty=!1,this._pixelRangeDirty=!1,this._minimumClusterSizeDirty=!1};var yR=iY;function Qn(){this._array=[],this._hash={}}Object.defineProperties(Qn.prototype,{length:{get:function(){return this._array.length}},values:{get:function(){return this._array}}});Qn.prototype.contains=function(Z){if(typeof Z!="string"&&typeof Z!="number")throw new U("key is required to be a string or number.");return V(this._hash[Z])};Qn.prototype.set=function(Z,m){if(typeof Z!="string"&&typeof Z!="number")throw new U("key is required to be a string or number.");let h=this._hash[Z];m!==h&&(this.remove(Z),this._hash[Z]=m,this._array.push(m))};Qn.prototype.get=function(Z){if(typeof Z!="string"&&typeof Z!="number")throw new U("key is required to be a string or number.");return this._hash[Z]};Qn.prototype.remove=function(Z){if(V(Z)&&typeof Z!="string"&&typeof Z!="number")throw new U("key is required to be a string or number.");let m=this._hash[Z],h=V(m);if(h){let n=this._array;n.splice(n.indexOf(m),1),delete this._hash[Z]}return h};Qn.prototype.removeAll=function(){let Z=this._array;Z.length>0&&(this._hash={},Z.length=0)};var xi=Qn;function dm(Z){Z=l(Z,l.EMPTY_OBJECT),this.start=V(Z.start)?kZ.clone(Z.start):new kZ,this.stop=V(Z.stop)?kZ.clone(Z.stop):new kZ,this.data=Z.data,this.isStartIncluded=l(Z.isStartIncluded,!0),this.isStopIncluded=l(Z.isStopIncluded,!0)}Object.defineProperties(dm.prototype,{isEmpty:{get:function(){let Z=kZ.compare(this.stop,this.start);return Z<0||Z===0&&(!this.isStartIncluded||!this.isStopIncluded)}}});var Ln={start:void 0,stop:void 0,isStartIncluded:void 0,isStopIncluded:void 0,data:void 0};dm.fromIso8601=function(Z,m){y.typeOf.object("options",Z),y.typeOf.string("options.iso8601",Z.iso8601);let h=Z.iso8601.split("/");if(h.length!==2)throw new U("options.iso8601 is an invalid ISO 8601 interval.");let n=kZ.fromIso8601(h[0]),i=kZ.fromIso8601(h[1]),A=l(Z.isStartIncluded,!0),t=l(Z.isStopIncluded,!0),W=Z.data;return V(m)?(m.start=n,m.stop=i,m.isStartIncluded=A,m.isStopIncluded=t,m.data=W,m):(Ln.start=n,Ln.stop=i,Ln.isStartIncluded=A,Ln.isStopIncluded=t,Ln.data=W,new dm(Ln))};dm.toIso8601=function(Z,m){return y.typeOf.object("timeInterval",Z),`${kZ.toIso8601(Z.start,m)}/${kZ.toIso8601(Z.stop,m)}`};dm.clone=function(Z,m){if(V(Z))return V(m)?(m.start=Z.start,m.stop=Z.stop,m.isStartIncluded=Z.isStartIncluded,m.isStopIncluded=Z.isStopIncluded,m.data=Z.data,m):new dm(Z)};dm.equals=function(Z,m,h){return Z===m||V(Z)&&V(m)&&(Z.isEmpty&&m.isEmpty||Z.isStartIncluded===m.isStartIncluded&&Z.isStopIncluded===m.isStopIncluded&&kZ.equals(Z.start,m.start)&&kZ.equals(Z.stop,m.stop)&&(Z.data===m.data||V(h)&&h(Z.data,m.data)))};dm.equalsEpsilon=function(Z,m,h,n){return h=l(h,0),Z===m||V(Z)&&V(m)&&(Z.isEmpty&&m.isEmpty||Z.isStartIncluded===m.isStartIncluded&&Z.isStopIncluded===m.isStopIncluded&&kZ.equalsEpsilon(Z.start,m.start,h)&&kZ.equalsEpsilon(Z.stop,m.stop,h)&&(Z.data===m.data||V(n)&&n(Z.data,m.data)))};dm.intersect=function(Z,m,h,n){if(y.typeOf.object("left",Z),!V(m))return dm.clone(dm.EMPTY,h);let i=Z.start,A=Z.stop,t=m.start,W=m.stop,e=kZ.greaterThanOrEquals(t,i)&&kZ.greaterThanOrEquals(A,t),G=!e&&kZ.lessThanOrEquals(t,i)&&kZ.lessThanOrEquals(i,W);if(!e&&!G)return dm.clone(dm.EMPTY,h);let F=Z.isStartIncluded,d=Z.isStopIncluded,J=m.isStartIncluded,k=m.isStopIncluded,r=kZ.lessThan(A,W);return V(h)||(h=new dm),h.start=e?t:i,h.isStartIncluded=F&&J||!kZ.equals(t,i)&&(e&&J||G&&F),h.stop=r?A:W,h.isStopIncluded=r?d:d&&k||!kZ.equals(W,A)&&k,h.data=V(n)?n(Z.data,m.data):Z.data,h};dm.contains=function(Z,m){if(y.typeOf.object("timeInterval",Z),y.typeOf.object("julianDate",m),Z.isEmpty)return!1;let h=kZ.compare(Z.start,m);if(h===0)return Z.isStartIncluded;let n=kZ.compare(m,Z.stop);return n===0?Z.isStopIncluded:h<0&&n<0};dm.prototype.clone=function(Z){return dm.clone(this,Z)};dm.prototype.equals=function(Z,m){return dm.equals(this,Z,m)};dm.prototype.equalsEpsilon=function(Z,m,h){return dm.equalsEpsilon(this,Z,m,h)};dm.prototype.toString=function(){return dm.toIso8601(this)};dm.EMPTY=Object.freeze(new dm({start:new kZ,stop:new kZ,isStartIncluded:!1,isStopIncluded:!1}));var ma=dm;var HR=Object.freeze(kZ.fromIso8601("0000-01-01T00:00:00Z")),zR=Object.freeze(kZ.fromIso8601("9999-12-31T24:00:00Z")),Rk=Object.freeze(new ma({start:HR,stop:zR})),Gk={MINIMUM_VALUE:HR,MAXIMUM_VALUE:zR,MAXIMUM_INTERVAL:Rk},TY=Gk;function Fk(Z){if(Z=l(Z,l.EMPTY_OBJECT),!V(Z.componentDatatype))throw new U("options.componentDatatype is required.");if(!V(Z.componentsPerAttribute))throw new U("options.componentsPerAttribute is required.");if(Z.componentsPerAttribute<1||Z.componentsPerAttribute>4)throw new U("options.componentsPerAttribute must be between 1 and 4.");if(!V(Z.value))throw new U("options.value is required.");this.componentDatatype=Z.componentDatatype,this.componentsPerAttribute=Z.componentsPerAttribute,this.normalize=l(Z.normalize,!1),this.value=Z.value}var Ih=Fk;var XR=`in vec4 v_startPlaneNormalEcAndHalfWidth;
in vec4 v_endPlaneNormalEcAndBatchId;
in vec4 v_rightPlaneEC; // Technically can compute distance for this here
in vec4 v_endEcAndStartEcX;
in vec4 v_texcoordNormalizationAndStartEcYZ;

#ifdef PER_INSTANCE_COLOR
in vec4 v_color;
#endif

void main(void)
{
    float logDepthOrDepth = czm_branchFreeTernary(czm_sceneMode == czm_sceneMode2D, gl_FragCoord.z, czm_unpackDepth(texture(czm_globeDepthTexture, gl_FragCoord.xy / czm_viewport.zw)));
    vec3 ecStart = vec3(v_endEcAndStartEcX.w, v_texcoordNormalizationAndStartEcYZ.zw);

    // Discard for sky
    if (logDepthOrDepth == 0.0) {
#ifdef DEBUG_SHOW_VOLUME
        out_FragColor = vec4(1.0, 0.0, 0.0, 0.5);
        return;
#else // DEBUG_SHOW_VOLUME
        discard;
#endif // DEBUG_SHOW_VOLUME
    }

    vec4 eyeCoordinate = czm_windowToEyeCoordinates(gl_FragCoord.xy, logDepthOrDepth);
    eyeCoordinate /= eyeCoordinate.w;

    float halfMaxWidth = v_startPlaneNormalEcAndHalfWidth.w * czm_metersPerPixel(eyeCoordinate);
    // Check distance of the eye coordinate against the right-facing plane
    float widthwiseDistance = czm_planeDistance(v_rightPlaneEC, eyeCoordinate.xyz);

    // Check eye coordinate against the mitering planes
    float distanceFromStart = czm_planeDistance(v_startPlaneNormalEcAndHalfWidth.xyz, -dot(ecStart, v_startPlaneNormalEcAndHalfWidth.xyz), eyeCoordinate.xyz);
    float distanceFromEnd = czm_planeDistance(v_endPlaneNormalEcAndBatchId.xyz, -dot(v_endEcAndStartEcX.xyz, v_endPlaneNormalEcAndBatchId.xyz), eyeCoordinate.xyz);

    if (abs(widthwiseDistance) > halfMaxWidth || distanceFromStart < 0.0 || distanceFromEnd < 0.0) {
#ifdef DEBUG_SHOW_VOLUME
        out_FragColor = vec4(1.0, 0.0, 0.0, 0.5);
        return;
#else // DEBUG_SHOW_VOLUME
        discard;
#endif // DEBUG_SHOW_VOLUME
    }

    // Check distance of the eye coordinate against start and end planes with normals in the right plane.
    // For computing unskewed lengthwise texture coordinate.
    // Can also be used for clipping extremely pointy miters, but in practice unnecessary because of miter breaking.

    // aligned plane: cross the right plane normal with miter plane normal, then cross the result with right again to point it more "forward"
    vec3 alignedPlaneNormal;

    // start aligned plane
    alignedPlaneNormal = cross(v_rightPlaneEC.xyz, v_startPlaneNormalEcAndHalfWidth.xyz);
    alignedPlaneNormal = normalize(cross(alignedPlaneNormal, v_rightPlaneEC.xyz));
    distanceFromStart = czm_planeDistance(alignedPlaneNormal, -dot(alignedPlaneNormal, ecStart), eyeCoordinate.xyz);

    // end aligned plane
    alignedPlaneNormal = cross(v_rightPlaneEC.xyz, v_endPlaneNormalEcAndBatchId.xyz);
    alignedPlaneNormal = normalize(cross(alignedPlaneNormal, v_rightPlaneEC.xyz));
    distanceFromEnd = czm_planeDistance(alignedPlaneNormal, -dot(alignedPlaneNormal, v_endEcAndStartEcX.xyz), eyeCoordinate.xyz);

#ifdef PER_INSTANCE_COLOR
    out_FragColor = czm_gammaCorrect(v_color);
#else // PER_INSTANCE_COLOR
    // Clamp - distance to aligned planes may be negative due to mitering,
    // so fragment texture coordinate might be out-of-bounds.
    float s = clamp(distanceFromStart / (distanceFromStart + distanceFromEnd), 0.0, 1.0);
    s = (s * v_texcoordNormalizationAndStartEcYZ.x) + v_texcoordNormalizationAndStartEcYZ.y;
    float t = (widthwiseDistance + halfMaxWidth) / (2.0 * halfMaxWidth);

    czm_materialInput materialInput;

    materialInput.s = s;
    materialInput.st = vec2(s, t);
    materialInput.str = vec3(s, t, 0.0);

    czm_material material = czm_getMaterial(materialInput);
    out_FragColor = vec4(material.diffuse + material.emission, material.alpha);
#endif // PER_INSTANCE_COLOR

    // Premultiply alpha. Required for classification primitives on translucent globe.
    out_FragColor.rgb *= out_FragColor.a;

    czm_writeDepthClamp();
}
`;var LR=`in vec3 v_forwardDirectionEC;
in vec3 v_texcoordNormalizationAndHalfWidth;
in float v_batchId;

#ifdef PER_INSTANCE_COLOR
in vec4 v_color;
#else
in vec2 v_alignedPlaneDistances;
in float v_texcoordT;
#endif

float rayPlaneDistanceUnsafe(vec3 origin, vec3 direction, vec3 planeNormal, float planeDistance) {
    // We don't expect the ray to ever be parallel to the plane
    return (-planeDistance - dot(planeNormal, origin)) / dot(planeNormal, direction);
}

void main(void)
{
    vec4 eyeCoordinate = gl_FragCoord;
    eyeCoordinate /= eyeCoordinate.w;

#ifdef PER_INSTANCE_COLOR
    out_FragColor = czm_gammaCorrect(v_color);
#else // PER_INSTANCE_COLOR
    // Use distances for planes aligned with segment to prevent skew in dashing
    float distanceFromStart = rayPlaneDistanceUnsafe(eyeCoordinate.xyz, -v_forwardDirectionEC, v_forwardDirectionEC.xyz, v_alignedPlaneDistances.x);
    float distanceFromEnd = rayPlaneDistanceUnsafe(eyeCoordinate.xyz, v_forwardDirectionEC, -v_forwardDirectionEC.xyz, v_alignedPlaneDistances.y);

    // Clamp - distance to aligned planes may be negative due to mitering
    distanceFromStart = max(0.0, distanceFromStart);
    distanceFromEnd = max(0.0, distanceFromEnd);

    float s = distanceFromStart / (distanceFromStart + distanceFromEnd);
    s = (s * v_texcoordNormalizationAndHalfWidth.x) + v_texcoordNormalizationAndHalfWidth.y;

    czm_materialInput materialInput;

    materialInput.s = s;
    materialInput.st = vec2(s, v_texcoordT);
    materialInput.str = vec3(s, v_texcoordT, 0.0);

    czm_material material = czm_getMaterial(materialInput);
    out_FragColor = vec4(material.diffuse + material.emission, material.alpha);
#endif // PER_INSTANCE_COLOR
}
`;var vR=`in vec3 position3DHigh;
in vec3 position3DLow;

in vec4 startHiAndForwardOffsetX;
in vec4 startLoAndForwardOffsetY;
in vec4 startNormalAndForwardOffsetZ;
in vec4 endNormalAndTextureCoordinateNormalizationX;
in vec4 rightNormalAndTextureCoordinateNormalizationY;
in vec4 startHiLo2D;
in vec4 offsetAndRight2D;
in vec4 startEndNormals2D;
in vec2 texcoordNormalization2D;

in float batchId;

out vec3 v_forwardDirectionEC;
out vec3 v_texcoordNormalizationAndHalfWidth;
out float v_batchId;

// For materials
#ifdef WIDTH_VARYING
out float v_width;
#endif
#ifdef ANGLE_VARYING
out float v_polylineAngle;
#endif

#ifdef PER_INSTANCE_COLOR
out vec4 v_color;
#else
out vec2 v_alignedPlaneDistances;
out float v_texcoordT;
#endif

// Morphing planes using SLERP or NLERP doesn't seem to work, so instead draw the material directly on the shadow volume.
// Morph views are from very far away and aren't meant to be used precisely, so this should be sufficient.
void main()
{
    v_batchId = batchId;

    // Start position
    vec4 posRelativeToEye2D = czm_translateRelativeToEye(vec3(0.0, startHiLo2D.xy), vec3(0.0, startHiLo2D.zw));
    vec4 posRelativeToEye3D = czm_translateRelativeToEye(startHiAndForwardOffsetX.xyz, startLoAndForwardOffsetY.xyz);
    vec4 posRelativeToEye = czm_columbusViewMorph(posRelativeToEye2D, posRelativeToEye3D, czm_morphTime);
    vec3 posEc2D = (czm_modelViewRelativeToEye * posRelativeToEye2D).xyz;
    vec3 posEc3D = (czm_modelViewRelativeToEye * posRelativeToEye3D).xyz;
    vec3 startEC = (czm_modelViewRelativeToEye * posRelativeToEye).xyz;

    // Start plane
    vec4 startPlane2D;
    vec4 startPlane3D;
    startPlane2D.xyz = czm_normal * vec3(0.0, startEndNormals2D.xy);
    startPlane3D.xyz = czm_normal * startNormalAndForwardOffsetZ.xyz;
    startPlane2D.w = -dot(startPlane2D.xyz, posEc2D);
    startPlane3D.w = -dot(startPlane3D.xyz, posEc3D);

    // Right plane
    vec4 rightPlane2D;
    vec4 rightPlane3D;
    rightPlane2D.xyz = czm_normal * vec3(0.0, offsetAndRight2D.zw);
    rightPlane3D.xyz = czm_normal * rightNormalAndTextureCoordinateNormalizationY.xyz;
    rightPlane2D.w = -dot(rightPlane2D.xyz, posEc2D);
    rightPlane3D.w = -dot(rightPlane3D.xyz, posEc3D);

    // End position
    posRelativeToEye2D = posRelativeToEye2D + vec4(0.0, offsetAndRight2D.xy, 0.0);
    posRelativeToEye3D = posRelativeToEye3D + vec4(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w, 0.0);
    posRelativeToEye = czm_columbusViewMorph(posRelativeToEye2D, posRelativeToEye3D, czm_morphTime);
    posEc2D = (czm_modelViewRelativeToEye * posRelativeToEye2D).xyz;
    posEc3D = (czm_modelViewRelativeToEye * posRelativeToEye3D).xyz;
    vec3 endEC = (czm_modelViewRelativeToEye * posRelativeToEye).xyz;
    vec3 forwardEc3D = czm_normal * normalize(vec3(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w));
    vec3 forwardEc2D = czm_normal * normalize(vec3(0.0, offsetAndRight2D.xy));

    // End plane
    vec4 endPlane2D;
    vec4 endPlane3D;
    endPlane2D.xyz = czm_normal * vec3(0.0, startEndNormals2D.zw);
    endPlane3D.xyz = czm_normal * endNormalAndTextureCoordinateNormalizationX.xyz;
    endPlane2D.w = -dot(endPlane2D.xyz, posEc2D);
    endPlane3D.w = -dot(endPlane3D.xyz, posEc3D);

    // Forward direction
    v_forwardDirectionEC = normalize(endEC - startEC);

    vec2 cleanTexcoordNormalization2D;
    cleanTexcoordNormalization2D.x = abs(texcoordNormalization2D.x);
    cleanTexcoordNormalization2D.y = czm_branchFreeTernary(texcoordNormalization2D.y > 1.0, 0.0, abs(texcoordNormalization2D.y));
    vec2 cleanTexcoordNormalization3D;
    cleanTexcoordNormalization3D.x = abs(endNormalAndTextureCoordinateNormalizationX.w);
    cleanTexcoordNormalization3D.y = rightNormalAndTextureCoordinateNormalizationY.w;
    cleanTexcoordNormalization3D.y = czm_branchFreeTernary(cleanTexcoordNormalization3D.y > 1.0, 0.0, abs(cleanTexcoordNormalization3D.y));

    v_texcoordNormalizationAndHalfWidth.xy = mix(cleanTexcoordNormalization2D, cleanTexcoordNormalization3D, czm_morphTime);

#ifdef PER_INSTANCE_COLOR
    v_color = czm_batchTable_color(batchId);
#else // PER_INSTANCE_COLOR
    // For computing texture coordinates

    v_alignedPlaneDistances.x = -dot(v_forwardDirectionEC, startEC);
    v_alignedPlaneDistances.y = -dot(-v_forwardDirectionEC, endEC);
#endif // PER_INSTANCE_COLOR

#ifdef WIDTH_VARYING
    float width = czm_batchTable_width(batchId);
    float halfWidth = width * 0.5;
    v_width = width;
    v_texcoordNormalizationAndHalfWidth.z = halfWidth;
#else
    float halfWidth = 0.5 * czm_batchTable_width(batchId);
    v_texcoordNormalizationAndHalfWidth.z = halfWidth;
#endif

    // Compute a normal along which to "push" the position out, extending the miter depending on view distance.
    // Position has already been "pushed" by unit length along miter normal, and miter normals are encoded in the planes.
    // Decode the normal to use at this specific vertex, push the position back, and then push to where it needs to be.
    // Since this is morphing, compute both 3D and 2D positions and then blend.

    // ****** 3D ******
    // Check distance to the end plane and start plane, pick the plane that is closer
    vec4 positionEc3D = czm_modelViewRelativeToEye * czm_translateRelativeToEye(position3DHigh, position3DLow); // w = 1.0, see czm_computePosition
    float absStartPlaneDistance = abs(czm_planeDistance(startPlane3D, positionEc3D.xyz));
    float absEndPlaneDistance = abs(czm_planeDistance(endPlane3D, positionEc3D.xyz));
    vec3 planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlane3D.xyz, endPlane3D.xyz);
    vec3 upOrDown = normalize(cross(rightPlane3D.xyz, planeDirection)); // Points "up" for start plane, "down" at end plane.
    vec3 normalEC = normalize(cross(planeDirection, upOrDown));         // In practice, the opposite seems to work too.

    // Nudge the top vertex upwards to prevent flickering
    vec3 geodeticSurfaceNormal = normalize(cross(normalEC, forwardEc3D));
    geodeticSurfaceNormal *= float(0.0 <= rightNormalAndTextureCoordinateNormalizationY.w && rightNormalAndTextureCoordinateNormalizationY.w <= 1.0);
    geodeticSurfaceNormal *= MAX_TERRAIN_HEIGHT;
    positionEc3D.xyz += geodeticSurfaceNormal;

    // Determine if this vertex is on the "left" or "right"
    normalEC *= sign(endNormalAndTextureCoordinateNormalizationX.w);

    // A "perfect" implementation would push along normals according to the angle against forward.
    // In practice, just pushing the normal out by halfWidth is sufficient for morph views.
    positionEc3D.xyz += halfWidth * max(0.0, czm_metersPerPixel(positionEc3D)) * normalEC; // prevent artifacts when czm_metersPerPixel is negative (behind camera)

    // ****** 2D ******
    // Check distance to the end plane and start plane, pick the plane that is closer
    vec4 positionEc2D = czm_modelViewRelativeToEye * czm_translateRelativeToEye(position2DHigh.zxy, position2DLow.zxy); // w = 1.0, see czm_computePosition
    absStartPlaneDistance = abs(czm_planeDistance(startPlane2D, positionEc2D.xyz));
    absEndPlaneDistance = abs(czm_planeDistance(endPlane2D, positionEc2D.xyz));
    planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlane2D.xyz, endPlane2D.xyz);
    upOrDown = normalize(cross(rightPlane2D.xyz, planeDirection)); // Points "up" for start plane, "down" at end plane.
    normalEC = normalize(cross(planeDirection, upOrDown));         // In practice, the opposite seems to work too.

    // Nudge the top vertex upwards to prevent flickering
    geodeticSurfaceNormal = normalize(cross(normalEC, forwardEc2D));
    geodeticSurfaceNormal *= float(0.0 <= texcoordNormalization2D.y && texcoordNormalization2D.y <= 1.0);
    geodeticSurfaceNormal *= MAX_TERRAIN_HEIGHT;
    positionEc2D.xyz += geodeticSurfaceNormal;

    // Determine if this vertex is on the "left" or "right"
    normalEC *= sign(texcoordNormalization2D.x);
#ifndef PER_INSTANCE_COLOR
    // Use vertex's sidedness to compute its texture coordinate.
    v_texcoordT = clamp(sign(texcoordNormalization2D.x), 0.0, 1.0);
#endif

    // A "perfect" implementation would push along normals according to the angle against forward.
    // In practice, just pushing the normal out by halfWidth is sufficient for morph views.
    positionEc2D.xyz += halfWidth * max(0.0, czm_metersPerPixel(positionEc2D)) * normalEC; // prevent artifacts when czm_metersPerPixel is negative (behind camera)

    // Blend for actual position
    gl_Position = czm_projection * mix(positionEc2D, positionEc3D, czm_morphTime);

#ifdef ANGLE_VARYING
    // Approximate relative screen space direction of the line.
    vec2 approxLineDirection = normalize(vec2(v_forwardDirectionEC.x, -v_forwardDirectionEC.y));
    approxLineDirection.y = czm_branchFreeTernary(approxLineDirection.x == 0.0 && approxLineDirection.y == 0.0, -1.0, approxLineDirection.y);
    v_polylineAngle = czm_fastApproximateAtan(approxLineDirection.x, approxLineDirection.y);
#endif
}
`;var PR=`in vec3 position3DHigh;
in vec3 position3DLow;

// In 2D and in 3D, texture coordinate normalization component signs encodes:
// * X sign - sidedness relative to right plane
// * Y sign - is negative OR magnitude is greater than 1.0 if vertex is on bottom of volume
#ifndef COLUMBUS_VIEW_2D
in vec4 startHiAndForwardOffsetX;
in vec4 startLoAndForwardOffsetY;
in vec4 startNormalAndForwardOffsetZ;
in vec4 endNormalAndTextureCoordinateNormalizationX;
in vec4 rightNormalAndTextureCoordinateNormalizationY;
#else
in vec4 startHiLo2D;
in vec4 offsetAndRight2D;
in vec4 startEndNormals2D;
in vec2 texcoordNormalization2D;
#endif

in float batchId;

out vec4 v_startPlaneNormalEcAndHalfWidth;
out vec4 v_endPlaneNormalEcAndBatchId;
out vec4 v_rightPlaneEC;
out vec4 v_endEcAndStartEcX;
out vec4 v_texcoordNormalizationAndStartEcYZ;

// For materials
#ifdef WIDTH_VARYING
out float v_width;
#endif
#ifdef ANGLE_VARYING
out float v_polylineAngle;
#endif

#ifdef PER_INSTANCE_COLOR
out vec4 v_color;
#endif

void main()
{
#ifdef COLUMBUS_VIEW_2D
    vec3 ecStart = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, startHiLo2D.xy), vec3(0.0, startHiLo2D.zw))).xyz;

    vec3 forwardDirectionEC = czm_normal * vec3(0.0, offsetAndRight2D.xy);
    vec3 ecEnd = forwardDirectionEC + ecStart;
    forwardDirectionEC = normalize(forwardDirectionEC);

    // Right plane
    v_rightPlaneEC.xyz = czm_normal * vec3(0.0, offsetAndRight2D.zw);
    v_rightPlaneEC.w = -dot(v_rightPlaneEC.xyz, ecStart);

    // start plane
    vec4 startPlaneEC;
    startPlaneEC.xyz =  czm_normal * vec3(0.0, startEndNormals2D.xy);
    startPlaneEC.w = -dot(startPlaneEC.xyz, ecStart);

    // end plane
    vec4 endPlaneEC;
    endPlaneEC.xyz =  czm_normal * vec3(0.0, startEndNormals2D.zw);
    endPlaneEC.w = -dot(endPlaneEC.xyz, ecEnd);

    v_texcoordNormalizationAndStartEcYZ.x = abs(texcoordNormalization2D.x);
    v_texcoordNormalizationAndStartEcYZ.y = texcoordNormalization2D.y;

#else // COLUMBUS_VIEW_2D
    vec3 ecStart = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(startHiAndForwardOffsetX.xyz, startLoAndForwardOffsetY.xyz)).xyz;
    vec3 offset = czm_normal * vec3(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w);
    vec3 ecEnd = ecStart + offset;

    vec3 forwardDirectionEC = normalize(offset);

    // start plane
    vec4 startPlaneEC;
    startPlaneEC.xyz = czm_normal * startNormalAndForwardOffsetZ.xyz;
    startPlaneEC.w = -dot(startPlaneEC.xyz, ecStart);

    // end plane
    vec4 endPlaneEC;
    endPlaneEC.xyz = czm_normal * endNormalAndTextureCoordinateNormalizationX.xyz;
    endPlaneEC.w = -dot(endPlaneEC.xyz, ecEnd);

    // Right plane
    v_rightPlaneEC.xyz = czm_normal * rightNormalAndTextureCoordinateNormalizationY.xyz;
    v_rightPlaneEC.w = -dot(v_rightPlaneEC.xyz, ecStart);

    v_texcoordNormalizationAndStartEcYZ.x = abs(endNormalAndTextureCoordinateNormalizationX.w);
    v_texcoordNormalizationAndStartEcYZ.y = rightNormalAndTextureCoordinateNormalizationY.w;

#endif // COLUMBUS_VIEW_2D

    v_endEcAndStartEcX.xyz = ecEnd;
    v_endEcAndStartEcX.w = ecStart.x;
    v_texcoordNormalizationAndStartEcYZ.zw = ecStart.yz;

#ifdef PER_INSTANCE_COLOR
    v_color = czm_batchTable_color(batchId);
#endif // PER_INSTANCE_COLOR

    // Compute a normal along which to "push" the position out, extending the miter depending on view distance.
    // Position has already been "pushed" by unit length along miter normal, and miter normals are encoded in the planes.
    // Decode the normal to use at this specific vertex, push the position back, and then push to where it needs to be.
    vec4 positionRelativeToEye = czm_computePosition();

    // Check distance to the end plane and start plane, pick the plane that is closer
    vec4 positionEC = czm_modelViewRelativeToEye * positionRelativeToEye; // w = 1.0, see czm_computePosition
    float absStartPlaneDistance = abs(czm_planeDistance(startPlaneEC, positionEC.xyz));
    float absEndPlaneDistance = abs(czm_planeDistance(endPlaneEC, positionEC.xyz));
    vec3 planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlaneEC.xyz, endPlaneEC.xyz);
    vec3 upOrDown = normalize(cross(v_rightPlaneEC.xyz, planeDirection)); // Points "up" for start plane, "down" at end plane.
    vec3 normalEC = normalize(cross(planeDirection, upOrDown));           // In practice, the opposite seems to work too.

    // Extrude bottom vertices downward for far view distances, like for GroundPrimitives
    upOrDown = cross(forwardDirectionEC, normalEC);
    upOrDown = float(czm_sceneMode == czm_sceneMode3D) * upOrDown;
    upOrDown = float(v_texcoordNormalizationAndStartEcYZ.y > 1.0 || v_texcoordNormalizationAndStartEcYZ.y < 0.0) * upOrDown;
    upOrDown = min(GLOBE_MINIMUM_ALTITUDE, czm_geometricToleranceOverMeter * length(positionRelativeToEye.xyz)) * upOrDown;
    positionEC.xyz += upOrDown;

    v_texcoordNormalizationAndStartEcYZ.y = czm_branchFreeTernary(v_texcoordNormalizationAndStartEcYZ.y > 1.0, 0.0, abs(v_texcoordNormalizationAndStartEcYZ.y));

    // Determine distance along normalEC to push for a volume of appropriate width.
    // Make volumes about double pixel width for a conservative fit - in practice the
    // extra cost here is minimal compared to the loose volume heights.
    //
    // N = normalEC (guaranteed "right-facing")
    // R = rightEC
    // p = angle between N and R
    // w = distance to push along R if R == N
    // d = distance to push along N
    //
    //   N   R
    //  {  p| }      * cos(p) = dot(N, R) = w / d
    //  d  |  |w    * d = w / dot(N, R)
    //    { | }
    //       o---------- polyline segment ---->
    //
    float width = czm_batchTable_width(batchId);
#ifdef WIDTH_VARYING
    v_width = width;
#endif

    v_startPlaneNormalEcAndHalfWidth.xyz = startPlaneEC.xyz;
    v_startPlaneNormalEcAndHalfWidth.w = width * 0.5;

    v_endPlaneNormalEcAndBatchId.xyz = endPlaneEC.xyz;
    v_endPlaneNormalEcAndBatchId.w = batchId;

    width = width * max(0.0, czm_metersPerPixel(positionEC)); // width = distance to push along R
    width = width / dot(normalEC, v_rightPlaneEC.xyz); // width = distance to push along N

    // Determine if this vertex is on the "left" or "right"
#ifdef COLUMBUS_VIEW_2D
        normalEC *= sign(texcoordNormalization2D.x);
#else
        normalEC *= sign(endNormalAndTextureCoordinateNormalizationX.w);
#endif

    positionEC.xyz += width * normalEC;
    gl_Position = czm_depthClamp(czm_projection * positionEC);

#ifdef ANGLE_VARYING
    // Approximate relative screen space direction of the line.
    vec2 approxLineDirection = normalize(vec2(forwardDirectionEC.x, -forwardDirectionEC.y));
    approxLineDirection.y = czm_branchFreeTernary(approxLineDirection.x == 0.0 && approxLineDirection.y == 0.0, -1.0, approxLineDirection.y);
    v_polylineAngle = czm_fastApproximateAtan(approxLineDirection.x, approxLineDirection.y);
#endif
}
`;var KR={TERRAIN:0,CESIUM_3D_TILE:1,BOTH:2};KR.NUMBER_OF_CLASSIFICATION_TYPES=3;var yh=Object.freeze(KR);var dk={FRONT:S.FRONT,BACK:S.BACK,FRONT_AND_BACK:S.FRONT_AND_BACK},MY=Object.freeze(dk);var ha=`in vec4 v_color;

void main()
{
    out_FragColor = czm_gammaCorrect(v_color);
}
`;var qR=`in vec3 position3DHigh;
in vec3 position3DLow;
in vec3 prevPosition3DHigh;
in vec3 prevPosition3DLow;
in vec3 nextPosition3DHigh;
in vec3 nextPosition3DLow;
in vec2 expandAndWidth;
in vec4 color;
in float batchId;

out vec4 v_color;

void main()
{
    float expandDir = expandAndWidth.x;
    float width = abs(expandAndWidth.y) + 0.5;
    bool usePrev = expandAndWidth.y < 0.0;

    vec4 p = czm_computePosition();
    vec4 prev = czm_computePrevPosition();
    vec4 next = czm_computeNextPosition();

    float angle;
    vec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev, angle);
    gl_Position = czm_viewportOrthographic * positionWC;

    v_color = color;
}
`;var Ya=`void clipLineSegmentToNearPlane(
    vec3 p0,
    vec3 p1,
    out vec4 positionWC,
    out bool clipped,
    out bool culledByNearPlane,
    out vec4 clippedPositionEC)
{
    culledByNearPlane = false;
    clipped = false;

    vec3 p0ToP1 = p1 - p0;
    float magnitude = length(p0ToP1);
    vec3 direction = normalize(p0ToP1);

    // Distance that p0 is behind the near plane. Negative means p0 is
    // in front of the near plane.
    float endPoint0Distance =  czm_currentFrustum.x + p0.z;

    // Camera looks down -Z.
    // When moving a point along +Z: LESS VISIBLE
    //   * Points in front of the camera move closer to the camera.
    //   * Points behind the camrea move farther away from the camera.
    // When moving a point along -Z: MORE VISIBLE
    //   * Points in front of the camera move farther away from the camera.
    //   * Points behind the camera move closer to the camera.

    // Positive denominator: -Z, becoming more visible
    // Negative denominator: +Z, becoming less visible
    // Nearly zero: parallel to near plane
    float denominator = -direction.z;

    if (endPoint0Distance > 0.0 && abs(denominator) < czm_epsilon7)
    {
        // p0 is behind the near plane and the line to p1 is nearly parallel to
        // the near plane, so cull the segment completely.
        culledByNearPlane = true;
    }
    else if (endPoint0Distance > 0.0)
    {
        // p0 is behind the near plane, and the line to p1 is moving distinctly
        // toward or away from it.

        // t = (-plane distance - dot(plane normal, ray origin)) / dot(plane normal, ray direction)
        float t = endPoint0Distance / denominator;
        if (t < 0.0 || t > magnitude)
        {
            // Near plane intersection is not between the two points.
            // We already confirmed p0 is behind the naer plane, so now
            // we know the entire segment is behind it.
            culledByNearPlane = true;
        }
        else
        {
            // Segment crosses the near plane, update p0 to lie exactly on it.
            p0 = p0 + t * direction;

            // Numerical noise might put us a bit on the wrong side of the near plane.
            // Don't let that happen.
            p0.z = min(p0.z, -czm_currentFrustum.x);

            clipped = true;
        }
    }

    clippedPositionEC = vec4(p0, 1.0);
    positionWC = czm_eyeToWindowCoordinates(clippedPositionEC);
}

vec4 getPolylineWindowCoordinatesEC(vec4 positionEC, vec4 prevEC, vec4 nextEC, float expandDirection, float width, bool usePrevious, out float angle)
{
    // expandDirection +1 is to the _left_ when looking from positionEC toward nextEC.

#ifdef POLYLINE_DASH
    // Compute the window coordinates of the points.
    vec4 positionWindow = czm_eyeToWindowCoordinates(positionEC);
    vec4 previousWindow = czm_eyeToWindowCoordinates(prevEC);
    vec4 nextWindow = czm_eyeToWindowCoordinates(nextEC);

    // Determine the relative screen space direction of the line.
    vec2 lineDir;
    if (usePrevious) {
        lineDir = normalize(positionWindow.xy - previousWindow.xy);
    }
    else {
        lineDir = normalize(nextWindow.xy - positionWindow.xy);
    }
    angle = atan(lineDir.x, lineDir.y) - 1.570796327; // precomputed atan(1,0)

    // Quantize the angle so it doesn't change rapidly between segments.
    angle = floor(angle / czm_piOverFour + 0.5) * czm_piOverFour;
#endif

    vec4 clippedPrevWC, clippedPrevEC;
    bool prevSegmentClipped, prevSegmentCulled;
    clipLineSegmentToNearPlane(prevEC.xyz, positionEC.xyz, clippedPrevWC, prevSegmentClipped, prevSegmentCulled, clippedPrevEC);

    vec4 clippedNextWC, clippedNextEC;
    bool nextSegmentClipped, nextSegmentCulled;
    clipLineSegmentToNearPlane(nextEC.xyz, positionEC.xyz, clippedNextWC, nextSegmentClipped, nextSegmentCulled, clippedNextEC);

    bool segmentClipped, segmentCulled;
    vec4 clippedPositionWC, clippedPositionEC;
    clipLineSegmentToNearPlane(positionEC.xyz, usePrevious ? prevEC.xyz : nextEC.xyz, clippedPositionWC, segmentClipped, segmentCulled, clippedPositionEC);

    if (segmentCulled)
    {
        return vec4(0.0, 0.0, 0.0, 1.0);
    }

    vec2 directionToPrevWC = normalize(clippedPrevWC.xy - clippedPositionWC.xy);
    vec2 directionToNextWC = normalize(clippedNextWC.xy - clippedPositionWC.xy);

    // If a segment was culled, we can't use the corresponding direction
    // computed above. We should never see both of these be true without
    // \`segmentCulled\` above also being true.
    if (prevSegmentCulled)
    {
        directionToPrevWC = -directionToNextWC;
    }
    else if (nextSegmentCulled)
    {
        directionToNextWC = -directionToPrevWC;
    }

    vec2 thisSegmentForwardWC, otherSegmentForwardWC;
    if (usePrevious)
    {
        thisSegmentForwardWC = -directionToPrevWC;
        otherSegmentForwardWC = directionToNextWC;
    }
    else
    {
        thisSegmentForwardWC = directionToNextWC;
        otherSegmentForwardWC =  -directionToPrevWC;
    }

    vec2 thisSegmentLeftWC = vec2(-thisSegmentForwardWC.y, thisSegmentForwardWC.x);

    vec2 leftWC = thisSegmentLeftWC;
    float expandWidth = width * 0.5;

    // When lines are split at the anti-meridian, the position may be at the
    // same location as the next or previous position, and we need to handle
    // that to avoid producing NaNs.
    if (!czm_equalsEpsilon(prevEC.xyz - positionEC.xyz, vec3(0.0), czm_epsilon1) && !czm_equalsEpsilon(nextEC.xyz - positionEC.xyz, vec3(0.0), czm_epsilon1))
    {
        vec2 otherSegmentLeftWC = vec2(-otherSegmentForwardWC.y, otherSegmentForwardWC.x);

        vec2 leftSumWC = thisSegmentLeftWC + otherSegmentLeftWC;
        float leftSumLength = length(leftSumWC);
        leftWC = leftSumLength < czm_epsilon6 ? thisSegmentLeftWC : (leftSumWC / leftSumLength);

        // The sine of the angle between the two vectors is given by the formula
        //         |a x b| = |a||b|sin(theta)
        // which is
        //     float sinAngle = length(cross(vec3(leftWC, 0.0), vec3(-thisSegmentForwardWC, 0.0)));
        // Because the z components of both vectors are zero, the x and y coordinate will be zero.
        // Therefore, the sine of the angle is just the z component of the cross product.
        vec2 u = -thisSegmentForwardWC;
        vec2 v = leftWC;
        float sinAngle = abs(u.x * v.y - u.y * v.x);
        expandWidth = clamp(expandWidth / sinAngle, 0.0, width * 2.0);
    }

    vec2 offset = leftWC * expandDirection * expandWidth * czm_pixelRatio;
    return vec4(clippedPositionWC.xy + offset, -clippedPositionWC.z, 1.0) * (czm_projection * clippedPositionEC).w;
}

vec4 getPolylineWindowCoordinates(vec4 position, vec4 previous, vec4 next, float expandDirection, float width, bool usePrevious, out float angle)
{
    vec4 positionEC = czm_modelViewRelativeToEye * position;
    vec4 prevEC = czm_modelViewRelativeToEye * previous;
    vec4 nextEC = czm_modelViewRelativeToEye * next;
    return getPolylineWindowCoordinatesEC(positionEC, prevEC, nextEC, expandDirection, width, usePrevious, angle);
}
`;function vn(Z){Z=l(Z,l.EMPTY_OBJECT),this.material=Z.material,this.translucent=l(Z.translucent,!0),this._vertexShaderSource=Z.vertexShaderSource,this._fragmentShaderSource=Z.fragmentShaderSource,this._renderState=Z.renderState,this._closed=l(Z.closed,!1)}Object.defineProperties(vn.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}}});vn.prototype.getFragmentShaderSource=function(){let Z=[];return this.flat&&Z.push("#define FLAT"),this.faceForward&&Z.push("#define FACE_FORWARD"),V(this.material)&&Z.push(this.material.shaderSource),Z.push(this.fragmentShaderSource),Z.join(`
`)};vn.prototype.isTranslucent=function(){return V(this.material)&&this.material.isTranslucent()||!V(this.material)&&this.translucent};vn.prototype.getRenderState=function(){let Z=this.isTranslucent(),m=Ph(this.renderState,!1);return Z?(m.depthMask=!1,m.blending=fh.ALPHA_BLEND):m.depthMask=!0,m};vn.getDefaultRenderState=function(Z,m,h){let n={depthTest:{enabled:!0}};return Z&&(n.depthMask=!1,n.blending=fh.ALPHA_BLEND),m&&(n.cull={enabled:!0,face:MY.BACK}),V(h)&&(n=Kh(h,n,!0)),n};var sh=vn;var Et=`${Ya}
${qR}`,sk=ha;CY.isInternetExplorer()||(Et=`#define CLIP_POLYLINE 
${Et}`);function Cn(Z){Z=l(Z,l.EMPTY_OBJECT);let m=l(Z.translucent,!0),h=!1,n=Cn.VERTEX_FORMAT;this.material=void 0,this.translucent=m,this._vertexShaderSource=l(Z.vertexShaderSource,Et),this._fragmentShaderSource=l(Z.fragmentShaderSource,sk),this._renderState=sh.getDefaultRenderState(m,h,Z.renderState),this._closed=h,this._vertexFormat=n}Object.defineProperties(Cn.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}}});Cn.VERTEX_FORMAT=rn.POSITION_ONLY;Cn.prototype.getFragmentShaderSource=sh.prototype.getFragmentShaderSource;Cn.prototype.isTranslucent=sh.prototype.isTranslucent;Cn.prototype.getRenderState=sh.prototype.getRenderState;var kt=Cn;var $R=`in vec3 position3DHigh;
in vec3 position3DLow;
in vec3 prevPosition3DHigh;
in vec3 prevPosition3DLow;
in vec3 nextPosition3DHigh;
in vec3 nextPosition3DLow;
in vec2 expandAndWidth;
in vec2 st;
in float batchId;

out float v_width;
out vec2 v_st;
out float v_polylineAngle;

void main()
{
    float expandDir = expandAndWidth.x;
    float width = abs(expandAndWidth.y) + 0.5;
    bool usePrev = expandAndWidth.y < 0.0;

    vec4 p = czm_computePosition();
    vec4 prev = czm_computePrevPosition();
    vec4 next = czm_computeNextPosition();

    float angle;
    vec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev, angle);
    gl_Position = czm_viewportOrthographic * positionWC;

    v_width = width;
    v_st.s = st.s;
    v_st.t = czm_writeNonPerspective(st.t, gl_Position.w);
    v_polylineAngle = angle;
}
`;var ZG=`#ifdef VECTOR_TILE
uniform vec4 u_highlightColor;
#endif

in vec2 v_st;

void main()
{
    czm_materialInput materialInput;

    vec2 st = v_st;
    st.t = czm_readNonPerspective(st.t, gl_FragCoord.w);

    materialInput.s = st.s;
    materialInput.st = st;
    materialInput.str = vec3(st, 0.0);

    czm_material material = czm_getMaterial(materialInput);
    out_FragColor = vec4(material.diffuse + material.emission, material.alpha);
#ifdef VECTOR_TILE
    out_FragColor *= u_highlightColor;
#endif

    czm_writeLogDepth();
}
`;function Pn(Z,m,h,n,i){this._format=Z,this._datatype=m,this._width=h,this._height=n,this._buffer=i}Object.defineProperties(Pn.prototype,{internalFormat:{get:function(){return this._format}},pixelDatatype:{get:function(){return this._datatype}},width:{get:function(){return this._width}},height:{get:function(){return this._height}},bufferView:{get:function(){return this._buffer}}});Pn.clone=function(Z){if(V(Z))return new Pn(Z._format,Z._datatype,Z._width,Z._height,Z._buffer)};Pn.prototype.clone=function(){return Pn.clone(this)};var mG=Pn;var hG=ba(Sr(),1);function YG(){if(!V(Wh._canTransferArrayBuffer)){let Z=Qt("transferTypedArrayTest");Z.postMessage=l(Z.webkitPostMessage,Z.postMessage);let m=99,h=new Int8Array([m]);try{Z.postMessage({array:h},[h.buffer])}catch{return Wh._canTransferArrayBuffer=!1,Wh._canTransferArrayBuffer}Wh._canTransferArrayBuffer=new Promise(n=>{Z.onmessage=function(i){let A=i.data.array,t=V(A)&&A[0]===m;n(t),Z.terminate(),Wh._canTransferArrayBuffer=t}})}return Wh._canTransferArrayBuffer}var Jt=new sZ;function Ut(Z){let m;try{m=new Blob([Z],{type:"application/javascript"})}catch{let i=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,A=new i;A.append(Z),m=A.getBlob("application/javascript")}return(window.URL||window.webkitURL).createObjectURL(m)}function Qt(Z){let m=new hG.default(Z),h=m.scheme().length!==0&&m.fragment().length===0,n={},i;if(_W(Z)){let t=`importScripts("${Z}");`;return i=Ut(t),new Worker(i,n)}let A=Z.replace(/\.js$/,"");if(!h&&typeof CESIUM_WORKERS<"u"){let t=`
      importScripts("${Ut(CESIUM_WORKERS)}");
      CesiumWorkers["${A}"]();
    `;return i=Ut(t),new Worker(i,n)}if(i=Z,h||(i=ki(`${Wh._workerModulePrefix+A}.js`)),!CY.supportsEsmWebWorkers())throw new Sm("This browser is not supported. Please update your browser to continue.");return n.type="module",new Worker(i,n)}async function rk(Z,m){let h={modulePath:void 0,wasmBinaryFile:void 0,wasmBinary:void 0};if(!CY.supportsWebAssembly()){if(!V(m.fallbackModulePath))throw new Sm(`This browser does not support Web Assembly, and no backup module was provided for ${Z._workerPath}`);return h.modulePath=ki(m.fallbackModulePath),h}h.wasmBinaryFile=ki(m.wasmBinaryFile);let n=await Dm.fetchArrayBuffer({url:h.wasmBinaryFile});return h.wasmBinary=n,h}function Wh(Z,m){this._workerPath=Z,this._maximumActiveTasks=l(m,Number.POSITIVE_INFINITY),this._activeTasks=0,this._nextID=0,this._webAssemblyPromise=void 0}var Nk=(Z,m,h,n)=>{let i=({data:A})=>{if(A.id===m){if(V(A.error)){let t=A.error;t.name==="RuntimeError"?(t=new Sm(A.error.message),t.stack=A.error.stack):t.name==="DeveloperError"?(t=new U(A.error.message),t.stack=A.error.stack):t.name==="Error"&&(t=new Error(A.error.message),t.stack=A.error.stack),Jt.raiseEvent(t),n(t)}else Jt.raiseEvent(),h(A.result);Z.removeEventListener("message",i)}};return i},Ek=[];async function kk(Z,m,h){let n=await Promise.resolve(YG());V(h)?n||(h.length=0):h=Ek;let i=Z._nextID++,A=new Promise((t,W)=>{Z._worker.addEventListener("message",Nk(Z._worker,i,t,W))});return Z._worker.postMessage({id:i,baseUrl:ki.getCesiumBaseUrl().url,parameters:m,canTransferArrayBuffer:n},h),A}async function Uk(Z,m,h){++Z._activeTasks;try{let n=await kk(Z,m,h);return--Z._activeTasks,n}catch(n){throw--Z._activeTasks,n}}Wh.prototype.scheduleTask=function(Z,m){if(V(this._worker)||(this._worker=Qt(this._workerPath)),!(this._activeTasks>=this._maximumActiveTasks))return Uk(this,Z,m)};Wh.prototype.initWebAssemblyModule=async function(Z){if(V(this._webAssemblyPromise))return this._webAssemblyPromise;let m=async()=>{let h=this._worker=Qt(this._workerPath),n=await rk(this,Z),i=await Promise.resolve(YG()),A,t=n.wasmBinary;V(t)&&i&&(A=[t]);let W=new Promise((e,G)=>{h.onmessage=function({data:F}){V(F)?e(F.result):G(new Sm("Could not configure wasm module"))}});return h.postMessage({canTransferArrayBuffer:i,parameters:{webAssemblyConfig:n}},A),W};return this._webAssemblyPromise=m(),this._webAssemblyPromise};Wh.prototype.isDestroyed=function(){return!1};Wh.prototype.destroy=function(){return V(this._worker)&&this._worker.terminate(),cZ(this)};Wh.taskCompletedEvent=Jt;Wh._defaultWorkerModulePrefix="Workers/";Wh._workerModulePrefix=Wh._defaultWorkerModulePrefix;Wh._canTransferArrayBuffer=void 0;var $Y=Wh;function SY(){}SY._transcodeTaskProcessor=new $Y("transcodeKTX2",Number.POSITIVE_INFINITY);SY._readyPromise=void 0;function Jk(){let Z=SY._transcodeTaskProcessor.initWebAssemblyModule({wasmBinaryFile:"ThirdParty/basis_transcoder.wasm"}).then(function(m){if(m)return SY._transcodeTaskProcessor;throw new Sm("KTX2 transcoder could not be initialized.")});SY._readyPromise=Z}SY.transcode=function(Z,m){return y.defined("supportedTargetFormats",m),V(SY._readyPromise)||Jk(),SY._readyPromise.then(function(h){let n;if(Z instanceof ArrayBuffer){let i=new Uint8Array(Z);return n={supportedTargetFormats:m,ktx2Buffer:i},h.scheduleTask(n,[Z])}return n={supportedTargetFormats:m,ktx2Buffer:Z},h.scheduleTask(n,[Z.buffer])}).then(function(h){let n=h.length,i=Object.keys(h[0]),A=i.length,t;for(t=0;t<n;t++){let W=h[t];for(let e=0;e<A;e++){let G=W[i[e]];W[i[e]]=new mG(G.internalFormat,G.datatype,G.width,G.height,G.levelBuffer)}}if(A===1){for(t=0;t<n;++t)h[t]=h[t][i[0]];n===1&&(h=h[0])}return h}).catch(function(h){throw h})};var nG=SY;var iG;AG.setKTX2SupportedFormats=function(Z,m,h,n,i,A){iG={s3tc:Z,pvrtc:m,astc:h,etc:n,etc1:i,bc7:A}};function AG(Z){y.defined("resourceOrUrlOrBuffer",Z);let m;return Z instanceof ArrayBuffer||ArrayBuffer.isView(Z)?m=Promise.resolve(Z):m=Dm.createIfNeeded(Z).fetchArrayBuffer(),m.then(function(h){return nG.transcode(h,iG)})}var aG=AG;function na(Z,m,h,n,i,A,t,W,e,G,F){this._context=Z,this._texture=m,this._textureTarget=h,this._targetFace=n,this._pixelDatatype=t,this._internalFormat=i,this._pixelFormat=A,this._size=W,this._preMultiplyAlpha=e,this._flipY=G,this._initialized=F}Object.defineProperties(na.prototype,{pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},_target:{get:function(){return this._targetFace}}});na.prototype.copyFrom=function(Z){y.defined("options",Z);let m=l(Z.xOffset,0),h=l(Z.yOffset,0);if(y.defined("options.source",Z.source),y.typeOf.number.greaterThanOrEquals("xOffset",m,0),y.typeOf.number.greaterThanOrEquals("yOffset",h,0),m+Z.source.width>this._size)throw new U("xOffset + options.source.width must be less than or equal to width.");if(h+Z.source.height>this._size)throw new U("yOffset + options.source.height must be less than or equal to height.");let n=Z.source,i=this._context._gl,A=this._textureTarget,t=this._targetFace;i.activeTexture(i.TEXTURE0),i.bindTexture(A,this._texture);let W=n.width,e=n.height,G=n.arrayBufferView,F=this._size,d=this._pixelFormat,J=this._internalFormat,k=this._pixelDatatype,r=this._preMultiplyAlpha,Q=this._flipY,p=l(Z.skipColorSpaceConversion,!1),T=4;V(G)&&(T=JZ.alignmentInBytes(d,k,W)),i.pixelStorei(i.UNPACK_ALIGNMENT,T),p?i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,i.NONE):i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,i.BROWSER_DEFAULT_WEBGL);let I=!1;if(!this._initialized){if(m===0&&h===0&&W===F&&e===F)V(G)?(i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),Q&&(G=JZ.flipY(G,d,k,F,F)),i.texImage2D(t,0,J,F,F,0,d,QZ.toWebGLConstant(k,this._context),G)):(i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,Q),i.texImage2D(t,0,J,d,QZ.toWebGLConstant(k,this._context),n)),I=!0;else{i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1);let f=JZ.createTypedArray(d,k,F,F);i.texImage2D(t,0,J,F,F,0,d,QZ.toWebGLConstant(k,this._context),f)}this._initialized=!0}I||(V(G)?(i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),Q&&(G=JZ.flipY(G,d,k,W,e)),i.texSubImage2D(t,0,m,h,W,e,d,QZ.toWebGLConstant(k,this._context),G)):(i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,Q),i.texSubImage2D(t,0,m,h,d,QZ.toWebGLConstant(k,this._context),n))),i.bindTexture(A,null)};na.prototype.copyFromFramebuffer=function(Z,m,h,n,i,A){if(Z=l(Z,0),m=l(m,0),h=l(h,0),n=l(n,0),i=l(i,this._size),A=l(A,this._size),y.typeOf.number.greaterThanOrEquals("xOffset",Z,0),y.typeOf.number.greaterThanOrEquals("yOffset",m,0),y.typeOf.number.greaterThanOrEquals("framebufferXOffset",h,0),y.typeOf.number.greaterThanOrEquals("framebufferYOffset",n,0),Z+i>this._size)throw new U("xOffset + source.width must be less than or equal to width.");if(m+A>this._size)throw new U("yOffset + source.height must be less than or equal to height.");if(this._pixelDatatype===QZ.FLOAT)throw new U("Cannot call copyFromFramebuffer when the texture pixel data type is FLOAT.");if(this._pixelDatatype===QZ.HALF_FLOAT)throw new U("Cannot call copyFromFramebuffer when the texture pixel data type is HALF_FLOAT.");let t=this._context._gl,W=this._textureTarget;t.activeTexture(t.TEXTURE0),t.bindTexture(W,this._texture),t.copyTexSubImage2D(this._targetFace,0,Z,m,h,n,i,A),t.bindTexture(W,null),this._initialized=!0};var Bn=na;function _i(Z){Z=l(Z,l.EMPTY_OBJECT),y.defined("options.context",Z.context);let m=Z.context,h=Z.source,n,i;if(V(h)){let I=[h.positiveX,h.negativeX,h.positiveY,h.negativeY,h.positiveZ,h.negativeZ];if(!I[0]||!I[1]||!I[2]||!I[3]||!I[4]||!I[5])throw new U("options.source requires positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ faces.");n=I[0].width,i=I[0].height;for(let f=1;f<6;++f)if(Number(I[f].width)!==n||Number(I[f].height)!==i)throw new U("Each face in options.source must have the same width and height.")}else n=Z.width,i=Z.height;let A=n,t=l(Z.pixelDatatype,QZ.UNSIGNED_BYTE),W=l(Z.pixelFormat,JZ.RGBA),e=JZ.toInternalFormat(W,t,m);if(!V(n)||!V(i))throw new U("options requires a source field to create an initialized cube map or width and height fields to create a blank cube map.");if(n!==i)throw new U("Width must equal height.");if(A<=0)throw new U("Width and height must be greater than zero.");if(A>$Z.maximumCubeMapSize)throw new U(`Width and height must be less than or equal to the maximum cube map size (${$Z.maximumCubeMapSize}).  Check maximumCubeMapSize.`);if(!JZ.validate(W))throw new U("Invalid options.pixelFormat.");if(JZ.isDepthFormat(W))throw new U("options.pixelFormat cannot be DEPTH_COMPONENT or DEPTH_STENCIL.");if(!QZ.validate(t))throw new U("Invalid options.pixelDatatype.");if(t===QZ.FLOAT&&!m.floatingPointTexture)throw new U("When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.");if(t===QZ.HALF_FLOAT&&!m.halfFloatingPointTexture)throw new U("When options.pixelDatatype is HALF_FLOAT, this WebGL implementation must support the OES_texture_half_float extension.");let G=JZ.textureSizeInBytes(W,t,A,A)*6,F=Z.preMultiplyAlpha||W===JZ.RGB||W===JZ.LUMINANCE,d=l(Z.flipY,!0),J=l(Z.skipColorSpaceConversion,!1),k=m._gl,r=k.TEXTURE_CUBE_MAP,Q=k.createTexture();k.activeTexture(k.TEXTURE0),k.bindTexture(r,Q);function p(I,f,b,O,v){let hZ=f.arrayBufferView;V(hZ)||(hZ=f.bufferView);let K=4;V(hZ)&&(K=JZ.alignmentInBytes(W,t,n)),k.pixelStorei(k.UNPACK_ALIGNMENT,K),v?k.pixelStorei(k.UNPACK_COLORSPACE_CONVERSION_WEBGL,k.NONE):k.pixelStorei(k.UNPACK_COLORSPACE_CONVERSION_WEBGL,k.BROWSER_DEFAULT_WEBGL),V(hZ)?(k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,!1),O&&(hZ=JZ.flipY(hZ,W,t,A,A)),k.texImage2D(I,0,e,A,A,0,W,QZ.toWebGLConstant(t,m),hZ)):(k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,b),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,O),k.texImage2D(I,0,e,W,QZ.toWebGLConstant(t,m),f))}V(h)?(p(k.TEXTURE_CUBE_MAP_POSITIVE_X,h.positiveX,F,d,J),p(k.TEXTURE_CUBE_MAP_NEGATIVE_X,h.negativeX,F,d,J),p(k.TEXTURE_CUBE_MAP_POSITIVE_Y,h.positiveY,F,d,J),p(k.TEXTURE_CUBE_MAP_NEGATIVE_Y,h.negativeY,F,d,J),p(k.TEXTURE_CUBE_MAP_POSITIVE_Z,h.positiveZ,F,d,J),p(k.TEXTURE_CUBE_MAP_NEGATIVE_Z,h.negativeZ,F,d,J)):(k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X,0,e,A,A,0,W,QZ.toWebGLConstant(t,m),null),k.texImage2D(k.TEXTURE_CUBE_MAP_NEGATIVE_X,0,e,A,A,0,W,QZ.toWebGLConstant(t,m),null),k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_Y,0,e,A,A,0,W,QZ.toWebGLConstant(t,m),null),k.texImage2D(k.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,e,A,A,0,W,QZ.toWebGLConstant(t,m),null),k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_Z,0,e,A,A,0,W,QZ.toWebGLConstant(t,m),null),k.texImage2D(k.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,e,A,A,0,W,QZ.toWebGLConstant(t,m),null)),k.bindTexture(r,null),this._context=m,this._textureFilterAnisotropic=m._textureFilterAnisotropic,this._textureTarget=r,this._texture=Q,this._pixelFormat=W,this._pixelDatatype=t,this._size=A,this._hasMipmap=!1,this._sizeInBytes=G,this._preMultiplyAlpha=F,this._flipY=d,this._sampler=void 0;let T=V(h);this._positiveX=new Bn(m,Q,r,k.TEXTURE_CUBE_MAP_POSITIVE_X,e,W,t,A,F,d,T),this._negativeX=new Bn(m,Q,r,k.TEXTURE_CUBE_MAP_NEGATIVE_X,e,W,t,A,F,d,T),this._positiveY=new Bn(m,Q,r,k.TEXTURE_CUBE_MAP_POSITIVE_Y,e,W,t,A,F,d,T),this._negativeY=new Bn(m,Q,r,k.TEXTURE_CUBE_MAP_NEGATIVE_Y,e,W,t,A,F,d,T),this._positiveZ=new Bn(m,Q,r,k.TEXTURE_CUBE_MAP_POSITIVE_Z,e,W,t,A,F,d,T),this._negativeZ=new Bn(m,Q,r,k.TEXTURE_CUBE_MAP_NEGATIVE_Z,e,W,t,A,F,d,T),this.sampler=V(Z.sampler)?Z.sampler:new sY}Object.defineProperties(_i.prototype,{positiveX:{get:function(){return this._positiveX}},negativeX:{get:function(){return this._negativeX}},positiveY:{get:function(){return this._positiveY}},negativeY:{get:function(){return this._negativeY}},positiveZ:{get:function(){return this._positiveZ}},negativeZ:{get:function(){return this._negativeZ}},sampler:{get:function(){return this._sampler},set:function(Z){let m=Z.minificationFilter,h=Z.magnificationFilter,n=m===um.NEAREST_MIPMAP_NEAREST||m===um.NEAREST_MIPMAP_LINEAR||m===um.LINEAR_MIPMAP_NEAREST||m===um.LINEAR_MIPMAP_LINEAR,i=this._context,A=this._pixelDatatype;(A===QZ.FLOAT&&!i.textureFloatLinear||A===QZ.HALF_FLOAT&&!i.textureHalfFloatLinear)&&(m=n?um.NEAREST_MIPMAP_NEAREST:um.NEAREST,h=mY.NEAREST);let t=i._gl,W=this._textureTarget;t.activeTexture(t.TEXTURE0),t.bindTexture(W,this._texture),t.texParameteri(W,t.TEXTURE_MIN_FILTER,m),t.texParameteri(W,t.TEXTURE_MAG_FILTER,h),t.texParameteri(W,t.TEXTURE_WRAP_S,Z.wrapS),t.texParameteri(W,t.TEXTURE_WRAP_T,Z.wrapT),V(this._textureFilterAnisotropic)&&t.texParameteri(W,this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,Z.maximumAnisotropy),t.bindTexture(W,null),this._sampler=Z}},pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},width:{get:function(){return this._size}},height:{get:function(){return this._size}},sizeInBytes:{get:function(){return this._hasMipmap?Math.floor(this._sizeInBytes*4/3):this._sizeInBytes}},preMultiplyAlpha:{get:function(){return this._preMultiplyAlpha}},flipY:{get:function(){return this._flipY}},_target:{get:function(){return this._textureTarget}}});_i.prototype.generateMipmap=function(Z){if(Z=l(Z,Hn.DONT_CARE),this._size>1&&!gZ.isPowerOfTwo(this._size))throw new U("width and height must be a power of two to call generateMipmap().");if(!Hn.validate(Z))throw new U("hint is invalid.");this._hasMipmap=!0;let m=this._context._gl,h=this._textureTarget;m.hint(m.GENERATE_MIPMAP_HINT,Z),m.activeTexture(m.TEXTURE0),m.bindTexture(h,this._texture),m.generateMipmap(h),m.bindTexture(h,null)};_i.prototype.isDestroyed=function(){return!1};_i.prototype.destroy=function(){return this._context._gl.deleteTexture(this._texture),this._positiveX=cZ(this._positiveX),this._negativeX=cZ(this._negativeX),this._positiveY=cZ(this._positiveY),this._negativeY=cZ(this._negativeY),this._positiveZ=cZ(this._positiveZ),this._negativeZ=cZ(this._negativeZ),cZ(this)};var Ct=_i;var tG=`uniform sampler2D image;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);
    vec4 rampColor = texture(image, vec2(materialInput.aspect / (2.0 * czm_pi), 0.5));
    rampColor = czm_gammaCorrect(rampColor);
    material.diffuse = rampColor.rgb;
    material.alpha = rampColor.a;
    return material;
}
`;var WG=`uniform sampler2D image;
uniform float strength;
uniform vec2 repeat;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    vec2 st = materialInput.st;

    vec2 centerPixel = fract(repeat * st);
    float centerBump = texture(image, centerPixel).channel;

    float imageWidth = float(imageDimensions.x);
    vec2 rightPixel = fract(repeat * (st + vec2(1.0 / imageWidth, 0.0)));
    float rightBump = texture(image, rightPixel).channel;

    float imageHeight = float(imageDimensions.y);
    vec2 leftPixel = fract(repeat * (st + vec2(0.0, 1.0 / imageHeight)));
    float topBump = texture(image, leftPixel).channel;

    vec3 normalTangentSpace = normalize(vec3(centerBump - rightBump, centerBump - topBump, clamp(1.0 - strength, 0.1, 1.0)));
    vec3 normalEC = materialInput.tangentToEyeMatrix * normalTangentSpace;

    material.normal = normalEC;
    material.diffuse = vec3(0.01);

    return material;
}
`;var eG=`uniform vec4 lightColor;
uniform vec4 darkColor;
uniform vec2 repeat;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    vec2 st = materialInput.st;

    // From Stefan Gustavson's Procedural Textures in GLSL in OpenGL Insights
    float b = mod(floor(repeat.s * st.s) + floor(repeat.t * st.t), 2.0);  // 0.0 or 1.0

    // Find the distance from the closest separator (region between two colors)
    float scaledWidth = fract(repeat.s * st.s);
    scaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));
    float scaledHeight = fract(repeat.t * st.t);
    scaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));
    float value = min(scaledWidth, scaledHeight);

    vec4 currentColor = mix(lightColor, darkColor, b);
    vec4 color = czm_antialias(lightColor, darkColor, currentColor, value, 0.03);

    color = czm_gammaCorrect(color);
    material.diffuse = color.rgb;
    material.alpha = color.a;

    return material;
}
`;var oG=`uniform vec4 lightColor;
uniform vec4 darkColor;
uniform vec2 repeat;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    // From Stefan Gustavson's Procedural Textures in GLSL in OpenGL Insights
    float b = smoothstep(0.3, 0.32, length(fract(repeat * materialInput.st) - 0.5));  // 0.0 or 1.0

    vec4 color = mix(lightColor, darkColor, b);
    color = czm_gammaCorrect(color);
    material.diffuse = color.rgb;
    material.alpha = color.a;

    return material;
}
`;var VG=`uniform sampler2D heights;
uniform sampler2D colors;

// This material expects heights to be sorted from lowest to highest.

float getHeight(int idx, float invTexSize)
{
    vec2 uv = vec2((float(idx) + 0.5) * invTexSize, 0.5);
#ifdef OES_texture_float
    return texture(heights, uv).x;
#else
    return czm_unpackFloat(texture(heights, uv));
#endif
}

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    float height = materialInput.height;
    float invTexSize = 1.0 / float(heightsDimensions.x);

    float minHeight = getHeight(0, invTexSize);
    float maxHeight = getHeight(heightsDimensions.x - 1, invTexSize);

    // early-out when outside the height range
    if (height < minHeight || height > maxHeight) {
        material.diffuse = vec3(0.0);
        material.alpha = 0.0;
        return material;
    }

    // Binary search to find heights above and below.
    int idxBelow = 0;
    int idxAbove = heightsDimensions.x;
    float heightBelow = minHeight;
    float heightAbove = maxHeight;

    // while loop not allowed, so use for loop with max iterations.
    // maxIterations of 16 supports a texture size up to 65536 (2^16).
    const int maxIterations = 16;
    for (int i = 0; i < maxIterations; i++) {
        if (idxBelow >= idxAbove - 1) {
            break;
        }

        int idxMid = (idxBelow + idxAbove) / 2;
        float heightTex = getHeight(idxMid, invTexSize);

        if (height > heightTex) {
            idxBelow = idxMid;
            heightBelow = heightTex;
        } else {
            idxAbove = idxMid;
            heightAbove = heightTex;
        }
    }

    float lerper = heightBelow == heightAbove ? 1.0 : (height - heightBelow) / (heightAbove - heightBelow);
    vec2 colorUv = vec2(invTexSize * (float(idxBelow) + 0.5 + lerper), 0.5);
    vec4 color = texture(colors, colorUv);

    // undo preumultiplied alpha
    if (color.a > 0.0) 
    {
        color.rgb /= color.a;
    }
    
    color.rgb = czm_gammaCorrect(color.rgb);

    material.diffuse = color.rgb;
    material.alpha = color.a;
    return material;
}
`;var lG=`uniform vec4 color;
uniform float spacing;
uniform float width;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    float distanceToContour = mod(materialInput.height, spacing);

#if (__VERSION__ == 300 || defined(GL_OES_standard_derivatives))
    float dxc = abs(dFdx(materialInput.height));
    float dyc = abs(dFdy(materialInput.height));
    float dF = max(dxc, dyc) * czm_pixelRatio * width;
    float alpha = (distanceToContour < dF) ? 1.0 : 0.0;
#else
    // If no derivatives available (IE 10?), use pixel ratio
    float alpha = (distanceToContour < (czm_pixelRatio * width)) ? 1.0 : 0.0;
#endif

    vec4 outColor = czm_gammaCorrect(vec4(color.rgb, alpha * color.a));
    material.diffuse = outColor.rgb;
    material.alpha = outColor.a;

    return material;
}
`;var RG=`uniform sampler2D image;
uniform float minimumHeight;
uniform float maximumHeight;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);
    float scaledHeight = clamp((materialInput.height - minimumHeight) / (maximumHeight - minimumHeight), 0.0, 1.0);
    vec4 rampColor = texture(image, vec2(scaledHeight, 0.5));
    rampColor = czm_gammaCorrect(rampColor);
    material.diffuse = rampColor.rgb;
    material.alpha = rampColor.a;
    return material;
}
`;var GG=`uniform vec4 fadeInColor;
uniform vec4 fadeOutColor;
uniform float maximumDistance;
uniform bool repeat;
uniform vec2 fadeDirection;
uniform vec2 time;

float getTime(float t, float coord)
{
    float scalar = 1.0 / maximumDistance;
    float q  = distance(t, coord) * scalar;
    if (repeat)
    {
        float r = distance(t, coord + 1.0) * scalar;
        float s = distance(t, coord - 1.0) * scalar;
        q = min(min(r, s), q);
    }
    return clamp(q, 0.0, 1.0);
}

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    vec2 st = materialInput.st;
    float s = getTime(time.x, st.s) * fadeDirection.s;
    float t = getTime(time.y, st.t) * fadeDirection.t;

    float u = length(vec2(s, t));
    vec4 color = mix(fadeInColor, fadeOutColor, u);

    color = czm_gammaCorrect(color);
    material.emission = color.rgb;
    material.alpha = color.a;

    return material;
}
`;var FG=`uniform vec4 color;
uniform float cellAlpha;
uniform vec2 lineCount;
uniform vec2 lineThickness;
uniform vec2 lineOffset;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    vec2 st = materialInput.st;

    float scaledWidth = fract(lineCount.s * st.s - lineOffset.s);
    scaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));
    float scaledHeight = fract(lineCount.t * st.t - lineOffset.t);
    scaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));

    float value;

    // Fuzz Factor - Controls blurriness of lines
#if (__VERSION__ == 300 || defined(GL_OES_standard_derivatives))
    const float fuzz = 1.2;
    vec2 thickness = (lineThickness * czm_pixelRatio) - 1.0;

    // From "3D Engine Design for Virtual Globes" by Cozzi and Ring, Listing 4.13.
    vec2 dx = abs(dFdx(st));
    vec2 dy = abs(dFdy(st));
    vec2 dF = vec2(max(dx.s, dy.s), max(dx.t, dy.t)) * lineCount;
    value = min(
        smoothstep(dF.s * thickness.s, dF.s * (fuzz + thickness.s), scaledWidth),
        smoothstep(dF.t * thickness.t, dF.t * (fuzz + thickness.t), scaledHeight));
#else
    // If no derivatives available (IE 10?), revert to view-dependent fuzz
    const float fuzz = 0.05;

    vec2 range = 0.5 - (lineThickness * 0.05);
    value = min(
        1.0 - smoothstep(range.s, range.s + fuzz, scaledWidth),
        1.0 - smoothstep(range.t, range.t + fuzz, scaledHeight));
#endif

    // Edges taken from RimLightingMaterial.glsl
    // See http://www.fundza.com/rman_shaders/surface/fake_rim/fake_rim1.html
    float dRim = 1.0 - abs(dot(materialInput.normalEC, normalize(materialInput.positionToEyeEC)));
    float sRim = smoothstep(0.8, 1.0, dRim);
    value *= (1.0 - sRim);

    vec4 halfColor;
    halfColor.rgb = color.rgb * 0.5;
    halfColor.a = color.a * (1.0 - ((1.0 - cellAlpha) * value));
    halfColor = czm_gammaCorrect(halfColor);
    material.diffuse = halfColor.rgb;
    material.emission = halfColor.rgb;
    material.alpha = halfColor.a;

    return material;
}
`;var dG=`uniform sampler2D image;
uniform float strength;
uniform vec2 repeat;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);
    
    vec4 textureValue = texture(image, fract(repeat * materialInput.st));
    vec3 normalTangentSpace = textureValue.channels;
    normalTangentSpace.xy = normalTangentSpace.xy * 2.0 - 1.0;
    normalTangentSpace.z = clamp(1.0 - strength, 0.1, 1.0);
    normalTangentSpace = normalize(normalTangentSpace);
    vec3 normalEC = materialInput.tangentToEyeMatrix * normalTangentSpace;
    
    material.normal = normalEC;
    
    return material;
}
`;var sG=`uniform vec4 color;

float getPointOnLine(vec2 p0, vec2 p1, float x)
{
    float slope = (p0.y - p1.y) / (p0.x - p1.x);
    return slope * (x - p0.x) + p0.y;
}

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    vec2 st = materialInput.st;

#if (__VERSION__ == 300 || defined(GL_OES_standard_derivatives))
    float base = 1.0 - abs(fwidth(st.s)) * 10.0 * czm_pixelRatio;
#else
     // If no derivatives available (IE 10?), 2.5% of the line will be the arrow head
    float base = 0.975;
#endif

    vec2 center = vec2(1.0, 0.5);
    float ptOnUpperLine = getPointOnLine(vec2(base, 1.0), center, st.s);
    float ptOnLowerLine = getPointOnLine(vec2(base, 0.0), center, st.s);

    float halfWidth = 0.15;
    float s = step(0.5 - halfWidth, st.t);
    s *= 1.0 - step(0.5 + halfWidth, st.t);
    s *= 1.0 - step(base, st.s);

    float t = step(base, materialInput.st.s);
    t *= 1.0 - step(ptOnUpperLine, st.t);
    t *= step(ptOnLowerLine, st.t);

    // Find the distance from the closest separator (region between two colors)
    float dist;
    if (st.s < base)
    {
        float d1 = abs(st.t - (0.5 - halfWidth));
        float d2 = abs(st.t - (0.5 + halfWidth));
        dist = min(d1, d2);
    }
    else
    {
        float d1 = czm_infinity;
        if (st.t < 0.5 - halfWidth && st.t > 0.5 + halfWidth)
        {
            d1 = abs(st.s - base);
        }
        float d2 = abs(st.t - ptOnUpperLine);
        float d3 = abs(st.t - ptOnLowerLine);
        dist = min(min(d1, d2), d3);
    }

    vec4 outsideColor = vec4(0.0);
    vec4 currentColor = mix(outsideColor, color, clamp(s + t, 0.0, 1.0));
    vec4 outColor = czm_antialias(outsideColor, color, currentColor, dist);

    outColor = czm_gammaCorrect(outColor);
    material.diffuse = outColor.rgb;
    material.alpha = outColor.a;
    return material;
}
`;var rG=`uniform vec4 color;
uniform vec4 gapColor;
uniform float dashLength;
uniform float dashPattern;
in float v_polylineAngle;

const float maskLength = 16.0;

mat2 rotate(float rad) {
    float c = cos(rad);
    float s = sin(rad);
    return mat2(
        c, s,
        -s, c
    );
}

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    vec2 pos = rotate(v_polylineAngle) * gl_FragCoord.xy;

    // Get the relative position within the dash from 0 to 1
    float dashPosition = fract(pos.x / (dashLength * czm_pixelRatio));
    // Figure out the mask index.
    float maskIndex = floor(dashPosition * maskLength);
    // Test the bit mask.
    float maskTest = floor(dashPattern / pow(2.0, maskIndex));
    vec4 fragColor = (mod(maskTest, 2.0) < 1.0) ? gapColor : color;
    if (fragColor.a < 0.005) {   // matches 0/255 and 1/255
        discard;
    }

    fragColor = czm_gammaCorrect(fragColor);
    material.emission = fragColor.rgb;
    material.alpha = fragColor.a;
    return material;
}
`;var NG=`uniform vec4 color;
uniform float glowPower;
uniform float taperPower;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    vec2 st = materialInput.st;
    float glow = glowPower / abs(st.t - 0.5) - (glowPower / 0.5);

    if (taperPower <= 0.99999) {
        glow *= min(1.0, taperPower / (0.5 - st.s * 0.5) - (taperPower / 0.5));
    }

    vec4 fragColor;
    fragColor.rgb = max(vec3(glow - 1.0 + color.rgb), color.rgb);
    fragColor.a = clamp(0.0, 1.0, glow) * color.a;
    fragColor = czm_gammaCorrect(fragColor);

    material.emission = fragColor.rgb;
    material.alpha = fragColor.a;

    return material;
}
`;var EG=`uniform vec4 color;
uniform vec4 outlineColor;
uniform float outlineWidth;

in float v_width;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    vec2 st = materialInput.st;
    float halfInteriorWidth =  0.5 * (v_width - outlineWidth) / v_width;
    float b = step(0.5 - halfInteriorWidth, st.t);
    b *= 1.0 - step(0.5 + halfInteriorWidth, st.t);

    // Find the distance from the closest separator (region between two colors)
    float d1 = abs(st.t - (0.5 - halfInteriorWidth));
    float d2 = abs(st.t - (0.5 + halfInteriorWidth));
    float dist = min(d1, d2);

    vec4 currentColor = mix(outlineColor, color, b);
    vec4 outColor = czm_antialias(outlineColor, color, currentColor, dist);
    outColor = czm_gammaCorrect(outColor);

    material.diffuse = outColor.rgb;
    material.alpha = outColor.a;

    return material;
}
`;var kG=`uniform vec4 color;
uniform vec4 rimColor;
uniform float width;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    // See http://www.fundza.com/rman_shaders/surface/fake_rim/fake_rim1.html
    float d = 1.0 - dot(materialInput.normalEC, normalize(materialInput.positionToEyeEC));
    float s = smoothstep(1.0 - width, 1.0, d);

    vec4 outColor = czm_gammaCorrect(color);
    vec4 outRimColor = czm_gammaCorrect(rimColor);

    material.diffuse = outColor.rgb;
    material.emission = outRimColor.rgb * s;
    material.alpha = mix(outColor.a, outRimColor.a, s);

    return material;
}
`;var UG=`uniform sampler2D image;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);
    vec4 rampColor = texture(image, vec2(materialInput.slope / (czm_pi / 2.0), 0.5));
    rampColor = czm_gammaCorrect(rampColor);
    material.diffuse = rampColor.rgb;
    material.alpha = rampColor.a;
    return material;
}
`;var JG=`uniform vec4 evenColor;
uniform vec4 oddColor;
uniform float offset;
uniform float repeat;
uniform bool horizontal;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    // Based on the Stripes Fragment Shader in the Orange Book (11.1.2)
    float coord = mix(materialInput.st.s, materialInput.st.t, float(horizontal));
    float value = fract((coord - offset) * (repeat * 0.5));
    float dist = min(value, min(abs(value - 0.5), 1.0 - value));

    vec4 currentColor = mix(evenColor, oddColor, step(0.5, value));
    vec4 color = czm_antialias(evenColor, oddColor, currentColor, dist);
    color = czm_gammaCorrect(color);

    material.diffuse = color.rgb;
    material.alpha = color.a;

    return material;
}
`;var QG=`// Thanks for the contribution Jonas
// http://29a.ch/2012/7/19/webgl-terrain-rendering-water-fog

uniform sampler2D specularMap;
uniform sampler2D normalMap;
uniform vec4 baseWaterColor;
uniform vec4 blendColor;
uniform float frequency;
uniform float animationSpeed;
uniform float amplitude;
uniform float specularIntensity;
uniform float fadeFactor;

czm_material czm_getMaterial(czm_materialInput materialInput)
{
    czm_material material = czm_getDefaultMaterial(materialInput);

    float time = czm_frameNumber * animationSpeed;

    // fade is a function of the distance from the fragment and the frequency of the waves
    float fade = max(1.0, (length(materialInput.positionToEyeEC) / 10000000000.0) * frequency * fadeFactor);

    float specularMapValue = texture(specularMap, materialInput.st).r;

    // note: not using directional motion at this time, just set the angle to 0.0;
    vec4 noise = czm_getWaterNoise(normalMap, materialInput.st * frequency, time, 0.0);
    vec3 normalTangentSpace = noise.xyz * vec3(1.0, 1.0, (1.0 / amplitude));

    // fade out the normal perturbation as we move further from the water surface
    normalTangentSpace.xy /= fade;

    // attempt to fade out the normal perturbation as we approach non water areas (low specular map value)
    normalTangentSpace = mix(vec3(0.0, 0.0, 50.0), normalTangentSpace, specularMapValue);

    normalTangentSpace = normalize(normalTangentSpace);

    // get ratios for alignment of the new normal vector with a vector perpendicular to the tangent plane
    float tsPerturbationRatio = clamp(dot(normalTangentSpace, vec3(0.0, 0.0, 1.0)), 0.0, 1.0);

    // fade out water effect as specular map value decreases
    material.alpha = mix(blendColor.a, baseWaterColor.a, specularMapValue) * specularMapValue;

    // base color is a blend of the water and non-water color based on the value from the specular map
    // may need a uniform blend factor to better control this
    material.diffuse = mix(blendColor.rgb, baseWaterColor.rgb, specularMapValue);

    // diffuse highlights are based on how perturbed the normal is
    material.diffuse += (0.1 * tsPerturbationRatio);

    material.diffuse = material.diffuse;

    material.normal = normalize(materialInput.tangentToEyeMatrix * normalTangentSpace);

    material.specular = specularIntensity;
    material.shininess = 10.0;

    return material;
}
`;function X(Z){this.type=void 0,this.shaderSource=void 0,this.materials=void 0,this.uniforms=void 0,this._uniforms=void 0,this.translucent=void 0,this._minificationFilter=l(Z.minificationFilter,um.LINEAR),this._magnificationFilter=l(Z.magnificationFilter,mY.LINEAR),this._strict=void 0,this._template=void 0,this._count=void 0,this._texturePaths={},this._loadedImages=[],this._loadedCubeMaps=[],this._textures={},this._updateFunctions=[],this._defaultTexture=void 0,Qk(Z,this),Object.defineProperties(this,{type:{value:this.type,writable:!1}}),V(X._uniformList[this.type])||(X._uniformList[this.type]=Object.keys(this._uniforms))}X._uniformList={};X.fromType=function(Z,m){if(!V(X._materialCache.getMaterial(Z)))throw new U(`material with type '${Z}' does not exist.`);let h=new X({fabric:{type:Z}});if(V(m))for(let n in m)m.hasOwnProperty(n)&&(h.uniforms[n]=m[n]);return h};X.prototype.isTranslucent=function(){if(V(this.translucent))return typeof this.translucent=="function"?this.translucent():this.translucent;let Z=!0,m=this._translucentFunctions,h=m.length;for(let n=0;n<h;++n){let i=m[n];if(typeof i=="function"?Z=Z&&i():Z=Z&&i,!Z)break}return Z};X.prototype.update=function(Z){this._defaultTexture=Z.defaultTexture;let m,h,n=this._loadedImages,i=n.length;for(m=0;m<i;++m){let e=n[m];h=e.id;let G=e.image,F;Array.isArray(G)&&(F=G.slice(1,G.length).map(function(Q){return Q.bufferView}),G=G[0]);let d=new sY({minificationFilter:this._minificationFilter,magnificationFilter:this._magnificationFilter}),J;V(G.internalFormat)?J=new YY({context:Z,pixelFormat:G.internalFormat,width:G.width,height:G.height,source:{arrayBufferView:G.bufferView,mipLevels:F},sampler:d}):J=new YY({context:Z,source:G,sampler:d});let k=this._textures[h];V(k)&&k!==this._defaultTexture&&k.destroy(),this._textures[h]=J;let r=`${h}Dimensions`;if(this.uniforms.hasOwnProperty(r)){let Q=this.uniforms[r];Q.x=J._width,Q.y=J._height}}n.length=0;let A=this._loadedCubeMaps;for(i=A.length,m=0;m<i;++m){let e=A[m];h=e.id;let G=e.images,F=new Ct({context:Z,source:{positiveX:G[0],negativeX:G[1],positiveY:G[2],negativeY:G[3],positiveZ:G[4],negativeZ:G[5]},sampler:new sY({minificationFilter:this._minificationFilter,magnificationFilter:this._magnificationFilter})});this._textures[h]=F}A.length=0;let t=this._updateFunctions;for(i=t.length,m=0;m<i;++m)t[m](this,Z);let W=this.materials;for(let e in W)W.hasOwnProperty(e)&&W[e].update(Z)};X.prototype.isDestroyed=function(){return!1};X.prototype.destroy=function(){let Z=this._textures;for(let h in Z)if(Z.hasOwnProperty(h)){let n=Z[h];n!==this._defaultTexture&&n.destroy()}let m=this.materials;for(let h in m)m.hasOwnProperty(h)&&m[h].destroy();return cZ(this)};function Qk(Z,m){Z=l(Z,l.EMPTY_OBJECT),m._strict=l(Z.strict,!1),m._count=l(Z.count,0),m._template=Ph(l(Z.fabric,l.EMPTY_OBJECT)),m._template.uniforms=Ph(l(m._template.uniforms,l.EMPTY_OBJECT)),m._template.materials=Ph(l(m._template.materials,l.EMPTY_OBJECT)),m.type=V(m._template.type)?m._template.type:Km(),m.shaderSource="",m.materials={},m.uniforms={},m._uniforms={},m._translucentFunctions=[];let h,n=X._materialCache.getMaterial(m.type);if(V(n)){let A=Ph(n.fabric,!0);m._template=Kh(m._template,A,!0),h=n.translucent}Ik(m),V(n)||X._materialCache.addMaterial(m.type,m),jk(m),Sk(m),fk(m);let i=m._translucentFunctions.length===0?!0:void 0;if(h=l(h,i),h=l(Z.translucent,h),V(h))if(typeof h=="function"){let A=function(){return h(m)};m._translucentFunctions.push(A)}else m._translucentFunctions.push(h)}function Bt(Z,m,h,n){if(V(Z)){for(let i in Z)if(Z.hasOwnProperty(i)){let A=m.indexOf(i)!==-1;(n&&!A||!n&&A)&&h(i,m)}}}function CG(Z,m){let h=`fabric: property name '${Z}' is not valid. It should be `;for(let n=0;n<m.length;n++){let i=`'${m[n]}'`;h+=n===m.length-1?`or ${i}.`:`${i}, `}throw new U(h)}function Ck(Z,m){let h=`fabric: uniforms and materials cannot share the same property '${Z}'`;throw new U(h)}var Bk=["type","materials","uniforms","components","source"],gk=["diffuse","specular","shininess","normal","emission","alpha"];function Ik(Z){let m=Z._template,h=m.uniforms,n=m.materials,i=m.components;if(V(i)&&V(m.source))throw new U("fabric: cannot have source and components in the same template.");Bt(m,Bk,CG,!0),Bt(i,gk,CG,!0);let A=[];for(let t in n)n.hasOwnProperty(t)&&A.push(t);Bt(h,A,Ck,!1)}function pk(Z,m){let h=m._template.materials;for(let n in h)if(h.hasOwnProperty(n)&&Z.indexOf(n)>-1)return!0;return!1}function jk(Z){let m=Z._template.components,h=Z._template.source;if(V(h))Z.shaderSource+=`${h}
`;else{if(Z.shaderSource+=`czm_material czm_getMaterial(czm_materialInput materialInput)
{
`,Z.shaderSource+=`czm_material material = czm_getDefaultMaterial(materialInput);
`,V(m)){let n=Object.keys(Z._template.materials).length>0;for(let i in m)if(m.hasOwnProperty(i))if(i==="diffuse"||i==="emission"){let t=n&&pk(m[i],Z)?m[i]:`czm_gammaCorrect(${m[i]})`;Z.shaderSource+=`material.${i} = ${t}; 
`}else i==="alpha"?Z.shaderSource+=`material.alpha = ${m.alpha}; 
`:Z.shaderSource+=`material.${i} = ${m[i]};
`}Z.shaderSource+=`return material;
}
`}}var BG={mat2:lY,mat3:Bm,mat4:eZ},ck=/\.ktx2$/i;function Tk(Z){let m;return function(h,n){let i=h.uniforms,A=i[Z],t=m!==A,W=!V(A)||A===X.DefaultImageId;m=A;let e=h._textures[Z],G,F;if(A instanceof HTMLVideoElement){if(A.readyState>=2){if(t&&V(e)&&(e!==n.defaultTexture&&e.destroy(),e=void 0),!V(e)||e===n.defaultTexture){let J=new sY({minificationFilter:h._minificationFilter,magnificationFilter:h._magnificationFilter});e=new YY({context:n,source:A,sampler:J}),h._textures[Z]=e;return}e.copyFrom({source:A})}else V(e)||(h._textures[Z]=n.defaultTexture);return}if(A instanceof YY&&A!==e){h._texturePaths[Z]=void 0;let J=h._textures[Z];V(J)&&J!==h._defaultTexture&&J.destroy(),h._textures[Z]=A,G=`${Z}Dimensions`,i.hasOwnProperty(G)&&(F=i[G],F.x=A._width,F.y=A._height);return}if(t&&V(e)&&W&&(e!==h._defaultTexture&&e.destroy(),e=void 0),V(e)||(h._texturePaths[Z]=void 0,e=h._textures[Z]=h._defaultTexture,G=`${Z}Dimensions`,i.hasOwnProperty(G)&&(F=i[G],F.x=e._width,F.y=e._height)),W)return;let d=A instanceof Dm;if(!V(h._texturePaths[Z])||d&&A.url!==h._texturePaths[Z].url||!d&&A!==h._texturePaths[Z]){if(typeof A=="string"||d){let J=d?A:Dm.createIfNeeded(A),k;ck.test(J.url)?k=aG(J.url):k=J.fetchImage(),Promise.resolve(k).then(function(r){h._loadedImages.push({id:Z,image:r})}).catch(function(){V(e)&&e!==h._defaultTexture&&e.destroy(),h._textures[Z]=h._defaultTexture})}else(A instanceof HTMLCanvasElement||A instanceof HTMLImageElement)&&h._loadedImages.push({id:Z,image:A});h._texturePaths[Z]=A}}}function Mk(Z){return function(m,h){let n=m.uniforms[Z];if(n instanceof Ct){let A=m._textures[Z];A!==m._defaultTexture&&A.destroy(),m._texturePaths[Z]=void 0,m._textures[Z]=n;return}if(V(m._textures[Z])||(m._texturePaths[Z]=void 0,m._textures[Z]=h.defaultCubeMap),n===X.DefaultCubeMapId)return;let i=n.positiveX+n.negativeX+n.positiveY+n.negativeY+n.positiveZ+n.negativeZ;if(i!==m._texturePaths[Z]){let A=[Dm.createIfNeeded(n.positiveX).fetchImage(),Dm.createIfNeeded(n.negativeX).fetchImage(),Dm.createIfNeeded(n.positiveY).fetchImage(),Dm.createIfNeeded(n.negativeY).fetchImage(),Dm.createIfNeeded(n.positiveZ).fetchImage(),Dm.createIfNeeded(n.negativeZ).fetchImage()];Promise.all(A).then(function(t){m._loadedCubeMaps.push({id:Z,images:t})}),m._texturePaths[Z]=i}}}function Sk(Z){let m=Z._template.uniforms;for(let h in m)m.hasOwnProperty(h)&&gG(Z,h)}function gG(Z,m){let h=Z._strict,n=Z._template.uniforms,i=n[m],A=Dk(i);if(!V(A))throw new U(`fabric: uniform '${m}' has invalid type.`);let t;if(A==="channels"){if(t=Oi(Z,m,i,!1),t===0&&h)throw new U(`strict: shader source does not use channels '${m}'.`)}else{if(A==="sampler2D"){let G=`${m}Dimensions`;uk(Z,G)>0&&(n[G]={type:"ivec3",x:1,y:1},gG(Z,G))}if(!new RegExp(`uniform\\s+${A}\\s+${m}\\s*;`).test(Z.shaderSource)){let G=`uniform ${A} ${m};`;Z.shaderSource=G+Z.shaderSource}let e=`${m}_${Z._count++}`;if(t=Oi(Z,m,e),t===1&&h)throw new U(`strict: shader source does not use uniform '${m}'.`);if(Z.uniforms[m]=i,A==="sampler2D")Z._uniforms[e]=function(){return Z._textures[m]},Z._updateFunctions.push(Tk(m));else if(A==="samplerCube")Z._uniforms[e]=function(){return Z._textures[m]},Z._updateFunctions.push(Mk(m));else if(A.indexOf("mat")!==-1){let G=new BG[A];Z._uniforms[e]=function(){return BG[A].fromColumnMajorArray(Z.uniforms[m],G)}}else Z._uniforms[e]=function(){return Z.uniforms[m]}}}function Dk(Z){let m=Z.type;if(!V(m)){let h=typeof Z;if(h==="number")m="float";else if(h==="boolean")m="bool";else if(h==="string"||Z instanceof Dm||Z instanceof HTMLCanvasElement||Z instanceof HTMLImageElement)/^([rgba]){1,4}$/i.test(Z)?m="channels":Z===X.DefaultCubeMapId?m="samplerCube":m="sampler2D";else if(h==="object")if(Array.isArray(Z))(Z.length===4||Z.length===9||Z.length===16)&&(m=`mat${Math.sqrt(Z.length)}`);else{let n=0;for(let i in Z)Z.hasOwnProperty(i)&&(n+=1);n>=2&&n<=4?m=`vec${n}`:n===6&&(m="samplerCube")}}return m}function fk(Z){let m=Z._strict,h=Z._template.materials;for(let n in h)if(h.hasOwnProperty(n)){let i=new X({strict:m,fabric:h[n],count:Z._count});Z._count=i._count,Z._uniforms=Kh(Z._uniforms,i._uniforms,!0),Z.materials[n]=i,Z._translucentFunctions=Z._translucentFunctions.concat(i._translucentFunctions);let A="czm_getMaterial",t=`${A}_${Z._count++}`;Oi(i,A,t),Z.shaderSource=i.shaderSource+Z.shaderSource;let W=`${t}(materialInput)`;if(Oi(Z,n,W)===0&&m)throw new U(`strict: shader source does not use material '${n}'.`)}}function Oi(Z,m,h,n){n=l(n,!0);let i=0,A="([\\w])?",t=`([\\w${n?".":""}])?`,W=new RegExp(t+m+A,"g");return Z.shaderSource=Z.shaderSource.replace(W,function(e,G,F){return G||F?e:(i+=1,h)}),i}function uk(Z,m,h){return Oi(Z,m,m,h)}X._materialCache={_materials:{},addMaterial:function(Z,m){this._materials[Z]=m},getMaterial:function(Z){return this._materials[Z]}};X.DefaultImageId="czm_defaultImage";X.DefaultCubeMapId="czm_defaultCubeMap";X.ColorType="Color";X._materialCache.addMaterial(X.ColorType,{fabric:{type:X.ColorType,uniforms:{color:new H(1,0,0,.5)},components:{diffuse:"color.rgb",alpha:"color.a"}},translucent:function(Z){return Z.uniforms.color.alpha<1}});X.ImageType="Image";X._materialCache.addMaterial(X.ImageType,{fabric:{type:X.ImageType,uniforms:{image:X.DefaultImageId,repeat:new q(1,1),color:new H(1,1,1,1)},components:{diffuse:"texture(image, fract(repeat * materialInput.st)).rgb * color.rgb",alpha:"texture(image, fract(repeat * materialInput.st)).a * color.a"}},translucent:function(Z){return Z.uniforms.color.alpha<1}});X.DiffuseMapType="DiffuseMap";X._materialCache.addMaterial(X.DiffuseMapType,{fabric:{type:X.DiffuseMapType,uniforms:{image:X.DefaultImageId,channels:"rgb",repeat:new q(1,1)},components:{diffuse:"texture(image, fract(repeat * materialInput.st)).channels"}},translucent:!1});X.AlphaMapType="AlphaMap";X._materialCache.addMaterial(X.AlphaMapType,{fabric:{type:X.AlphaMapType,uniforms:{image:X.DefaultImageId,channel:"a",repeat:new q(1,1)},components:{alpha:"texture(image, fract(repeat * materialInput.st)).channel"}},translucent:!0});X.SpecularMapType="SpecularMap";X._materialCache.addMaterial(X.SpecularMapType,{fabric:{type:X.SpecularMapType,uniforms:{image:X.DefaultImageId,channel:"r",repeat:new q(1,1)},components:{specular:"texture(image, fract(repeat * materialInput.st)).channel"}},translucent:!1});X.EmissionMapType="EmissionMap";X._materialCache.addMaterial(X.EmissionMapType,{fabric:{type:X.EmissionMapType,uniforms:{image:X.DefaultImageId,channels:"rgb",repeat:new q(1,1)},components:{emission:"texture(image, fract(repeat * materialInput.st)).channels"}},translucent:!1});X.BumpMapType="BumpMap";X._materialCache.addMaterial(X.BumpMapType,{fabric:{type:X.BumpMapType,uniforms:{image:X.DefaultImageId,channel:"r",strength:.8,repeat:new q(1,1)},source:WG},translucent:!1});X.NormalMapType="NormalMap";X._materialCache.addMaterial(X.NormalMapType,{fabric:{type:X.NormalMapType,uniforms:{image:X.DefaultImageId,channels:"rgb",strength:.8,repeat:new q(1,1)},source:dG},translucent:!1});X.GridType="Grid";X._materialCache.addMaterial(X.GridType,{fabric:{type:X.GridType,uniforms:{color:new H(0,1,0,1),cellAlpha:.1,lineCount:new q(8,8),lineThickness:new q(1,1),lineOffset:new q(0,0)},source:FG},translucent:function(Z){let m=Z.uniforms;return m.color.alpha<1||m.cellAlpha<1}});X.StripeType="Stripe";X._materialCache.addMaterial(X.StripeType,{fabric:{type:X.StripeType,uniforms:{horizontal:!0,evenColor:new H(1,1,1,.5),oddColor:new H(0,0,1,.5),offset:0,repeat:5},source:JG},translucent:function(Z){let m=Z.uniforms;return m.evenColor.alpha<1||m.oddColor.alpha<1}});X.CheckerboardType="Checkerboard";X._materialCache.addMaterial(X.CheckerboardType,{fabric:{type:X.CheckerboardType,uniforms:{lightColor:new H(1,1,1,.5),darkColor:new H(0,0,0,.5),repeat:new q(5,5)},source:eG},translucent:function(Z){let m=Z.uniforms;return m.lightColor.alpha<1||m.darkColor.alpha<1}});X.DotType="Dot";X._materialCache.addMaterial(X.DotType,{fabric:{type:X.DotType,uniforms:{lightColor:new H(1,1,0,.75),darkColor:new H(0,1,1,.75),repeat:new q(5,5)},source:oG},translucent:function(Z){let m=Z.uniforms;return m.lightColor.alpha<1||m.darkColor.alpha<1}});X.WaterType="Water";X._materialCache.addMaterial(X.WaterType,{fabric:{type:X.WaterType,uniforms:{baseWaterColor:new H(.2,.3,.6,1),blendColor:new H(0,1,.699,1),specularMap:X.DefaultImageId,normalMap:X.DefaultImageId,frequency:10,animationSpeed:.01,amplitude:1,specularIntensity:.5,fadeFactor:1},source:QG},translucent:function(Z){let m=Z.uniforms;return m.baseWaterColor.alpha<1||m.blendColor.alpha<1}});X.RimLightingType="RimLighting";X._materialCache.addMaterial(X.RimLightingType,{fabric:{type:X.RimLightingType,uniforms:{color:new H(1,0,0,.7),rimColor:new H(1,1,1,.4),width:.3},source:kG},translucent:function(Z){let m=Z.uniforms;return m.color.alpha<1||m.rimColor.alpha<1}});X.FadeType="Fade";X._materialCache.addMaterial(X.FadeType,{fabric:{type:X.FadeType,uniforms:{fadeInColor:new H(1,0,0,1),fadeOutColor:new H(0,0,0,0),maximumDistance:.5,repeat:!0,fadeDirection:{x:!0,y:!0},time:new q(.5,.5)},source:GG},translucent:function(Z){let m=Z.uniforms;return m.fadeInColor.alpha<1||m.fadeOutColor.alpha<1}});X.PolylineArrowType="PolylineArrow";X._materialCache.addMaterial(X.PolylineArrowType,{fabric:{type:X.PolylineArrowType,uniforms:{color:new H(1,1,1,1)},source:sG},translucent:!0});X.PolylineDashType="PolylineDash";X._materialCache.addMaterial(X.PolylineDashType,{fabric:{type:X.PolylineDashType,uniforms:{color:new H(1,0,1,1),gapColor:new H(0,0,0,0),dashLength:16,dashPattern:255},source:rG},translucent:!0});X.PolylineGlowType="PolylineGlow";X._materialCache.addMaterial(X.PolylineGlowType,{fabric:{type:X.PolylineGlowType,uniforms:{color:new H(0,.5,1,1),glowPower:.25,taperPower:1},source:NG},translucent:!0});X.PolylineOutlineType="PolylineOutline";X._materialCache.addMaterial(X.PolylineOutlineType,{fabric:{type:X.PolylineOutlineType,uniforms:{color:new H(1,1,1,1),outlineColor:new H(1,0,0,1),outlineWidth:1},source:EG},translucent:function(Z){let m=Z.uniforms;return m.color.alpha<1||m.outlineColor.alpha<1}});X.ElevationContourType="ElevationContour";X._materialCache.addMaterial(X.ElevationContourType,{fabric:{type:X.ElevationContourType,uniforms:{spacing:100,color:new H(1,0,0,1),width:1},source:lG},translucent:!1});X.ElevationRampType="ElevationRamp";X._materialCache.addMaterial(X.ElevationRampType,{fabric:{type:X.ElevationRampType,uniforms:{image:X.DefaultImageId,minimumHeight:0,maximumHeight:1e4},source:RG},translucent:!1});X.SlopeRampMaterialType="SlopeRamp";X._materialCache.addMaterial(X.SlopeRampMaterialType,{fabric:{type:X.SlopeRampMaterialType,uniforms:{image:X.DefaultImageId},source:UG},translucent:!1});X.AspectRampMaterialType="AspectRamp";X._materialCache.addMaterial(X.AspectRampMaterialType,{fabric:{type:X.AspectRampMaterialType,uniforms:{image:X.DefaultImageId},source:tG},translucent:!1});X.ElevationBandType="ElevationBand";X._materialCache.addMaterial(X.ElevationBandType,{fabric:{type:X.ElevationBandType,uniforms:{heights:X.DefaultImageId,colors:X.DefaultImageId},source:VG},translucent:!0});var gt=X;var It=`${Ya}
${$R}`,bk=ZG;CY.isInternetExplorer()||(It=`#define CLIP_POLYLINE 
${It}`);function gn(Z){Z=l(Z,l.EMPTY_OBJECT);let m=l(Z.translucent,!0),h=!1,n=gn.VERTEX_FORMAT;this.material=V(Z.material)?Z.material:gt.fromType(gt.ColorType),this.translucent=m,this._vertexShaderSource=l(Z.vertexShaderSource,It),this._fragmentShaderSource=l(Z.fragmentShaderSource,bk),this._renderState=sh.getDefaultRenderState(m,h,Z.renderState),this._closed=h,this._vertexFormat=n}Object.defineProperties(gn.prototype,{vertexShaderSource:{get:function(){let Z=this._vertexShaderSource;return this.material.shaderSource.search(/in\s+float\s+v_polylineAngle;/g)!==-1&&(Z=`#define POLYLINE_DASH
${Z}`),Z}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}}});gn.VERTEX_FORMAT=rn.POSITION_AND_ST;gn.prototype.getFragmentShaderSource=sh.prototype.getFragmentShaderSource;gn.prototype.isTranslucent=sh.prototype.isTranslucent;gn.prototype.getRenderState=sh.prototype.getRenderState;var IG=gn;function xk(Z,m){if(!V(Z))throw new U("array is required.");if(!V(m)||m<1)throw new U("numberOfArrays must be greater than 0.");let h=[],n=Z.length,i=0;for(;i<n;){let A=Math.ceil((n-i)/m--);h.push(Z.slice(i,i+A)),i+=A}return h}var pG=xk;function DY(Z,m,h){if(!V(Z))throw new U("context is required");if(!V(m))throw new U("attributes is required");if(!V(h))throw new U("numberOfInstances is required");if(this._attributes=m,this._numberOfInstances=h,m.length===0)return;let n=_k(m),i=Z.floatingPointTexture,A=n===QZ.FLOAT&&!i,t=Ok(m,A),W=wk(t,m,A),e=Math.floor($Z.maximumTextureSize/W),G=Math.min(h,e),F=W*G,d=Math.ceil(h/G),J=1/F,k=J*.5,r=1/d,Q=r*.5;this._textureDimensions=new q(F,d),this._textureStep=new CZ(J,k,r,Q),this._pixelDatatype=A?QZ.UNSIGNED_BYTE:n,this._packFloats=A,this._offsets=t,this._stride=W,this._texture=void 0;let p=4*F*d;this._batchValues=n===QZ.FLOAT&&!A?new Float32Array(p):new Uint8Array(p),this._batchValuesDirty=!1}Object.defineProperties(DY.prototype,{attributes:{get:function(){return this._attributes}},numberOfInstances:{get:function(){return this._numberOfInstances}}});function _k(Z){let m=!1,h=Z.length;for(let n=0;n<h;++n)if(Z[n].componentDatatype!==WZ.UNSIGNED_BYTE){m=!0;break}return m?QZ.FLOAT:QZ.UNSIGNED_BYTE}function cG(Z,m){let h=Z[m].componentsPerAttribute;return h===2?q:h===3?_:h===4?CZ:Number}function Ok(Z,m){let h=new Array(Z.length),n=0,i=Z.length;for(let A=0;A<i;++A){let W=Z[A].componentDatatype;h[A]=n,W!==WZ.UNSIGNED_BYTE&&m?n+=4:++n}return h}function wk(Z,m,h){let n=Z.length,i=Z[n-1];return m[n-1].componentDatatype!==WZ.UNSIGNED_BYTE&&h?i+4:i+1}var wi=new CZ;function yk(Z,m,h){let n=CZ.unpack(Z,m,wi),i=CZ.unpackFloat(n);n=CZ.unpack(Z,m+4,wi);let A=CZ.unpackFloat(n);n=CZ.unpack(Z,m+8,wi);let t=CZ.unpackFloat(n);n=CZ.unpack(Z,m+12,wi);let W=CZ.unpackFloat(n);return CZ.fromElements(i,A,t,W,h)}function Hk(Z,m,h){let n=CZ.packFloat(Z.x,wi);CZ.pack(n,m,h),n=CZ.packFloat(Z.y,n),CZ.pack(n,m,h+4),n=CZ.packFloat(Z.z,n),CZ.pack(n,m,h+8),n=CZ.packFloat(Z.w,n),CZ.pack(n,m,h+12)}var jG=new CZ;DY.prototype.getBatchedAttribute=function(Z,m,h){if(Z<0||Z>=this._numberOfInstances)throw new U("instanceIndex is out of range.");if(m<0||m>=this._attributes.length)throw new U("attributeIndex is out of range");let n=this._attributes,i=this._offsets[m],t=4*this._stride*Z+4*i,W;this._packFloats&&n[m].componentDatatype!==QZ.UNSIGNED_BYTE?W=yk(this._batchValues,t,jG):W=CZ.unpack(this._batchValues,t,jG);let e=cG(n,m);return V(e.fromCartesian4)?e.fromCartesian4(W,h):V(e.clone)?e.clone(W,h):W.x};var zk=[void 0,void 0,new q,new _,new CZ],Xk=new CZ;DY.prototype.setBatchedAttribute=function(Z,m,h){if(Z<0||Z>=this._numberOfInstances)throw new U("instanceIndex is out of range.");if(m<0||m>=this._attributes.length)throw new U("attributeIndex is out of range");if(!V(h))throw new U("value is required.");let n=this._attributes,i=zk[n[m].componentsPerAttribute],A=this.getBatchedAttribute(Z,m,i),t=cG(this._attributes,m);if(V(t.equals)?t.equals(A,h):A===h)return;let e=Xk;e.x=V(h.x)?h.x:h,e.y=V(h.y)?h.y:0,e.z=V(h.z)?h.z:0,e.w=V(h.w)?h.w:0;let G=this._offsets[m],d=4*this._stride*Z+4*G;this._packFloats&&n[m].componentDatatype!==QZ.UNSIGNED_BYTE?Hk(e,this._batchValues,d):CZ.pack(e,this._batchValues,d),this._batchValuesDirty=!0};function Lk(Z,m){let h=Z._textureDimensions;Z._texture=new YY({context:m,pixelFormat:JZ.RGBA,pixelDatatype:Z._pixelDatatype,width:h.x,height:h.y,sampler:sY.NEAREST,flipY:!1})}function vk(Z){let m=Z._textureDimensions;Z._texture.copyFrom({source:{width:m.x,height:m.y,arrayBufferView:Z._batchValues}})}DY.prototype.update=function(Z){V(this._texture)&&!this._batchValuesDirty||this._attributes.length===0||(this._batchValuesDirty=!1,V(this._texture)||Lk(this,Z.context),vk(this))};DY.prototype.getUniformMapCallback=function(){let Z=this;return function(m){return Z._attributes.length===0?m:Kh(m,{batchTexture:function(){return Z._texture},batchTextureDimensions:function(){return Z._textureDimensions},batchTextureStep:function(){return Z._textureStep}})}};function Pk(Z){let m=Z._stride;return Z._textureDimensions.y===1?`uniform vec4 batchTextureStep; 
vec2 computeSt(float batchId) 
{ 
    float stepX = batchTextureStep.x; 
    float centerX = batchTextureStep.y; 
    float numberOfAttributes = float(${m}); 
    return vec2(centerX + (batchId * numberOfAttributes * stepX), 0.5); 
} 
`:`uniform vec4 batchTextureStep; 
uniform vec2 batchTextureDimensions; 
vec2 computeSt(float batchId) 
{ 
    float stepX = batchTextureStep.x; 
    float centerX = batchTextureStep.y; 
    float stepY = batchTextureStep.z; 
    float centerY = batchTextureStep.w; 
    float numberOfAttributes = float(${m}); 
    float xId = mod(batchId * numberOfAttributes, batchTextureDimensions.x); 
    float yId = floor(batchId * numberOfAttributes / batchTextureDimensions.x); 
    return vec2(centerX + (xId * stepX), centerY + (yId * stepY)); 
} 
`}function Kk(Z){return Z===1?"float":`vec${Z}`}function qk(Z){return Z===1?".x":Z===2?".xy":Z===3?".xyz":""}function $k(Z,m){let n=Z._attributes[m],i=n.componentsPerAttribute,A=n.functionName,t=Kk(i),W=qk(i),e=Z._offsets[m],G=`${t} ${A}(float batchId) 
{ 
    vec2 st = computeSt(batchId); 
    st.x += batchTextureStep.x * float(${e}); 
`;return Z._packFloats&&n.componentDatatype!==QZ.UNSIGNED_BYTE?G+=`vec4 textureValue; 
textureValue.x = czm_unpackFloat(texture(batchTexture, st)); 
textureValue.y = czm_unpackFloat(texture(batchTexture, st + vec2(batchTextureStep.x, 0.0))); 
textureValue.z = czm_unpackFloat(texture(batchTexture, st + vec2(batchTextureStep.x * 2.0, 0.0))); 
textureValue.w = czm_unpackFloat(texture(batchTexture, st + vec2(batchTextureStep.x * 3.0, 0.0))); 
`:G+=`    vec4 textureValue = texture(batchTexture, st); 
`,G+=`    ${t} value = textureValue${W}; 
`,Z._pixelDatatype===QZ.UNSIGNED_BYTE&&n.componentDatatype===WZ.UNSIGNED_BYTE&&!n.normalize?G+=`value *= 255.0; 
`:Z._pixelDatatype===QZ.FLOAT&&n.componentDatatype===WZ.UNSIGNED_BYTE&&n.normalize&&(G+=`value /= 255.0; 
`),G+=`    return value; 
} 
`,G}DY.prototype.getVertexShaderCallback=function(){let Z=this._attributes;if(Z.length===0)return function(n){return n};let m=`uniform highp sampler2D batchTexture; 
`;m+=`${Pk(this)}
`;let h=Z.length;for(let n=0;n<h;++n)m+=$k(this,n);return function(n){let i=n.indexOf("void main"),A=n.substring(0,i),t=n.substring(i);return`${A}
${m}
${t}`}};DY.prototype.isDestroyed=function(){return!1};DY.prototype.destroy=function(){return this._texture=this._texture&&this._texture.destroy(),cZ(this)};var TG=DY;var ZU={NEVER:S.NEVER,LESS:S.LESS,EQUAL:S.EQUAL,LESS_OR_EQUAL:S.LEQUAL,GREATER:S.GREATER,NOT_EQUAL:S.NOTEQUAL,GREATER_OR_EQUAL:S.GEQUAL,ALWAYS:S.ALWAYS},ia=Object.freeze(ZU);var mU={READY:0,CREATING:1,CREATED:2,COMBINING:3,COMBINED:4,COMPLETE:5,FAILED:6},xm=Object.freeze(mU);var ph={DISABLED:0,ENABLED:1,CAST_ONLY:2,RECEIVE_ONLY:3};ph.NUMBER_OF_SHADOW_MODES=4;ph.castShadows=function(Z){return Z===ph.ENABLED||Z===ph.CAST_ONLY};ph.receiveShadows=function(Z){return Z===ph.ENABLED||Z===ph.RECEIVE_ONLY};ph.fromCastReceive=function(Z,m){return Z&&m?ph.ENABLED:Z?ph.CAST_ONLY:m?ph.RECEIVE_ONLY:ph.DISABLED};var Aa=Object.freeze(ph);function Jm(Z){if(Z=l(Z,l.EMPTY_OBJECT),this.geometryInstances=Z.geometryInstances,this.appearance=Z.appearance,this._appearance=void 0,this._material=void 0,this.depthFailAppearance=Z.depthFailAppearance,this._depthFailAppearance=void 0,this._depthFailMaterial=void 0,this.modelMatrix=eZ.clone(l(Z.modelMatrix,eZ.IDENTITY)),this._modelMatrix=new eZ,this.show=l(Z.show,!0),this._vertexCacheOptimize=l(Z.vertexCacheOptimize,!1),this._interleave=l(Z.interleave,!1),this._releaseGeometryInstances=l(Z.releaseGeometryInstances,!0),this._allowPicking=l(Z.allowPicking,!0),this._asynchronous=l(Z.asynchronous,!0),this._compressVertices=l(Z.compressVertices,!0),this.cull=l(Z.cull,!0),this.debugShowBoundingVolume=l(Z.debugShowBoundingVolume,!1),this.rtcCenter=Z.rtcCenter,V(this.rtcCenter)&&(!V(this.geometryInstances)||Array.isArray(this.geometryInstances)&&this.geometryInstances.length!==1))throw new U("Relative-to-center rendering only supports one geometry instance.");this.shadows=l(Z.shadows,Aa.DISABLED),this._translucent=void 0,this._state=xm.READY,this._geometries=[],this._error=void 0,this._numberOfInstances=0,this._boundingSpheres=[],this._boundingSphereWC=[],this._boundingSphereCV=[],this._boundingSphere2D=[],this._boundingSphereMorph=[],this._perInstanceAttributeCache=new Map,this._instanceIds=[],this._lastPerInstanceAttributeIndex=0,this._va=[],this._attributeLocations=void 0,this._primitiveType=void 0,this._frontFaceRS=void 0,this._backFaceRS=void 0,this._sp=void 0,this._depthFailAppearance=void 0,this._spDepthFail=void 0,this._frontFaceDepthFailRS=void 0,this._backFaceDepthFailRS=void 0,this._pickIds=[],this._colorCommands=[],this._pickCommands=[],this._createBoundingVolumeFunction=Z._createBoundingVolumeFunction,this._createRenderStatesFunction=Z._createRenderStatesFunction,this._createShaderProgramFunction=Z._createShaderProgramFunction,this._createCommandsFunction=Z._createCommandsFunction,this._updateAndQueueCommandsFunction=Z._updateAndQueueCommandsFunction,this._createPickOffsets=Z._createPickOffsets,this._pickOffsets=void 0,this._createGeometryResults=void 0,this._ready=!1,this._batchTable=void 0,this._batchTableAttributeIndices=void 0,this._offsetInstanceExtend=void 0,this._batchTableOffsetAttribute2DIndex=void 0,this._batchTableOffsetsUpdated=!1,this._instanceBoundingSpheres=void 0,this._instanceBoundingSpheresCV=void 0,this._tempBoundingSpheres=void 0,this._recomputeBoundingSpheres=!1,this._batchTableBoundingSpheresUpdated=!1,this._batchTableBoundingSphereAttributeIndices=void 0}Object.defineProperties(Jm.prototype,{vertexCacheOptimize:{get:function(){return this._vertexCacheOptimize}},interleave:{get:function(){return this._interleave}},releaseGeometryInstances:{get:function(){return this._releaseGeometryInstances}},allowPicking:{get:function(){return this._allowPicking}},asynchronous:{get:function(){return this._asynchronous}},compressVertices:{get:function(){return this._compressVertices}},ready:{get:function(){return this._ready}}});function hU(Z){let m=Z.length,h=[],n=Z[0].attributes,i;for(i in n)if(n.hasOwnProperty(i)&&V(n[i])){let A=n[i],t=!0;for(let W=1;W<m;++W){let e=Z[W].attributes[i];if(!V(e)||A.componentDatatype!==e.componentDatatype||A.componentsPerAttribute!==e.componentsPerAttribute||A.normalize!==e.normalize){t=!1;break}}t&&h.push(i)}return h}var YU=new q,nU=new _,OG=new CZ;function wG(Z){let m=Z.length;if(m===1)return Z[0];if(m===2)return q.unpack(Z,0,YU);if(m===3)return _.unpack(Z,0,nU);if(m===4)return CZ.unpack(Z,0,OG)}function iU(Z,m){let h=Z.geometryInstances,n=Array.isArray(h)?h:[h],i=n.length;if(i===0)return;let A=hU(n),t=A.length,W=[],e={},G={},F,J=n[0].attributes,k,r,Q;for(k=0;k<t;++k)r=A[k],Q=J[r],e[r]=k,W.push({functionName:`czm_batchTable_${r}`,componentDatatype:Q.componentDatatype,componentsPerAttribute:Q.componentsPerAttribute,normalize:Q.normalize});A.indexOf("distanceDisplayCondition")!==-1&&(W.push({functionName:"czm_batchTable_boundingSphereCenter3DHigh",componentDatatype:WZ.FLOAT,componentsPerAttribute:3},{functionName:"czm_batchTable_boundingSphereCenter3DLow",componentDatatype:WZ.FLOAT,componentsPerAttribute:3},{functionName:"czm_batchTable_boundingSphereCenter2DHigh",componentDatatype:WZ.FLOAT,componentsPerAttribute:3},{functionName:"czm_batchTable_boundingSphereCenter2DLow",componentDatatype:WZ.FLOAT,componentsPerAttribute:3},{functionName:"czm_batchTable_boundingSphereRadius",componentDatatype:WZ.FLOAT,componentsPerAttribute:1}),G.center3DHigh=W.length-5,G.center3DLow=W.length-4,G.center2DHigh=W.length-3,G.center2DLow=W.length-2,G.radius=W.length-1),A.indexOf("offset")!==-1&&(W.push({functionName:"czm_batchTable_offset2D",componentDatatype:WZ.FLOAT,componentsPerAttribute:3}),F=W.length-1),W.push({functionName:"czm_batchTable_pickColor",componentDatatype:WZ.UNSIGNED_BYTE,componentsPerAttribute:4,normalize:!0});let p=W.length,T=new TG(m,W,i);for(k=0;k<i;++k){let I=n[k];J=I.attributes;for(let hZ=0;hZ<t;++hZ){r=A[hZ],Q=J[r];let K=wG(Q.value),tZ=e[r];T.setBatchedAttribute(k,tZ,K)}let f={primitive:l(I.pickPrimitive,Z)};V(I.id)&&(f.id=I.id);let b=m.createPickId(f);Z._pickIds.push(b);let O=b.color,v=OG;v.x=H.floatToByte(O.red),v.y=H.floatToByte(O.green),v.z=H.floatToByte(O.blue),v.w=H.floatToByte(O.alpha),T.setBatchedAttribute(k,p-1,v)}Z._batchTable=T,Z._batchTableAttributeIndices=e,Z._batchTableBoundingSphereAttributeIndices=G,Z._batchTableOffsetAttribute2DIndex=F}function AU(Z){let m;return Array.isArray(Z.values)?m=Z.values.slice(0):m=new Z.values.constructor(Z.values),new zW({componentDatatype:Z.componentDatatype,componentsPerAttribute:Z.componentsPerAttribute,normalize:Z.normalize,values:m})}function aU(Z){let m=Z.attributes,h=new vW;for(let i in m)m.hasOwnProperty(i)&&V(m[i])&&(h[i]=AU(m[i]));let n;if(V(Z.indices)){let i=Z.indices;Array.isArray(i)?n=i.slice(0):n=new i.constructor(i)}return new cA({attributes:h,indices:n,primitiveType:Z.primitiveType,boundingSphere:BZ.clone(Z.boundingSphere)})}function tU(Z,m){return{geometry:m,attributes:Z.attributes,modelMatrix:eZ.clone(Z.modelMatrix),pickPrimitive:Z.pickPrimitive,id:Z.id}}var WU=/in\s+vec(?:3|4)\s+(.*)3DHigh;/g;Jm._modifyShaderPosition=function(Z,m,h){let n,i="",A="",t="";for(;(n=WU.exec(m))!==null;){let W=n[1],e=`vec4 czm_compute${W[0].toUpperCase()}${W.substr(1)}()`;e!=="vec4 czm_computePosition()"&&(i+=`${e};
`),V(Z.rtcCenter)?(m=m.replace(/in\s+vec(?:3|4)\s+position3DHigh;/g,""),m=m.replace(/in\s+vec(?:3|4)\s+position3DLow;/g,""),i+=`uniform mat4 u_modifiedModelView;
`,A+=`in vec4 position;
`,t+=`${e}
{
    return u_modifiedModelView * position;
}

`,m=m.replace(/czm_modelViewRelativeToEye\s+\*\s+/g,""),m=m.replace(/czm_modelViewProjectionRelativeToEye/g,"czm_projection")):h?t+=`${e}
{
    return czm_translateRelativeToEye(${W}3DHigh, ${W}3DLow);
}

`:(A+=`in vec3 ${W}2DHigh;
in vec3 ${W}2DLow;
`,t+=`${e}
{
    vec4 p;
    if (czm_morphTime == 1.0)
    {
        p = czm_translateRelativeToEye(${W}3DHigh, ${W}3DLow);
    }
    else if (czm_morphTime == 0.0)
    {
        p = czm_translateRelativeToEye(${W}2DHigh.zxy, ${W}2DLow.zxy);
    }
    else
    {
        p = czm_columbusViewMorph(
                czm_translateRelativeToEye(${W}2DHigh.zxy, ${W}2DLow.zxy),
                czm_translateRelativeToEye(${W}3DHigh, ${W}3DLow),
                czm_morphTime);
    }
    return p;
}

`)}return[i,A,m,t].join(`
`)};Jm._appendShowToShader=function(Z,m){return V(Z._batchTableAttributeIndices.show)?`${zZ.replaceMain(m,"czm_non_show_main")}
void main() 
{ 
    czm_non_show_main(); 
    gl_Position *= czm_batchTable_show(batchId); 
}`:m};Jm._updateColorAttribute=function(Z,m,h){if(!V(Z._batchTableAttributeIndices.color)&&!V(Z._batchTableAttributeIndices.depthFailColor)||m.search(/in\s+vec4\s+color;/g)===-1)return m;if(h&&!V(Z._batchTableAttributeIndices.depthFailColor))throw new U("A depthFailColor per-instance attribute is required when using a depth fail appearance that uses a color attribute.");let n=m;return n=n.replace(/in\s+vec4\s+color;/g,""),h?n=n.replace(/(\b)color(\b)/g,"$1czm_batchTable_depthFailColor(batchId)$2"):n=n.replace(/(\b)color(\b)/g,"$1czm_batchTable_color(batchId)$2"),n};function MG(Z){return`${zZ.replaceMain(Z,"czm_non_pick_main")}
out vec4 v_pickColor; 
void main() 
{ 
    czm_non_pick_main(); 
    v_pickColor = czm_batchTable_pickColor(batchId); 
}`}function SG(Z){return`in vec4 v_pickColor;
${Z}`}Jm._updatePickColorAttribute=function(Z){let m=Z.replace(/in\s+vec4\s+pickColor;/g,"");return m=m.replace(/(\b)pickColor(\b)/g,"$1czm_batchTable_pickColor(batchId)$2"),m};Jm._appendOffsetToShader=function(Z,m){if(!V(Z._batchTableAttributeIndices.offset))return m;let h=`in float batchId;
`;h+="in float applyOffset;";let n=m.replace(/in\s+float\s+batchId;/g,h),i=`vec4 $1 = czm_computePosition();
`;return i+=`    if (czm_sceneMode == czm_sceneMode3D)
`,i+=`    {
`,i+="        $1 = $1 + vec4(czm_batchTable_offset(batchId) * applyOffset, 0.0);",i+=`    }
`,i+=`    else
`,i+=`    {
`,i+="        $1 = $1 + vec4(czm_batchTable_offset2D(batchId) * applyOffset, 0.0);",i+=`    }
`,n=n.replace(/vec4\s+([A-Za-z0-9_]+)\s+=\s+czm_computePosition\(\);/g,i),n};Jm._appendDistanceDisplayConditionToShader=function(Z,m,h){if(!V(Z._batchTableAttributeIndices.distanceDisplayCondition))return m;let n=zZ.replaceMain(m,"czm_non_distanceDisplayCondition_main"),i=`void main() 
{ 
    czm_non_distanceDisplayCondition_main(); 
    vec2 distanceDisplayCondition = czm_batchTable_distanceDisplayCondition(batchId);
    vec3 boundingSphereCenter3DHigh = czm_batchTable_boundingSphereCenter3DHigh(batchId);
    vec3 boundingSphereCenter3DLow = czm_batchTable_boundingSphereCenter3DLow(batchId);
    float boundingSphereRadius = czm_batchTable_boundingSphereRadius(batchId);
`;return h?i+=`    vec4 centerRTE = czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow);
`:i+=`    vec3 boundingSphereCenter2DHigh = czm_batchTable_boundingSphereCenter2DHigh(batchId);
    vec3 boundingSphereCenter2DLow = czm_batchTable_boundingSphereCenter2DLow(batchId);
    vec4 centerRTE;
    if (czm_morphTime == 1.0)
    {
        centerRTE = czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow);
    }
    else if (czm_morphTime == 0.0)
    {
        centerRTE = czm_translateRelativeToEye(boundingSphereCenter2DHigh.zxy, boundingSphereCenter2DLow.zxy);
    }
    else
    {
        centerRTE = czm_columbusViewMorph(
                czm_translateRelativeToEye(boundingSphereCenter2DHigh.zxy, boundingSphereCenter2DLow.zxy),
                czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow),
                czm_morphTime);
    }
`,i+=`    float radiusSq = boundingSphereRadius * boundingSphereRadius; 
    float distanceSq; 
    if (czm_sceneMode == czm_sceneMode2D) 
    { 
        distanceSq = czm_eyeHeight2D.y - radiusSq; 
    } 
    else 
    { 
        distanceSq = dot(centerRTE.xyz, centerRTE.xyz) - radiusSq; 
    } 
    distanceSq = max(distanceSq, 0.0); 
    float nearSq = distanceDisplayCondition.x * distanceDisplayCondition.x; 
    float farSq = distanceDisplayCondition.y * distanceDisplayCondition.y; 
    float show = (distanceSq >= nearSq && distanceSq <= farSq) ? 1.0 : 0.0; 
    gl_Position *= show; 
}`,`${n}
${i}`};function DG(Z,m){if(!Z.compressVertices)return m;let h=m.search(/in\s+vec3\s+normal;/g)!==-1,n=m.search(/in\s+vec2\s+st;/g)!==-1;if(!h&&!n)return m;let i=m.search(/in\s+vec3\s+tangent;/g)!==-1,A=m.search(/in\s+vec3\s+bitangent;/g)!==-1,t=n&&h?2:1;t+=i||A?1:0;let W=t>1?`vec${t}`:"float",e="compressedAttributes",G=`in ${W} ${e};`,F="",d="";if(n){F+=`vec2 st;
`;let r=t>1?`${e}.x`:e;d+=`    st = czm_decompressTextureCoordinates(${r});
`}h&&i&&A?(F+=`vec3 normal;
vec3 tangent;
vec3 bitangent;
`,d+=`    czm_octDecode(${e}.${n?"yz":"xy"}, normal, tangent, bitangent);
`):(h&&(F+=`vec3 normal;
`,d+=`    normal = czm_octDecode(${e}${t>1?`.${n?"y":"x"}`:""});
`),i&&(F+=`vec3 tangent;
`,d+=`    tangent = czm_octDecode(${e}.${n&&h?"z":"y"});
`),A&&(F+=`vec3 bitangent;
`,d+=`    bitangent = czm_octDecode(${e}.${n&&h?"z":"y"});
`));let J=m;J=J.replace(/in\s+vec3\s+normal;/g,""),J=J.replace(/in\s+vec2\s+st;/g,""),J=J.replace(/in\s+vec3\s+tangent;/g,""),J=J.replace(/in\s+vec3\s+bitangent;/g,""),J=zZ.replaceMain(J,"czm_non_compressed_main");let k=`void main() 
{ 
${d}    czm_non_compressed_main(); 
}`;return[G,F,J,k].join(`
`)}function eU(Z){let m=zZ.replaceMain(Z,"czm_non_depth_clamp_main");return m+=`void main() {
    czm_non_depth_clamp_main();
    gl_Position = czm_depthClamp(gl_Position);}
`,m}function oU(Z){let m=zZ.replaceMain(Z,"czm_non_depth_clamp_main");return m+=`void main() {
    czm_non_depth_clamp_main();
    #if defined(LOG_DEPTH)
        czm_writeLogDepth();
    #else
        czm_writeDepthClamp();
    #endif
}
`,m}function fG(Z,m){let h=Z.vertexAttributes;for(let n in h)if(h.hasOwnProperty(n)&&!V(m[n]))throw new U(`Appearance/Geometry mismatch.  The appearance requires vertex shader attribute input '${n}', which was not computed as part of the Geometry.  Use the appearance's vertexFormat property when constructing the geometry.`)}function VU(Z,m){return function(){return Z[m]}}var pt=Math.max(CY.hardwareConcurrency-1,1),aa,lU=new $Y("combineGeometry");function RU(Z,m){let h,n,i,A,t=Z._instanceIds;if(Z._state===xm.READY){h=Array.isArray(Z.geometryInstances)?Z.geometryInstances:[Z.geometryInstances];let W=Z._numberOfInstances=h.length,e=[],G=[];for(i=0;i<W;++i){if(n=h[i].geometry,t.push(h[i].id),!V(n._workerName))throw new U("_workerName must be defined for asynchronous geometry.");G.push({moduleName:n._workerName,geometry:n})}if(!V(aa))for(aa=new Array(pt),i=0;i<pt;i++)aa[i]=new $Y("createGeometry");let F;for(G=pG(G,pt),i=0;i<G.length;i++){let d=0,J=G[i],k=J.length;for(A=0;A<k;++A)F=J[A],n=F.geometry,V(n.constructor.pack)&&(F.offset=d,d+=l(n.constructor.packedLength,n.packedLength));let r;if(d>0){let Q=new Float64Array(d);for(r=[Q.buffer],A=0;A<k;++A)F=J[A],n=F.geometry,V(n.constructor.pack)&&(n.constructor.pack(n,Q,F.offset),F.geometry=Q)}e.push(aa[i].scheduleTask({subTasks:G[i]},r))}Z._state=xm.CREATING,Promise.all(e).then(function(d){Z._createGeometryResults=d,Z._state=xm.CREATED}).catch(function(d){Hi(Z,m,xm.FAILED,d)})}else if(Z._state===xm.CREATED){let W=[];h=Array.isArray(Z.geometryInstances)?Z.geometryInstances:[Z.geometryInstances];let e=m.scene3DOnly,G=m.mapProjection,F=lU.scheduleTask(TA.packCombineGeometryParameters({createGeometryResults:Z._createGeometryResults,instances:h,ellipsoid:G.ellipsoid,projection:G,elementIndexUintSupported:m.context.elementIndexUint,scene3DOnly:e,vertexCacheOptimize:Z.vertexCacheOptimize,compressVertices:Z.compressVertices,modelMatrix:Z.modelMatrix,createPickOffsets:Z._createPickOffsets},W),W);Z._createGeometryResults=void 0,Z._state=xm.COMBINING,Promise.resolve(F).then(function(d){let J=TA.unpackCombineGeometryResults(d);Z._geometries=J.geometries,Z._attributeLocations=J.attributeLocations,Z.modelMatrix=eZ.clone(J.modelMatrix,Z.modelMatrix),Z._pickOffsets=J.pickOffsets,Z._offsetInstanceExtend=J.offsetInstanceExtend,Z._instanceBoundingSpheres=J.boundingSpheres,Z._instanceBoundingSpheresCV=J.boundingSpheresCV,V(Z._geometries)&&Z._geometries.length>0?(Z._recomputeBoundingSpheres=!0,Z._state=xm.COMBINED):Hi(Z,m,xm.FAILED,void 0)}).catch(function(d){Hi(Z,m,xm.FAILED,d)})}}function GU(Z,m){let h=Array.isArray(Z.geometryInstances)?Z.geometryInstances:[Z.geometryInstances],n=Z._numberOfInstances=h.length,i=new Array(n),A=Z._instanceIds,t,W,e=0;for(W=0;W<n;W++){t=h[W];let J=t.geometry,k;V(J.attributes)&&V(J.primitiveType)?k=aU(J):k=J.constructor.createGeometry(J),i[e++]=tU(t,k),A.push(t.id)}i.length=e;let G=m.scene3DOnly,F=m.mapProjection,d=TA.combineGeometry({instances:i,ellipsoid:F.ellipsoid,projection:F,elementIndexUintSupported:m.context.elementIndexUint,scene3DOnly:G,vertexCacheOptimize:Z.vertexCacheOptimize,compressVertices:Z.compressVertices,modelMatrix:Z.modelMatrix,createPickOffsets:Z._createPickOffsets});Z._geometries=d.geometries,Z._attributeLocations=d.attributeLocations,Z.modelMatrix=eZ.clone(d.modelMatrix,Z.modelMatrix),Z._pickOffsets=d.pickOffsets,Z._offsetInstanceExtend=d.offsetInstanceExtend,Z._instanceBoundingSpheres=d.boundingSpheres,Z._instanceBoundingSpheresCV=d.boundingSpheresCV,V(Z._geometries)&&Z._geometries.length>0?(Z._recomputeBoundingSpheres=!0,Z._state=xm.COMBINED):Hi(Z,m,xm.FAILED,void 0)}function FU(Z,m){let h=Z._batchTableAttributeIndices.offset;if(!Z._recomputeBoundingSpheres||!V(h)){Z._recomputeBoundingSpheres=!1;return}let n,i=Z._offsetInstanceExtend,A=Z._instanceBoundingSpheres,t=A.length,W=Z._tempBoundingSpheres;if(!V(W)){for(W=new Array(t),n=0;n<t;n++)W[n]=new BZ;Z._tempBoundingSpheres=W}for(n=0;n<t;++n){let Q=W[n],p=Z._batchTable.getBatchedAttribute(n,h,new _);Q=A[n].clone(Q),XG(Q,p,i[n])}let e=[],G=[],F=[];for(n=0;n<t;++n){let Q=W[n];Q.center.x-Q.radius>0||BZ.intersectPlane(Q,OW.ORIGIN_ZX_PLANE)!==bW.INTERSECTING?e.push(Q):(G.push(Q),F.push(Q))}let d=e[0],J=F[0],k=G[0];for(n=1;n<e.length;n++)d=BZ.union(d,e[n]);for(n=1;n<F.length;n++)J=BZ.union(J,F[n]);for(n=1;n<G.length;n++)k=BZ.union(k,G[n]);let r=[];for(V(d)&&r.push(d),V(J)&&r.push(J),V(k)&&r.push(k),n=0;n<r.length;n++){let Q=r[n].clone(Z._boundingSpheres[n]);Z._boundingSpheres[n]=Q,Z._boundingSphereCV[n]=BZ.projectTo2D(Q,m.mapProjection,Z._boundingSphereCV[n])}Jm._updateBoundingVolumes(Z,m,Z.modelMatrix,!0),Z._recomputeBoundingSpheres=!1}var uG=new Pm,yG=new nm,HG=new _,zG=new BZ;function dU(Z,m){if(!V(Z._batchTableAttributeIndices.distanceDisplayCondition)||Z._batchTableBoundingSpheresUpdated)return;let n=Z._batchTableBoundingSphereAttributeIndices,i=n.center3DHigh,A=n.center3DLow,t=n.center2DHigh,W=n.center2DLow,e=n.radius,G=m.mapProjection,F=G.ellipsoid,d=Z._batchTable,J=Z._instanceBoundingSpheres,k=J.length;for(let r=0;r<k;++r){let Q=J[r];if(!V(Q))continue;let p=Z.modelMatrix;V(p)&&(Q=BZ.transform(Q,p,zG));let T=Q.center,I=Q.radius,f=Pm.fromCartesian(T,uG);if(d.setBatchedAttribute(r,i,f.high),d.setBatchedAttribute(r,A,f.low),!m.scene3DOnly){let b=F.cartesianToCartographic(T,yG),O=G.project(b,HG);f=Pm.fromCartesian(O,uG),d.setBatchedAttribute(r,t,f.high),d.setBatchedAttribute(r,W,f.low)}d.setBatchedAttribute(r,e,I)}Z._batchTableBoundingSpheresUpdated=!0}var jt=new _,sU=new _;function bG(Z,m){if(!V(Z._batchTableAttributeIndices.offset)||Z._batchTableOffsetsUpdated||m.scene3DOnly)return;let n=Z._batchTableOffsetAttribute2DIndex,i=m.mapProjection,A=i.ellipsoid,t=Z._batchTable,W=Z._instanceBoundingSpheres,e=W.length;for(let G=0;G<e;++G){let F=W[G];if(!V(F))continue;let d=t.getBatchedAttribute(G,Z._batchTableAttributeIndices.offset);if(_.equals(d,_.ZERO)){t.setBatchedAttribute(G,n,_.ZERO);continue}let J=Z.modelMatrix;V(J)&&(F=BZ.transform(F,J,zG));let k=F.center;k=A.scaleToGeodeticSurface(k,sU);let r=A.cartesianToCartographic(k,yG),Q=i.project(r,HG),p=_.add(d,k,jt);r=A.cartesianToCartographic(p,r);let T=i.project(r,jt),I=_.subtract(T,Q,jt),f=I.x;I.x=I.z,I.z=I.y,I.y=f,t.setBatchedAttribute(G,n,I)}Z._batchTableOffsetsUpdated=!0}function rU(Z,m){let h=Z._attributeLocations,n=Z._geometries,i=m.scene3DOnly,A=m.context,t=[],W=n.length;for(let e=0;e<W;++e){let G=n[e];if(t.push(zA.fromGeometry({context:A,geometry:G,attributeLocations:h,bufferUsage:jZ.STATIC_DRAW,interleave:Z._interleave})),V(Z._createBoundingVolumeFunction))Z._createBoundingVolumeFunction(m,G);else if(Z._boundingSpheres.push(BZ.clone(G.boundingSphere)),Z._boundingSphereWC.push(new BZ),!i){let F=G.boundingSphereCV.center,d=F.x,J=F.y,k=F.z;F.x=k,F.y=d,F.z=J,Z._boundingSphereCV.push(BZ.clone(G.boundingSphereCV)),Z._boundingSphere2D.push(new BZ),Z._boundingSphereMorph.push(new BZ)}}Z._va=t,Z._primitiveType=n[0].primitiveType,Z.releaseGeometryInstances&&(Z.geometryInstances=void 0),Z._geometries=void 0,Hi(Z,m,xm.COMPLETE,void 0)}function NU(Z,m,h,n){let i=h.getRenderState(),A;n?(A=Ph(i,!1),A.cull={enabled:!0,face:MY.BACK},Z._frontFaceRS=Vm.fromCache(A),A.cull.face=MY.FRONT,Z._backFaceRS=Vm.fromCache(A)):(Z._frontFaceRS=Vm.fromCache(i),Z._backFaceRS=Z._frontFaceRS),A=Ph(i,!1),V(Z._depthFailAppearance)&&(A.depthTest.enabled=!1),V(Z._depthFailAppearance)&&(i=Z._depthFailAppearance.getRenderState(),A=Ph(i,!1),A.depthTest.func=ia.GREATER,n?(A.cull={enabled:!0,face:MY.BACK},Z._frontFaceDepthFailRS=Vm.fromCache(A),A.cull.face=MY.FRONT,Z._backFaceDepthFailRS=Vm.fromCache(A)):(Z._frontFaceDepthFailRS=Vm.fromCache(A),Z._backFaceDepthFailRS=Z._frontFaceRS))}function EU(Z,m,h){let n=m.context,i=Z._attributeLocations,A=Z._batchTable.getVertexShaderCallback()(h.vertexShaderSource);A=Jm._appendOffsetToShader(Z,A),A=Jm._appendShowToShader(Z,A),A=Jm._appendDistanceDisplayConditionToShader(Z,A,m.scene3DOnly),A=MG(A),A=Jm._updateColorAttribute(Z,A,!1),A=DG(Z,A),A=Jm._modifyShaderPosition(Z,A,m.scene3DOnly);let t=h.getFragmentShaderSource();t=SG(t),Z._sp=fm.replaceCache({context:n,shaderProgram:Z._sp,vertexShaderSource:A,fragmentShaderSource:t,attributeLocations:i}),fG(Z._sp,i),V(Z._depthFailAppearance)&&(A=Z._batchTable.getVertexShaderCallback()(Z._depthFailAppearance.vertexShaderSource),A=Jm._appendShowToShader(Z,A),A=Jm._appendDistanceDisplayConditionToShader(Z,A,m.scene3DOnly),A=MG(A),A=Jm._updateColorAttribute(Z,A,!0),A=DG(Z,A),A=Jm._modifyShaderPosition(Z,A,m.scene3DOnly),A=eU(A),t=Z._depthFailAppearance.getFragmentShaderSource(),t=SG(t),t=oU(t),Z._spDepthFail=fm.replaceCache({context:n,shaderProgram:Z._spDepthFail,vertexShaderSource:A,fragmentShaderSource:t,attributeLocations:i}),fG(Z._spDepthFail,i))}var yi=new eZ,xG=new _;function _G(Z,m,h,n){let i=V(h)?h._uniforms:void 0,A={},t=m.uniforms;if(V(t)){for(let e in t)if(t.hasOwnProperty(e)){if(V(i)&&V(i[e]))throw new U(`Appearance and material have a uniform with the same name: ${e}`);A[e]=VU(t,e)}}let W=Kh(A,i);return W=Z._batchTable.getUniformMapCallback()(W),V(Z.rtcCenter)&&(W.u_modifiedModelView=function(){let e=n.context.uniformState.view;return eZ.multiply(e,Z._modelMatrix,yi),eZ.multiplyByPoint(yi,Z.rtcCenter,xG),eZ.setTranslation(yi,xG,yi),yi}),W}function kU(Z,m,h,n,i,A,t,W){let e=_G(Z,m,h,W),G;V(Z._depthFailAppearance)&&(G=_G(Z,Z._depthFailAppearance,Z._depthFailAppearance.material,W));let F=n?gm.TRANSLUCENT:gm.OPAQUE,d=i?2:1;d*=V(Z._depthFailAppearance)?2:1,A.length=Z._va.length*d;let J=A.length,k=0;for(let r=0;r<J;++r){let Q;i&&(Q=A[r],V(Q)||(Q=A[r]=new Am({owner:Z,primitiveType:Z._primitiveType})),Q.vertexArray=Z._va[k],Q.renderState=Z._backFaceRS,Q.shaderProgram=Z._sp,Q.uniformMap=e,Q.pass=F,++r),Q=A[r],V(Q)||(Q=A[r]=new Am({owner:Z,primitiveType:Z._primitiveType})),Q.vertexArray=Z._va[k],Q.renderState=Z._frontFaceRS,Q.shaderProgram=Z._sp,Q.uniformMap=e,Q.pass=F,V(Z._depthFailAppearance)&&(i&&(++r,Q=A[r],V(Q)||(Q=A[r]=new Am({owner:Z,primitiveType:Z._primitiveType})),Q.vertexArray=Z._va[k],Q.renderState=Z._backFaceDepthFailRS,Q.shaderProgram=Z._spDepthFail,Q.uniformMap=G,Q.pass=F),++r,Q=A[r],V(Q)||(Q=A[r]=new Am({owner:Z,primitiveType:Z._primitiveType})),Q.vertexArray=Z._va[k],Q.renderState=Z._frontFaceDepthFailRS,Q.shaderProgram=Z._spDepthFail,Q.uniformMap=G,Q.pass=F),++k}}Jm._updateBoundingVolumes=function(Z,m,h,n){let i,A,t;if(n||!eZ.equals(h,Z._modelMatrix))for(eZ.clone(h,Z._modelMatrix),A=Z._boundingSpheres.length,i=0;i<A;++i)t=Z._boundingSpheres[i],V(t)&&(Z._boundingSphereWC[i]=BZ.transform(t,h,Z._boundingSphereWC[i]),m.scene3DOnly||(Z._boundingSphere2D[i]=BZ.clone(Z._boundingSphereCV[i],Z._boundingSphere2D[i]),Z._boundingSphere2D[i].center.x=0,Z._boundingSphereMorph[i]=BZ.union(Z._boundingSphereWC[i],Z._boundingSphereCV[i])));let W=Z.appearance.pixelSize;if(V(W))for(A=Z._boundingSpheres.length,i=0;i<A;++i){t=Z._boundingSpheres[i];let e=Z._boundingSphereWC[i],F=m.camera.getPixelSize(t,m.context.drawingBufferWidth,m.context.drawingBufferHeight)*W;e.radius=t.radius+F}};function UU(Z,m,h,n,i,A,t,W){if(m.mode!==UZ.SCENE3D&&!eZ.equals(i,eZ.IDENTITY))throw new U("Primitive.modelMatrix is only supported in 3D mode.");Jm._updateBoundingVolumes(Z,m,i);let e;m.mode===UZ.SCENE3D?e=Z._boundingSphereWC:m.mode===UZ.COLUMBUS_VIEW?e=Z._boundingSphereCV:m.mode===UZ.SCENE2D&&V(Z._boundingSphere2D)?e=Z._boundingSphere2D:V(Z._boundingSphereMorph)&&(e=Z._boundingSphereMorph);let G=m.commandList,F=m.passes;if(F.render||F.pick){let d=Z.allowPicking,J=Aa.castShadows(Z.shadows),k=Aa.receiveShadows(Z.shadows),r=h.length,Q=W?2:1;Q*=V(Z._depthFailAppearance)?2:1;for(let p=0;p<r;++p){let T=Math.floor(p/Q),I=h[p];I.modelMatrix=i,I.boundingVolume=e[T],I.cull=A,I.debugShowBoundingVolume=t,I.castShadows=J,I.receiveShadows=k,d?I.pickId="v_pickColor":I.pickId=void 0,G.push(I)}}}Jm.prototype.update=function(Z){if(!V(this.geometryInstances)&&this._va.length===0||V(this.geometryInstances)&&Array.isArray(this.geometryInstances)&&this.geometryInstances.length===0||!V(this.appearance)||Z.mode!==UZ.SCENE3D&&Z.scene3DOnly||!Z.passes.render&&!Z.passes.pick)return;if(V(this._error))throw this._error;if(V(this.rtcCenter)&&!Z.scene3DOnly)throw new U("RTC rendering is only available for 3D only scenes.");if(this._state===xm.FAILED)return;let m=Z.context;if(V(this._batchTable)||iU(this,m),this._batchTable.attributes.length>0){if($Z.maximumVertexTextureImageUnits===0)throw new Sm("Vertex texture fetch support is required to render primitives with per-instance attributes. The maximum number of vertex texture image units must be greater than zero.");this._batchTable.update(Z)}if(this._state!==xm.COMPLETE&&this._state!==xm.COMBINED&&(this.asynchronous?RU(this,Z):GU(this,Z)),this._state===xm.COMBINED&&(dU(this,Z),bG(this,Z),rU(this,Z)),!this.show||this._state!==xm.COMPLETE)return;this._batchTableOffsetsUpdated||bG(this,Z),this._recomputeBoundingSpheres&&FU(this,Z);let h=this.appearance,n=h.material,i=!1,A=!1;this._appearance!==h?(this._appearance=h,this._material=n,i=!0,A=!0):this._material!==n&&(this._material=n,A=!0);let t=this.depthFailAppearance,W=V(t)?t.material:void 0;this._depthFailAppearance!==t?(this._depthFailAppearance=t,this._depthFailMaterial=W,i=!0,A=!0):this._depthFailMaterial!==W&&(this._depthFailMaterial=W,A=!0);let e=this._appearance.isTranslucent();this._translucent!==e&&(this._translucent=e,i=!0),V(this._material)&&this._material.update(m);let G=h.closed&&e;i&&l(this._createRenderStatesFunction,NU)(this,m,h,G),A&&l(this._createShaderProgramFunction,EU)(this,Z,h),(i||A)&&l(this._createCommandsFunction,kU)(this,h,n,e,G,this._colorCommands,this._pickCommands,Z),l(this._updateAndQueueCommandsFunction,UU)(this,Z,this._colorCommands,this._pickCommands,this.modelMatrix,this.cull,this.debugShowBoundingVolume,G)};var JU=new BZ,QU=new BZ;function XG(Z,m,h){if(h===Oa.TOP){let n=BZ.clone(Z,JU),i=BZ.clone(Z,QU);i.center=_.add(i.center,m,i.center),Z=BZ.union(n,i,Z)}else h===Oa.ALL&&(Z.center=_.add(Z.center,m,Z.center));return Z}function CU(Z,m,h){return function(){let n=Z.getBatchedAttribute(m,h),i=Z.attributes[h],A=i.componentsPerAttribute,t=WZ.createTypedArray(i.componentDatatype,A);return V(n.constructor.pack)?n.constructor.pack(n,t,0):t[0]=n,t}}function BU(Z,m,h,n,i){return function(A){if(!V(A)||!V(A.length)||A.length<1||A.length>4)throw new U("value must be and array with length between 1 and 4.");let t=wG(A);Z.setBatchedAttribute(m,h,t),i==="offset"&&(n._recomputeBoundingSpheres=!0,n._batchTableOffsetsUpdated=!1)}}var gU=new _;function IU(Z,m,h){m.boundingSphere={get:function(){let n=Z._instanceBoundingSpheres[h];if(V(n)){n=n.clone();let i=Z.modelMatrix,A=m.offset;V(A)&&XG(n,_.fromArray(A.get(),0,gU),Z._offsetInstanceExtend[h]),V(i)&&(n=BZ.transform(n,i))}return n}},m.boundingSphereCV={get:function(){return Z._instanceBoundingSpheresCV[h]}}}function pU(Z,m,h){m.pickId={get:function(){return Z._pickIds[h]}}}Jm.prototype.getGeometryInstanceAttributes=function(Z){if(!V(Z))throw new U("id is required");if(!V(this._batchTable))throw new U("must call update before calling getGeometryInstanceAttributes");let m=this._perInstanceAttributeCache.get(Z);if(V(m))return m;let h=-1,n=this._lastPerInstanceAttributeIndex,i=this._instanceIds,A=i.length;for(let G=0;G<A;++G){let F=(n+G)%A;if(Z===i[F]){h=F;break}}if(h===-1)return;let t=this._batchTable,W=this._batchTableAttributeIndices;m={};let e={};for(let G in W)if(W.hasOwnProperty(G)){let F=W[G];e[G]={get:CU(t,h,F),set:BU(t,h,F,this,G)}}return IU(this,e,h),pU(this,e,h),Object.defineProperties(m,e),this._lastPerInstanceAttributeIndex=h,this._perInstanceAttributeCache.set(Z,m),m};Jm.prototype.isDestroyed=function(){return!1};Jm.prototype.destroy=function(){let Z,m;this._sp=this._sp&&this._sp.destroy(),this._spDepthFail=this._spDepthFail&&this._spDepthFail.destroy();let h=this._va;for(Z=h.length,m=0;m<Z;++m)h[m].destroy();this._va=void 0;let n=this._pickIds;for(Z=n.length,m=0;m<Z;++m)n[m].destroy();return this._pickIds=void 0,this._batchTable=this._batchTable&&this._batchTable.destroy(),this._instanceIds=void 0,this._perInstanceAttributeCache=void 0,this._attributeLocations=void 0,cZ(this)};function Hi(Z,m,h,n){Z._error=n,Z._state=h,m.afterRender.push(function(){if(Z._ready=Z._state===xm.COMPLETE||Z._state===xm.FAILED,!V(n))return!0})}var nh=Jm;var jU={NEVER:S.NEVER,LESS:S.LESS,EQUAL:S.EQUAL,LESS_OR_EQUAL:S.LEQUAL,GREATER:S.GREATER,NOT_EQUAL:S.NOTEQUAL,GREATER_OR_EQUAL:S.GEQUAL,ALWAYS:S.ALWAYS},jh=Object.freeze(jU);var cU={ZERO:S.ZERO,KEEP:S.KEEP,REPLACE:S.REPLACE,INCREMENT:S.INCR,DECREMENT:S.DECR,INVERT:S.INVERT,INCREMENT_WRAP:S.INCR_WRAP,DECREMENT_WRAP:S.DECR_WRAP},vZ=Object.freeze(cU);var ta={CESIUM_3D_TILE_MASK:128,SKIP_LOD_MASK:112,SKIP_LOD_BIT_SHIFT:4,CLASSIFICATION_MASK:15};ta.setCesium3DTileBit=function(){return{enabled:!0,frontFunction:jh.ALWAYS,frontOperation:{fail:vZ.KEEP,zFail:vZ.KEEP,zPass:vZ.REPLACE},backFunction:jh.ALWAYS,backOperation:{fail:vZ.KEEP,zFail:vZ.KEEP,zPass:vZ.REPLACE},reference:ta.CESIUM_3D_TILE_MASK,mask:ta.CESIUM_3D_TILE_MASK}};var AY=Object.freeze(ta);function fY(Z){Z=l(Z,l.EMPTY_OBJECT),this.geometryInstances=Z.geometryInstances,this._hasPerInstanceColors=!0;let m=Z.appearance;V(m)||(m=new IG),this.appearance=m,this.show=l(Z.show,!0),this.classificationType=l(Z.classificationType,yh.BOTH),this.debugShowBoundingVolume=l(Z.debugShowBoundingVolume,!1),this._debugShowShadowVolume=l(Z.debugShowShadowVolume,!1),this._primitiveOptions={geometryInstances:void 0,appearance:void 0,vertexCacheOptimize:!1,interleave:l(Z.interleave,!1),releaseGeometryInstances:l(Z.releaseGeometryInstances,!0),allowPicking:l(Z.allowPicking,!0),asynchronous:l(Z.asynchronous,!0),compressVertices:!1,_createShaderProgramFunction:void 0,_createCommandsFunction:void 0,_updateAndQueueCommandsFunction:void 0},this._zIndex=void 0,this._ready=!1,this._primitive=void 0,this._sp=void 0,this._sp2D=void 0,this._spMorph=void 0,this._renderState=LG(!1),this._renderState3DTiles=LG(!0),this._renderStateMorph=Vm.fromCache({cull:{enabled:!0,face:MY.FRONT},depthTest:{enabled:!0},blending:fh.PRE_MULTIPLIED_ALPHA_BLEND,depthMask:!1})}Object.defineProperties(fY.prototype,{interleave:{get:function(){return this._primitiveOptions.interleave}},releaseGeometryInstances:{get:function(){return this._primitiveOptions.releaseGeometryInstances}},allowPicking:{get:function(){return this._primitiveOptions.allowPicking}},asynchronous:{get:function(){return this._primitiveOptions.asynchronous}},ready:{get:function(){return this._ready}},debugShowShadowVolume:{get:function(){return this._debugShowShadowVolume}}});fY.initializeTerrainHeights=function(){return qh.initialize()};function TU(Z,m,h){let n=m.context,i=Z._primitive,A=i._attributeLocations,t=i._batchTable.getVertexShaderCallback()(PR);t=nh._appendShowToShader(i,t),t=nh._appendDistanceDisplayConditionToShader(i,t),t=nh._modifyShaderPosition(Z,t,m.scene3DOnly);let W=i._batchTable.getVertexShaderCallback()(vR);W=nh._appendShowToShader(i,W),W=nh._appendDistanceDisplayConditionToShader(i,W),W=nh._modifyShaderPosition(Z,W,m.scene3DOnly);let e=i._batchTable.getVertexShaderCallback()(XR),G=[`GLOBE_MINIMUM_ALTITUDE ${m.mapProjection.ellipsoid.minimumRadius.toFixed(1)}`],F="",d="";V(h.material)?(d=V(h.material)?h.material.shaderSource:"",d.search(/in\s+float\s+v_polylineAngle;/g)!==-1&&G.push("ANGLE_VARYING"),d.search(/in\s+float\s+v_width;/g)!==-1&&G.push("WIDTH_VARYING")):F="PER_INSTANCE_COLOR",G.push(F);let J=Z.debugShowShadowVolume?["DEBUG_SHOW_VOLUME",F]:[F],k=new zZ({defines:G,sources:[t]}),r=new zZ({defines:J,sources:[d,e]});Z._sp=fm.replaceCache({context:n,shaderProgram:i._sp,vertexShaderSource:k,fragmentShaderSource:r,attributeLocations:A});let Q=n.shaderCache.getDerivedShaderProgram(Z._sp,"2dColor");if(!V(Q)){let T=new zZ({defines:G.concat(["COLUMBUS_VIEW_2D"]),sources:[t]});Q=n.shaderCache.createDerivedShaderProgram(Z._sp,"2dColor",{context:n,shaderProgram:Z._sp2D,vertexShaderSource:T,fragmentShaderSource:r,attributeLocations:A})}Z._sp2D=Q;let p=n.shaderCache.getDerivedShaderProgram(Z._sp,"MorphColor");if(!V(p)){let T=new zZ({defines:G.concat([`MAX_TERRAIN_HEIGHT ${qh._defaultMaxTerrainHeight.toFixed(1)}`]),sources:[W]});e=i._batchTable.getVertexShaderCallback()(LR);let I=new zZ({defines:J,sources:[d,e]});p=n.shaderCache.createDerivedShaderProgram(Z._sp,"MorphColor",{context:n,shaderProgram:Z._spMorph,vertexShaderSource:T,fragmentShaderSource:I,attributeLocations:A})}Z._spMorph=p}function LG(Z){return Vm.fromCache({cull:{enabled:!0},blending:fh.PRE_MULTIPLIED_ALPHA_BLEND,depthMask:!1,stencilTest:{enabled:Z,frontFunction:jh.EQUAL,frontOperation:{fail:vZ.KEEP,zFail:vZ.KEEP,zPass:vZ.KEEP},backFunction:jh.EQUAL,backOperation:{fail:vZ.KEEP,zFail:vZ.KEEP,zPass:vZ.KEEP},reference:AY.CESIUM_3D_TILE_MASK,mask:AY.CESIUM_3D_TILE_MASK}})}function MU(Z,m,h,n,i,A){let t=Z._primitive,W=t._va.length;i.length=W,A.length=W;let G=m instanceof kt?{}:h._uniforms,F=t._batchTable.getUniformMapCallback()(G);for(let d=0;d<W;d++){let J=t._va[d],k=i[d];V(k)||(k=i[d]=new Am({owner:Z,primitiveType:t._primitiveType})),k.vertexArray=J,k.renderState=Z._renderState,k.shaderProgram=Z._sp,k.uniformMap=F,k.pass=gm.TERRAIN_CLASSIFICATION,k.pickId="czm_batchTable_pickColor(v_endPlaneNormalEcAndBatchId.w)";let r=Am.shallowClone(k,k.derivedCommands.tileset);r.renderState=Z._renderState3DTiles,r.pass=gm.CESIUM_3D_TILE_CLASSIFICATION,k.derivedCommands.tileset=r;let Q=Am.shallowClone(k,k.derivedCommands.color2D);Q.shaderProgram=Z._sp2D,k.derivedCommands.color2D=Q;let p=Am.shallowClone(r,r.derivedCommands.color2D);p.shaderProgram=Z._sp2D,r.derivedCommands.color2D=p;let T=Am.shallowClone(k,k.derivedCommands.colorMorph);T.renderState=Z._renderStateMorph,T.shaderProgram=Z._spMorph,T.pickId="czm_batchTable_pickColor(v_batchId)",k.derivedCommands.colorMorph=T}}function vG(Z,m,h,n,i,A,t){h.mode===UZ.MORPHING?m=m.derivedCommands.colorMorph:h.mode!==UZ.SCENE3D&&(m=m.derivedCommands.color2D),m.modelMatrix=n,m.boundingVolume=A,m.cull=i,m.debugShowBoundingVolume=t,h.commandList.push(m)}function SU(Z,m,h,n,i,A,t){let W=Z._primitive;nh._updateBoundingVolumes(W,m,i);let e;m.mode===UZ.SCENE3D?e=W._boundingSphereWC:m.mode===UZ.COLUMBUS_VIEW?e=W._boundingSphereCV:m.mode===UZ.SCENE2D&&V(W._boundingSphere2D)?e=W._boundingSphere2D:V(W._boundingSphereMorph)&&(e=W._boundingSphereMorph);let G=m.mode===UZ.MORPHING,F=Z.classificationType,d=F!==yh.CESIUM_3D_TILE,J=F!==yh.TERRAIN&&!G,k,r=m.passes;if(r.render||r.pick&&W.allowPicking){let Q=h.length;for(let p=0;p<Q;++p){let T=e[p];d&&(k=h[p],vG(Z,k,m,i,A,T,t)),J&&(k=h[p].derivedCommands.tileset,vG(Z,k,m,i,A,T,t))}}}fY.prototype.update=function(Z){if(!V(this._primitive)&&!V(this.geometryInstances))return;if(!qh.initialized){if(!this.asynchronous)throw new U("For synchronous GroundPolylinePrimitives, you must call GroundPolylinePrimitives.initializeTerrainHeights() and wait for the returned promise to resolve.");fY.initializeTerrainHeights();return}let m,h=this,n=this._primitiveOptions;if(!V(this._primitive)){let i=Array.isArray(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],A=i.length,t=new Array(A),W;for(m=0;m<A;++m)if(W=i[m].attributes,!V(W)||!V(W.color)){this._hasPerInstanceColors=!1;break}for(m=0;m<A;++m){let e=i[m];W={};let G=e.attributes;for(let F in G)G.hasOwnProperty(F)&&(W[F]=G[F]);V(W.width)||(W.width=new Ih({componentDatatype:WZ.UNSIGNED_BYTE,componentsPerAttribute:1,value:[e.geometry.width]})),e.geometry._scene3DOnly=Z.scene3DOnly,LW.setProjectionAndEllipsoid(e.geometry,Z.mapProjection),t[m]=new sn({geometry:e.geometry,attributes:W,id:e.id,pickPrimitive:h})}n.geometryInstances=t,n.appearance=this.appearance,n._createShaderProgramFunction=function(e,G,F){TU(h,G,F)},n._createCommandsFunction=function(e,G,F,d,J,k,r){MU(h,G,F,d,k,r)},n._updateAndQueueCommandsFunction=function(e,G,F,d,J,k,r,Q){SU(h,G,F,d,J,k,r)},this._primitive=new nh(n)}if(this.appearance instanceof kt&&!this._hasPerInstanceColors)throw new U("All GeometryInstances must have color attributes to use PolylineColorAppearance with GroundPolylinePrimitive.");this._primitive.appearance=this.appearance,this._primitive.show=this.show,this._primitive.debugShowBoundingVolume=this.debugShowBoundingVolume,this._primitive.update(Z),Z.afterRender.push(()=>{!this._ready&&V(this._primitive)&&this._primitive.ready&&(this._ready=!0,this.releaseGeometryInstances&&(this.geometryInstances=void 0))})};fY.prototype.getGeometryInstanceAttributes=function(Z){if(!V(this._primitive))throw new U("must call update before calling getGeometryInstanceAttributes");return this._primitive.getGeometryInstanceAttributes(Z)};fY.isSupported=function(Z){return Z.frameState.context.depthTexture};fY.prototype.isDestroyed=function(){return!1};fY.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),this._sp=this._sp&&this._sp.destroy(),this._sp2D=void 0,this._spMorph=void 0,cZ(this)};var PG=fY;function Kn(Z,m,h,n){Z=l(Z,1),m=l(m,1),h=l(h,1),n=l(n,1),this.value=new Uint8Array([H.floatToByte(Z),H.floatToByte(m),H.floatToByte(h),H.floatToByte(n)])}Object.defineProperties(Kn.prototype,{componentDatatype:{get:function(){return WZ.UNSIGNED_BYTE}},componentsPerAttribute:{get:function(){return 4}},normalize:{get:function(){return!0}}});Kn.fromColor=function(Z){if(!V(Z))throw new U("color is required.");return new Kn(Z.red,Z.green,Z.blue,Z.alpha)};Kn.toValue=function(Z,m){if(!V(Z))throw new U("color is required.");return V(m)?Z.toBytes(m):new Uint8Array(Z.toBytes())};Kn.equals=function(Z,m){return Z===m||V(Z)&&V(m)&&Z.value[0]===m.value[0]&&Z.value[1]===m.value[1]&&Z.value[2]===m.value[2]&&Z.value[3]===m.value[3]};var KG=Kn;var qG=`in vec3 position3DHigh;
in vec3 position3DLow;
in float batchId;

#ifdef EXTRUDED_GEOMETRY
in vec3 extrudeDirection;

uniform float u_globeMinimumAltitude;
#endif // EXTRUDED_GEOMETRY

#ifdef PER_INSTANCE_COLOR
out vec4 v_color;
#endif // PER_INSTANCE_COLOR

#ifdef TEXTURE_COORDINATES
#ifdef SPHERICAL
out vec4 v_sphericalExtents;
#else // SPHERICAL
out vec2 v_inversePlaneExtents;
out vec4 v_westPlane;
out vec4 v_southPlane;
#endif // SPHERICAL
out vec3 v_uvMinAndSphericalLongitudeRotation;
out vec3 v_uMaxAndInverseDistance;
out vec3 v_vMaxAndInverseDistance;
#endif // TEXTURE_COORDINATES

void main()
{
    vec4 position = czm_computePosition();

#ifdef EXTRUDED_GEOMETRY
    float delta = min(u_globeMinimumAltitude, czm_geometricToleranceOverMeter * length(position.xyz));
    delta *= czm_sceneMode == czm_sceneMode3D ? 1.0 : 0.0;

    //extrudeDirection is zero for the top layer
    position = position + vec4(extrudeDirection * delta, 0.0);
#endif

#ifdef TEXTURE_COORDINATES
#ifdef SPHERICAL
    v_sphericalExtents = czm_batchTable_sphericalExtents(batchId);
    v_uvMinAndSphericalLongitudeRotation.z = czm_batchTable_longitudeRotation(batchId);
#else // SPHERICAL
#ifdef COLUMBUS_VIEW_2D
    vec4 planes2D_high = czm_batchTable_planes2D_HIGH(batchId);
    vec4 planes2D_low = czm_batchTable_planes2D_LOW(batchId);

    // If the primitive is split across the IDL (planes2D_high.x > planes2D_high.w):
    // - If this vertex is on the east side of the IDL (position3DLow.y > 0.0, comparison with position3DHigh may produce artifacts)
    // - existing "east" is on the wrong side of the world, far away (planes2D_high/low.w)
    // - so set "east" as beyond the eastmost extent of the projection (idlSplitNewPlaneHiLow)
    vec2 idlSplitNewPlaneHiLow = vec2(EAST_MOST_X_HIGH - (WEST_MOST_X_HIGH - planes2D_high.w), EAST_MOST_X_LOW - (WEST_MOST_X_LOW - planes2D_low.w));
    bool idlSplit = planes2D_high.x > planes2D_high.w && position3DLow.y > 0.0;
    planes2D_high.w = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.x, planes2D_high.w);
    planes2D_low.w = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.y, planes2D_low.w);

    // - else, if this vertex is on the west side of the IDL (position3DLow.y < 0.0)
    // - existing "west" is on the wrong side of the world, far away (planes2D_high/low.x)
    // - so set "west" as beyond the westmost extent of the projection (idlSplitNewPlaneHiLow)
    idlSplit = planes2D_high.x > planes2D_high.w && position3DLow.y < 0.0;
    idlSplitNewPlaneHiLow = vec2(WEST_MOST_X_HIGH - (EAST_MOST_X_HIGH - planes2D_high.x), WEST_MOST_X_LOW - (EAST_MOST_X_LOW - planes2D_low.x));
    planes2D_high.x = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.x, planes2D_high.x);
    planes2D_low.x = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.y, planes2D_low.x);

    vec3 southWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.xy), vec3(0.0, planes2D_low.xy))).xyz;
    vec3 northWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.x, planes2D_high.z), vec3(0.0, planes2D_low.x, planes2D_low.z))).xyz;
    vec3 southEastCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.w, planes2D_high.y), vec3(0.0, planes2D_low.w, planes2D_low.y))).xyz;
#else // COLUMBUS_VIEW_2D
    // 3D case has smaller "plane extents," so planes encoded as a 64 bit position and 2 vec3s for distances/direction
    vec3 southWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(czm_batchTable_southWest_HIGH(batchId), czm_batchTable_southWest_LOW(batchId))).xyz;
    vec3 northWestCorner = czm_normal * czm_batchTable_northward(batchId) + southWestCorner;
    vec3 southEastCorner = czm_normal * czm_batchTable_eastward(batchId) + southWestCorner;
#endif // COLUMBUS_VIEW_2D

    vec3 eastWard = southEastCorner - southWestCorner;
    float eastExtent = length(eastWard);
    eastWard /= eastExtent;

    vec3 northWard = northWestCorner - southWestCorner;
    float northExtent = length(northWard);
    northWard /= northExtent;

    v_westPlane = vec4(eastWard, -dot(eastWard, southWestCorner));
    v_southPlane = vec4(northWard, -dot(northWard, southWestCorner));
    v_inversePlaneExtents = vec2(1.0 / eastExtent, 1.0 / northExtent);
#endif // SPHERICAL
    vec4 uvMinAndExtents = czm_batchTable_uvMinAndExtents(batchId);
    vec4 uMaxVmax = czm_batchTable_uMaxVmax(batchId);

    v_uMaxAndInverseDistance = vec3(uMaxVmax.xy, uvMinAndExtents.z);
    v_vMaxAndInverseDistance = vec3(uMaxVmax.zw, uvMinAndExtents.w);
    v_uvMinAndSphericalLongitudeRotation.xy = uvMinAndExtents.xy;
#endif // TEXTURE_COORDINATES

#ifdef PER_INSTANCE_COLOR
    v_color = czm_batchTable_color(batchId);
#endif

    gl_Position = czm_depthClamp(czm_modelViewProjectionRelativeToEye * position);
}
`;var $G=`#ifdef VECTOR_TILE
uniform vec4 u_highlightColor;
#endif

void main(void)
{
#ifdef VECTOR_TILE
    out_FragColor = czm_gammaCorrect(u_highlightColor);
#else
    out_FragColor = vec4(1.0);
#endif
    czm_writeDepthClamp();
}
`;var ZF=`in vec3 v_positionEC;
in vec3 v_normalEC;
in vec4 v_color;

void main()
{
    vec3 positionToEyeEC = -v_positionEC;

    vec3 normalEC = normalize(v_normalEC);
#ifdef FACE_FORWARD
    normalEC = faceforward(normalEC, vec3(0.0, 0.0, 1.0), -normalEC);
#endif

    vec4 color = czm_gammaCorrect(v_color);

    czm_materialInput materialInput;
    materialInput.normalEC = normalEC;
    materialInput.positionToEyeEC = positionToEyeEC;
    czm_material material = czm_getDefaultMaterial(materialInput);
    material.diffuse = color.rgb;
    material.alpha = color.a;

    out_FragColor = czm_phong(normalize(positionToEyeEC), material, czm_lightDirectionEC);
}
`;var mF=`in vec3 position3DHigh;
in vec3 position3DLow;
in vec3 normal;
in vec4 color;
in float batchId;

out vec3 v_positionEC;
out vec3 v_normalEC;
out vec4 v_color;

void main()
{
    vec4 p = czm_computePosition();

    v_positionEC = (czm_modelViewRelativeToEye * p).xyz;      // position in eye coordinates
    v_normalEC = czm_normal * normal;                         // normal in eye coordinates
    v_color = color;

    gl_Position = czm_modelViewProjectionRelativeToEye * p;
}
`;var hF=`in vec3 position3DHigh;
in vec3 position3DLow;
in vec4 color;
in float batchId;

out vec4 v_color;

void main()
{
    vec4 p = czm_computePosition();

    v_color = color;

    gl_Position = czm_modelViewProjectionRelativeToEye * p;
}
`;function uY(Z){Z=l(Z,l.EMPTY_OBJECT);let m=l(Z.translucent,!0),h=l(Z.closed,!1),n=l(Z.flat,!1),i=n?hF:mF,A=n?ha:ZF,t=n?uY.FLAT_VERTEX_FORMAT:uY.VERTEX_FORMAT;this.material=void 0,this.translucent=m,this._vertexShaderSource=l(Z.vertexShaderSource,i),this._fragmentShaderSource=l(Z.fragmentShaderSource,A),this._renderState=sh.getDefaultRenderState(m,h,Z.renderState),this._closed=h,this._vertexFormat=t,this._flat=n,this._faceForward=l(Z.faceForward,!h)}Object.defineProperties(uY.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}},flat:{get:function(){return this._flat}},faceForward:{get:function(){return this._faceForward}}});uY.VERTEX_FORMAT=rn.POSITION_AND_NORMAL;uY.FLAT_VERTEX_FORMAT=rn.POSITION_ONLY;uY.prototype.getFragmentShaderSource=sh.prototype.getFragmentShaderSource;uY.prototype.isTranslucent=sh.prototype.isTranslucent;uY.prototype.getRenderState=sh.prototype.getRenderState;var aY=uY;var ct=`#ifdef TEXTURE_COORDINATES
#ifdef SPHERICAL
in vec4 v_sphericalExtents;
#else // SPHERICAL
in vec2 v_inversePlaneExtents;
in vec4 v_westPlane;
in vec4 v_southPlane;
#endif // SPHERICAL
in vec3 v_uvMinAndSphericalLongitudeRotation;
in vec3 v_uMaxAndInverseDistance;
in vec3 v_vMaxAndInverseDistance;
#endif // TEXTURE_COORDINATES

#ifdef PER_INSTANCE_COLOR
in vec4 v_color;
#endif

#ifdef NORMAL_EC
vec3 getEyeCoordinate3FromWindowCoordinate(vec2 fragCoord, float logDepthOrDepth) {
    vec4 eyeCoordinate = czm_windowToEyeCoordinates(fragCoord, logDepthOrDepth);
    return eyeCoordinate.xyz / eyeCoordinate.w;
}

vec3 vectorFromOffset(vec4 eyeCoordinate, vec2 positiveOffset) {
    vec2 glFragCoordXY = gl_FragCoord.xy;
    // Sample depths at both offset and negative offset
    float upOrRightLogDepth = czm_unpackDepth(texture(czm_globeDepthTexture, (glFragCoordXY + positiveOffset) / czm_viewport.zw));
    float downOrLeftLogDepth = czm_unpackDepth(texture(czm_globeDepthTexture, (glFragCoordXY - positiveOffset) / czm_viewport.zw));
    // Explicitly evaluate both paths
    // Necessary for multifrustum and for edges of the screen
    bvec2 upOrRightInBounds = lessThan(glFragCoordXY + positiveOffset, czm_viewport.zw);
    float useUpOrRight = float(upOrRightLogDepth > 0.0 && upOrRightInBounds.x && upOrRightInBounds.y);
    float useDownOrLeft = float(useUpOrRight == 0.0);
    vec3 upOrRightEC = getEyeCoordinate3FromWindowCoordinate(glFragCoordXY + positiveOffset, upOrRightLogDepth);
    vec3 downOrLeftEC = getEyeCoordinate3FromWindowCoordinate(glFragCoordXY - positiveOffset, downOrLeftLogDepth);
    return (upOrRightEC - (eyeCoordinate.xyz / eyeCoordinate.w)) * useUpOrRight + ((eyeCoordinate.xyz / eyeCoordinate.w) - downOrLeftEC) * useDownOrLeft;
}
#endif // NORMAL_EC

void main(void)
{
#ifdef REQUIRES_EC
    float logDepthOrDepth = czm_unpackDepth(texture(czm_globeDepthTexture, gl_FragCoord.xy / czm_viewport.zw));
    vec4 eyeCoordinate = czm_windowToEyeCoordinates(gl_FragCoord.xy, logDepthOrDepth);
#endif

#ifdef REQUIRES_WC
    vec4 worldCoordinate4 = czm_inverseView * eyeCoordinate;
    vec3 worldCoordinate = worldCoordinate4.xyz / worldCoordinate4.w;
#endif

#ifdef TEXTURE_COORDINATES
    vec2 uv;
#ifdef SPHERICAL
    // Treat world coords as a sphere normal for spherical coordinates
    vec2 sphericalLatLong = czm_approximateSphericalCoordinates(worldCoordinate);
    sphericalLatLong.y += v_uvMinAndSphericalLongitudeRotation.z;
    sphericalLatLong.y = czm_branchFreeTernary(sphericalLatLong.y < czm_pi, sphericalLatLong.y, sphericalLatLong.y - czm_twoPi);
    uv.x = (sphericalLatLong.y - v_sphericalExtents.y) * v_sphericalExtents.w;
    uv.y = (sphericalLatLong.x - v_sphericalExtents.x) * v_sphericalExtents.z;
#else // SPHERICAL
    // Unpack planes and transform to eye space
    uv.x = czm_planeDistance(v_westPlane, eyeCoordinate.xyz / eyeCoordinate.w) * v_inversePlaneExtents.x;
    uv.y = czm_planeDistance(v_southPlane, eyeCoordinate.xyz / eyeCoordinate.w) * v_inversePlaneExtents.y;
#endif // SPHERICAL
#endif // TEXTURE_COORDINATES

#ifdef PICK
#ifdef CULL_FRAGMENTS
    // When classifying translucent geometry, logDepthOrDepth == 0.0
    // indicates a region that should not be classified, possibly due to there
    // being opaque pixels there in another buffer.
    // Check for logDepthOrDepth != 0.0 to make sure this should be classified.
    if (0.0 <= uv.x && uv.x <= 1.0 && 0.0 <= uv.y && uv.y <= 1.0 || logDepthOrDepth != 0.0) {
        out_FragColor.a = 1.0; // 0.0 alpha leads to discard from ShaderSource.createPickFragmentShaderSource
        czm_writeDepthClamp();
    }
#else // CULL_FRAGMENTS
        out_FragColor.a = 1.0;
#endif // CULL_FRAGMENTS
#else // PICK

#ifdef CULL_FRAGMENTS
    // When classifying translucent geometry, logDepthOrDepth == 0.0
    // indicates a region that should not be classified, possibly due to there
    // being opaque pixels there in another buffer.
    if (uv.x <= 0.0 || 1.0 <= uv.x || uv.y <= 0.0 || 1.0 <= uv.y || logDepthOrDepth == 0.0) {
        discard;
    }
#endif

#ifdef NORMAL_EC
    // Compute normal by sampling adjacent pixels in 2x2 block in screen space
    vec3 downUp = vectorFromOffset(eyeCoordinate, vec2(0.0, 1.0));
    vec3 leftRight = vectorFromOffset(eyeCoordinate, vec2(1.0, 0.0));
    vec3 normalEC = normalize(cross(leftRight, downUp));
#endif


#ifdef PER_INSTANCE_COLOR

    vec4 color = czm_gammaCorrect(v_color);
#ifdef FLAT
    out_FragColor = color;
#else // FLAT
    czm_materialInput materialInput;
    materialInput.normalEC = normalEC;
    materialInput.positionToEyeEC = -eyeCoordinate.xyz;
    czm_material material = czm_getDefaultMaterial(materialInput);
    material.diffuse = color.rgb;
    material.alpha = color.a;

    out_FragColor = czm_phong(normalize(-eyeCoordinate.xyz), material, czm_lightDirectionEC);
#endif // FLAT

    // Premultiply alpha. Required for classification primitives on translucent globe.
    out_FragColor.rgb *= out_FragColor.a;

#else // PER_INSTANCE_COLOR

    // Material support.
    // USES_ is distinct from REQUIRES_, because some things are dependencies of each other or
    // dependencies for culling but might not actually be used by the material.

    czm_materialInput materialInput;

#ifdef USES_NORMAL_EC
    materialInput.normalEC = normalEC;
#endif

#ifdef USES_POSITION_TO_EYE_EC
    materialInput.positionToEyeEC = -eyeCoordinate.xyz;
#endif

#ifdef USES_TANGENT_TO_EYE
    materialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(worldCoordinate, normalEC);
#endif

#ifdef USES_ST
    // Remap texture coordinates from computed (approximately aligned with cartographic space) to the desired
    // texture coordinate system, which typically forms a tight oriented bounding box around the geometry.
    // Shader is provided a set of reference points for remapping.
    materialInput.st.x = czm_lineDistance(v_uvMinAndSphericalLongitudeRotation.xy, v_uMaxAndInverseDistance.xy, uv) * v_uMaxAndInverseDistance.z;
    materialInput.st.y = czm_lineDistance(v_uvMinAndSphericalLongitudeRotation.xy, v_vMaxAndInverseDistance.xy, uv) * v_vMaxAndInverseDistance.z;
#endif

    czm_material material = czm_getMaterial(materialInput);

#ifdef FLAT
    out_FragColor = vec4(material.diffuse + material.emission, material.alpha);
#else // FLAT
    out_FragColor = czm_phong(normalize(-eyeCoordinate.xyz), material, czm_lightDirectionEC);
#endif // FLAT

    // Premultiply alpha. Required for classification primitives on translucent globe.
    out_FragColor.rgb *= out_FragColor.a;

#endif // PER_INSTANCE_COLOR
    czm_writeDepthClamp();
#endif // PICK
}
`;function Hh(Z,m,h){y.typeOf.bool("extentsCulling",Z),y.typeOf.bool("planarExtents",m),y.typeOf.object("appearance",h),this._projectionExtentDefines={eastMostYhighDefine:"",eastMostYlowDefine:"",westMostYhighDefine:"",westMostYlowDefine:""};let n=new Tt;n.requiresTextureCoordinates=Z,n.requiresEC=!h.flat;let i=new Tt;if(i.requiresTextureCoordinates=Z,h instanceof aY)n.requiresNormalEC=!h.flat;else{let A=`${h.material.shaderSource}
${h.fragmentShaderSource}`;n.normalEC=A.indexOf("materialInput.normalEC")!==-1||A.indexOf("czm_getDefaultMaterial")!==-1,n.positionToEyeEC=A.indexOf("materialInput.positionToEyeEC")!==-1,n.tangentToEyeMatrix=A.indexOf("materialInput.tangentToEyeMatrix")!==-1,n.st=A.indexOf("materialInput.st")!==-1}this._colorShaderDependencies=n,this._pickShaderDependencies=i,this._appearance=h,this._extentsCulling=Z,this._planarExtents=m}Hh.prototype.createFragmentShader=function(Z){y.typeOf.bool("columbusView2D",Z);let m=this._appearance,h=this._colorShaderDependencies,n=[];!Z&&!this._planarExtents&&n.push("SPHERICAL"),h.requiresEC&&n.push("REQUIRES_EC"),h.requiresWC&&n.push("REQUIRES_WC"),h.requiresTextureCoordinates&&n.push("TEXTURE_COORDINATES"),this._extentsCulling&&n.push("CULL_FRAGMENTS"),h.requiresNormalEC&&n.push("NORMAL_EC"),m instanceof aY&&n.push("PER_INSTANCE_COLOR"),h.normalEC&&n.push("USES_NORMAL_EC"),h.positionToEyeEC&&n.push("USES_POSITION_TO_EYE_EC"),h.tangentToEyeMatrix&&n.push("USES_TANGENT_TO_EYE"),h.st&&n.push("USES_ST"),m.flat&&n.push("FLAT");let i="";return m instanceof aY||(i=m.material.shaderSource),new zZ({defines:n,sources:[i,ct]})};Hh.prototype.createPickFragmentShader=function(Z){y.typeOf.bool("columbusView2D",Z);let m=this._pickShaderDependencies,h=["PICK"];return!Z&&!this._planarExtents&&h.push("SPHERICAL"),m.requiresEC&&h.push("REQUIRES_EC"),m.requiresWC&&h.push("REQUIRES_WC"),m.requiresTextureCoordinates&&h.push("TEXTURE_COORDINATES"),this._extentsCulling&&h.push("CULL_FRAGMENTS"),new zZ({defines:h,sources:[ct],pickColorQualifier:"in"})};Hh.prototype.createVertexShader=function(Z,m,h,n){return y.defined("defines",Z),y.typeOf.string("vertexShaderSource",m),y.typeOf.bool("columbusView2D",h),y.defined("mapProjection",n),eF(this._colorShaderDependencies,this._planarExtents,h,Z,m,this._appearance,n,this._projectionExtentDefines)};Hh.prototype.createPickVertexShader=function(Z,m,h,n){return y.defined("defines",Z),y.typeOf.string("vertexShaderSource",m),y.typeOf.bool("columbusView2D",h),y.defined("mapProjection",n),eF(this._pickShaderDependencies,this._planarExtents,h,Z,m,void 0,n,this._projectionExtentDefines)};var YF=new _,nF=new nm,iF={high:0,low:0};function eF(Z,m,h,n,i,A,t,W){let e=n.slice();if(W.eastMostYhighDefine===""){let G=nF;G.longitude=gZ.PI,G.latitude=0,G.height=0;let F=t.project(G,YF),d=Pm.encode(F.x,iF);W.eastMostYhighDefine=`EAST_MOST_X_HIGH ${d.high.toFixed(`${d.high}`.length+1)}`,W.eastMostYlowDefine=`EAST_MOST_X_LOW ${d.low.toFixed(`${d.low}`.length+1)}`;let J=nF;J.longitude=-gZ.PI,J.latitude=0,J.height=0;let k=t.project(J,YF);d=Pm.encode(k.x,iF),W.westMostYhighDefine=`WEST_MOST_X_HIGH ${d.high.toFixed(`${d.high}`.length+1)}`,W.westMostYlowDefine=`WEST_MOST_X_LOW ${d.low.toFixed(`${d.low}`.length+1)}`}return h&&(e.push(W.eastMostYhighDefine),e.push(W.eastMostYlowDefine),e.push(W.westMostYhighDefine),e.push(W.westMostYlowDefine)),V(A)&&A instanceof aY&&e.push("PER_INSTANCE_COLOR"),Z.requiresTextureCoordinates&&(e.push("TEXTURE_COORDINATES"),m||h||e.push("SPHERICAL"),h&&e.push("COLUMBUS_VIEW_2D")),new zZ({defines:e,sources:[i]})}function Tt(){this._requiresEC=!1,this._requiresWC=!1,this._requiresNormalEC=!1,this._requiresTextureCoordinates=!1,this._usesNormalEC=!1,this._usesPositionToEyeEC=!1,this._usesTangentToEyeMat=!1,this._usesSt=!1}Object.defineProperties(Tt.prototype,{requiresEC:{get:function(){return this._requiresEC},set:function(Z){this._requiresEC=Z||this._requiresEC}},requiresWC:{get:function(){return this._requiresWC},set:function(Z){this._requiresWC=Z||this._requiresWC,this.requiresEC=this._requiresWC}},requiresNormalEC:{get:function(){return this._requiresNormalEC},set:function(Z){this._requiresNormalEC=Z||this._requiresNormalEC,this.requiresEC=this._requiresNormalEC}},requiresTextureCoordinates:{get:function(){return this._requiresTextureCoordinates},set:function(Z){this._requiresTextureCoordinates=Z||this._requiresTextureCoordinates,this.requiresWC=this._requiresTextureCoordinates}},normalEC:{set:function(Z){this.requiresNormalEC=Z,this._usesNormalEC=Z},get:function(){return this._usesNormalEC}},tangentToEyeMatrix:{set:function(Z){this.requiresWC=Z,this.requiresNormalEC=Z,this._usesTangentToEyeMat=Z},get:function(){return this._usesTangentToEyeMat}},positionToEyeEC:{set:function(Z){this.requiresEC=Z,this._usesPositionToEyeEC=Z},get:function(){return this._usesPositionToEyeEC}},st:{set:function(Z){this.requiresTextureCoordinates=Z,this._usesSt=Z},get:function(){return this._usesSt}}});function AF(Z,m,h){return Math.abs((m.y-Z.y)*h.x-(m.x-Z.x)*h.y+m.x*Z.y-m.y*Z.x)/q.distance(m,Z)}var DU=[new q,new q,new q,new q];function oF(Z,m){let h=DU,n=q.unpack(m,0,h[0]),i=q.unpack(m,2,h[1]),A=q.unpack(m,4,h[2]);Z.uMaxVmax=new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:4,normalize:!1,value:[i.x,i.y,A.x,A.y]});let t=1/AF(n,i,A),W=1/AF(n,A,i);Z.uvMinAndExtents=new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:4,normalize:!1,value:[n.x,n.y,t,W]})}var VF=new nm,lF=new _,fU=new _,uU=new _,Wa={high:0,low:0};function RF(Z,m,h){let n=VF;n.height=0,n.longitude=Z.west,n.latitude=Z.south;let i=m.project(n,lF);n.latitude=Z.north;let A=m.project(n,fU);n.longitude=Z.east,n.latitude=Z.south;let t=m.project(n,uU),W=[0,0,0,0],e=[0,0,0,0],G=Pm.encode(i.x,Wa);W[0]=G.high,e[0]=G.low,G=Pm.encode(i.y,Wa),W[1]=G.high,e[1]=G.low,G=Pm.encode(A.y,Wa),W[2]=G.high,e[2]=G.low,G=Pm.encode(t.x,Wa),W[3]=G.high,e[3]=G.low,h.planes2D_HIGH=new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:4,normalize:!1,value:W}),h.planes2D_LOW=new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:4,normalize:!1,value:e})}var bU=new eZ,xU=new eZ,aF=new _,_U=new nm,OU=[new nm,new nm,new nm,new nm,new nm,new nm,new nm,new nm];function wU(Z,m,h,n,i,A){let t=QY.center(Z,_U);t.height=h;let W=nm.toCartesian(t,m,aF),e=kh.eastNorthUpToFixedFrame(W,m,bU),G=eZ.inverse(e,xU),F=Z.west,d=Z.east,J=Z.north,k=Z.south,r=OU;r[0].latitude=k,r[0].longitude=F,r[1].latitude=J,r[1].longitude=F,r[2].latitude=J,r[2].longitude=d,r[3].latitude=k,r[3].longitude=d;let Q=(F+d)*.5,p=(J+k)*.5;r[4].latitude=k,r[4].longitude=Q,r[5].latitude=J,r[5].longitude=Q,r[6].latitude=p,r[6].longitude=F,r[7].latitude=p,r[7].longitude=d;let T=Number.POSITIVE_INFINITY,I=Number.NEGATIVE_INFINITY,f=Number.POSITIVE_INFINITY,b=Number.NEGATIVE_INFINITY;for(let K=0;K<8;K++){r[K].height=h;let tZ=nm.toCartesian(r[K],m,aF);eZ.multiplyByPoint(G,tZ,tZ),tZ.z=0,T=Math.min(T,tZ.x),I=Math.max(I,tZ.x),f=Math.min(f,tZ.y),b=Math.max(b,tZ.y)}let O=n;O.x=T,O.y=f,O.z=0,eZ.multiplyByPoint(e,O,O);let v=i;v.x=I,v.y=f,v.z=0,eZ.multiplyByPoint(e,v,v),_.subtract(v,O,i);let hZ=A;hZ.x=T,hZ.y=b,hZ.z=0,eZ.multiplyByPoint(e,hZ,hZ),_.subtract(hZ,O,A)}var yU=new _,HU=new _,zU=new Pm;Hh.getPlanarTextureCoordinateAttributes=function(Z,m,h,n,i){y.typeOf.object("boundingRectangle",Z),y.defined("textureCoordinateRotationPoints",m),y.typeOf.object("ellipsoid",h),y.typeOf.object("projection",n);let A=lF,t=yU,W=HU;wU(Z,h,l(i,0),A,t,W);let e={};oF(e,m);let G=Pm.fromCartesian(A,zU);return e.southWest_HIGH=new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:3,normalize:!1,value:_.pack(G.high,[0,0,0])}),e.southWest_LOW=new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:3,normalize:!1,value:_.pack(G.low,[0,0,0])}),e.eastward=new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:3,normalize:!1,value:_.pack(t,[0,0,0])}),e.northward=new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:3,normalize:!1,value:_.pack(W,[0,0,0])}),RF(Z,n,e),e};var XU=new _;function tF(Z,m,h,n){let i=VF;i.latitude=Z,i.longitude=m,i.height=0;let A=nm.toCartesian(i,h,XU),t=Math.sqrt(A.x*A.x+A.y*A.y),W=gZ.fastApproximateAtan2(t,A.z),e=gZ.fastApproximateAtan2(A.x,A.y);return n.x=W,n.y=e,n}var WF=new q;Hh.getSphericalExtentGeometryInstanceAttributes=function(Z,m,h,n){y.typeOf.object("boundingRectangle",Z),y.defined("textureCoordinateRotationPoints",m),y.typeOf.object("ellipsoid",h),y.typeOf.object("projection",n);let i=tF(Z.south,Z.west,h,WF),A=i.x,t=i.y,W=tF(Z.north,Z.east,h,WF),e=W.x,G=W.y,F=0;t>G&&(F=gZ.PI-t,t=-gZ.PI,G+=F),A-=gZ.EPSILON5,t-=gZ.EPSILON5,e+=gZ.EPSILON5,G+=gZ.EPSILON5;let d=1/(G-t),J=1/(e-A),k={sphericalExtents:new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:4,normalize:!1,value:[A,t,J,d]}),longitudeRotation:new Ih({componentDatatype:WZ.FLOAT,componentsPerAttribute:1,normalize:!1,value:[F]})};return oF(k,m),RF(Z,n,k),k};Hh.hasAttributesForTextureCoordinatePlanes=function(Z){return V(Z.southWest_HIGH)&&V(Z.southWest_LOW)&&V(Z.northward)&&V(Z.eastward)&&V(Z.planes2D_HIGH)&&V(Z.planes2D_LOW)&&V(Z.uMaxVmax)&&V(Z.uvMinAndExtents)};Hh.hasAttributesForSphericalExtents=function(Z){return V(Z.sphericalExtents)&&V(Z.longitudeRotation)&&V(Z.planes2D_HIGH)&&V(Z.planes2D_LOW)&&V(Z.uMaxVmax)&&V(Z.uvMinAndExtents)};function LU(Z){return Math.max(Z.width,Z.height)>Hh.MAX_WIDTH_FOR_PLANAR_EXTENTS}Hh.shouldUseSphericalCoordinates=function(Z){return y.typeOf.object("rectangle",Z),LU(Z)};Hh.MAX_WIDTH_FOR_PLANAR_EXTENTS=gZ.toRadians(1);var Zn=Hh;function In(Z){Z=l(Z,l.EMPTY_OBJECT);let m=Z.geometryInstances;this.geometryInstances=m,this.show=l(Z.show,!0),this.classificationType=l(Z.classificationType,yh.BOTH),this.debugShowBoundingVolume=l(Z.debugShowBoundingVolume,!1),this.debugShowShadowVolume=l(Z.debugShowShadowVolume,!1),this._debugShowShadowVolume=!1,this._extruded=l(Z._extruded,!1),this._uniformMap=Z._uniformMap,this._sp=void 0,this._spStencil=void 0,this._spPick=void 0,this._spColor=void 0,this._spPick2D=void 0,this._spColor2D=void 0,this._rsStencilDepthPass=void 0,this._rsStencilDepthPass3DTiles=void 0,this._rsColorPass=void 0,this._rsPickPass=void 0,this._commandsIgnoreShow=[],this._ready=!1,this._primitive=void 0,this._pickPrimitive=Z._pickPrimitive,this._hasSphericalExtentsAttribute=!1,this._hasPlanarExtentsAttributes=!1,this._hasPerColorAttribute=!1,this.appearance=Z.appearance,this._createBoundingVolumeFunction=Z._createBoundingVolumeFunction,this._updateAndQueueCommandsFunction=Z._updateAndQueueCommandsFunction,this._usePickOffsets=!1,this._primitiveOptions={geometryInstances:void 0,appearance:void 0,vertexCacheOptimize:l(Z.vertexCacheOptimize,!1),interleave:l(Z.interleave,!1),releaseGeometryInstances:l(Z.releaseGeometryInstances,!0),allowPicking:l(Z.allowPicking,!0),asynchronous:l(Z.asynchronous,!0),compressVertices:l(Z.compressVertices,!0),_createBoundingVolumeFunction:void 0,_createRenderStatesFunction:void 0,_createShaderProgramFunction:void 0,_createCommandsFunction:void 0,_updateAndQueueCommandsFunction:void 0,_createPickOffsets:!0}}Object.defineProperties(In.prototype,{vertexCacheOptimize:{get:function(){return this._primitiveOptions.vertexCacheOptimize}},interleave:{get:function(){return this._primitiveOptions.interleave}},releaseGeometryInstances:{get:function(){return this._primitiveOptions.releaseGeometryInstances}},allowPicking:{get:function(){return this._primitiveOptions.allowPicking}},asynchronous:{get:function(){return this._primitiveOptions.asynchronous}},compressVertices:{get:function(){return this._primitiveOptions.compressVertices}},ready:{get:function(){return this._ready}},_needs2DShader:{get:function(){return this._hasPlanarExtentsAttributes||this._hasSphericalExtentsAttribute}}});In.isSupported=function(Z){return Z.context.stencilBuffer};function qn(Z,m){let h=m?jh.EQUAL:jh.ALWAYS;return{colorMask:{red:!1,green:!1,blue:!1,alpha:!1},stencilTest:{enabled:Z,frontFunction:h,frontOperation:{fail:vZ.KEEP,zFail:vZ.DECREMENT_WRAP,zPass:vZ.KEEP},backFunction:h,backOperation:{fail:vZ.KEEP,zFail:vZ.INCREMENT_WRAP,zPass:vZ.KEEP},reference:AY.CESIUM_3D_TILE_MASK,mask:AY.CESIUM_3D_TILE_MASK},stencilMask:AY.CLASSIFICATION_MASK,depthTest:{enabled:!0,func:ia.LESS_OR_EQUAL},depthMask:!1}}function St(Z){return{stencilTest:{enabled:Z,frontFunction:jh.NOT_EQUAL,frontOperation:{fail:vZ.ZERO,zFail:vZ.ZERO,zPass:vZ.ZERO},backFunction:jh.NOT_EQUAL,backOperation:{fail:vZ.ZERO,zFail:vZ.ZERO,zPass:vZ.ZERO},reference:0,mask:AY.CLASSIFICATION_MASK},stencilMask:AY.CLASSIFICATION_MASK,depthTest:{enabled:!1},depthMask:!1,blending:fh.PRE_MULTIPLIED_ALPHA_BLEND}}var vU={stencilTest:{enabled:!0,frontFunction:jh.NOT_EQUAL,frontOperation:{fail:vZ.ZERO,zFail:vZ.ZERO,zPass:vZ.ZERO},backFunction:jh.NOT_EQUAL,backOperation:{fail:vZ.ZERO,zFail:vZ.ZERO,zPass:vZ.ZERO},reference:0,mask:AY.CLASSIFICATION_MASK},stencilMask:AY.CLASSIFICATION_MASK,depthTest:{enabled:!1},depthMask:!1};function PU(Z,m,h,n){if(V(Z._rsStencilDepthPass))return;let i=!Z.debugShowShadowVolume;Z._rsStencilDepthPass=Vm.fromCache(qn(i,!1)),Z._rsStencilDepthPass3DTiles=Vm.fromCache(qn(i,!0)),Z._rsColorPass=Vm.fromCache(St(i,!1)),Z._rsPickPass=Vm.fromCache(vU)}function KU(Z,m){if(!Z.compressVertices)return m;if(m.search(/in\s+vec3\s+extrudeDirection;/g)!==-1){let h="compressedAttributes",n=`in vec2 ${h};`,i=`vec3 extrudeDirection;
`,A=`    extrudeDirection = czm_octDecode(${h}, 65535.0);
`,t=m;t=t.replace(/in\s+vec3\s+extrudeDirection;/g,""),t=zZ.replaceMain(t,"czm_non_compressed_main");let W=`void main() 
{ 
${A}    czm_non_compressed_main(); 
}`;return[n,i,t,W].join(`
`)}}function qU(Z,m){let h=m.context,n=Z._primitive,i=qG;i=Z._primitive._batchTable.getVertexShaderCallback()(i),i=nh._appendDistanceDisplayConditionToShader(n,i),i=nh._modifyShaderPosition(Z,i,m.scene3DOnly),i=nh._updateColorAttribute(n,i);let A=Z._hasPlanarExtentsAttributes,t=A||Z._hasSphericalExtentsAttribute;Z._extruded&&(i=KU(n,i));let W=Z._extruded?"EXTRUDED_GEOMETRY":"",e=new zZ({defines:[W],sources:[i]}),G=new zZ({sources:[$G]}),F=Z._primitive._attributeLocations,d=new Zn(t,A,Z.appearance);if(Z._spStencil=fm.replaceCache({context:h,shaderProgram:Z._spStencil,vertexShaderSource:e,fragmentShaderSource:G,attributeLocations:F}),Z._primitive.allowPicking){let r=zZ.createPickVertexShaderSource(i);r=nh._appendShowToShader(n,r),r=nh._updatePickColorAttribute(r);let Q=d.createPickFragmentShader(!1),p=d.createPickVertexShader([W],r,!1,m.mapProjection);if(Z._spPick=fm.replaceCache({context:h,shaderProgram:Z._spPick,vertexShaderSource:p,fragmentShaderSource:Q,attributeLocations:F}),t){let T=h.shaderCache.getDerivedShaderProgram(Z._spPick,"2dPick");if(!V(T)){let I=d.createPickFragmentShader(!0),f=d.createPickVertexShader([W],r,!0,m.mapProjection);T=h.shaderCache.createDerivedShaderProgram(Z._spPick,"2dPick",{vertexShaderSource:f,fragmentShaderSource:I,attributeLocations:F})}Z._spPick2D=T}}else Z._spPick=fm.fromCache({context:h,vertexShaderSource:e,fragmentShaderSource:G,attributeLocations:F});i=nh._appendShowToShader(n,i),e=new zZ({defines:[W],sources:[i]}),Z._sp=fm.replaceCache({context:h,shaderProgram:Z._sp,vertexShaderSource:e,fragmentShaderSource:G,attributeLocations:F});let J=d.createFragmentShader(!1),k=d.createVertexShader([W],i,!1,m.mapProjection);if(Z._spColor=fm.replaceCache({context:h,shaderProgram:Z._spColor,vertexShaderSource:k,fragmentShaderSource:J,attributeLocations:F}),t){let r=h.shaderCache.getDerivedShaderProgram(Z._spColor,"2dColor");if(!V(r)){let Q=d.createFragmentShader(!0),p=d.createVertexShader([W],i,!0,m.mapProjection);r=h.shaderCache.createDerivedShaderProgram(Z._spColor,"2dColor",{vertexShaderSource:p,fragmentShaderSource:Q,attributeLocations:F})}Z._spColor2D=r}}function $U(Z,m){let h=Z._primitive,n=h._va.length*2;m.length=n;let i,A,t,W=0,e=h._batchTable.getUniformMapCallback()(Z._uniformMap),G=Z._needs2DShader;for(i=0;i<n;i+=2){let k=h._va[W++];A=m[i],V(A)||(A=m[i]=new Am({owner:Z,primitiveType:h._primitiveType})),A.vertexArray=k,A.renderState=Z._rsStencilDepthPass,A.shaderProgram=Z._sp,A.uniformMap=e,A.pass=gm.TERRAIN_CLASSIFICATION,t=Am.shallowClone(A,A.derivedCommands.tileset),t.renderState=Z._rsStencilDepthPass3DTiles,t.pass=gm.CESIUM_3D_TILE_CLASSIFICATION,A.derivedCommands.tileset=t,A=m[i+1],V(A)||(A=m[i+1]=new Am({owner:Z,primitiveType:h._primitiveType})),A.vertexArray=k,A.renderState=Z._rsColorPass,A.shaderProgram=Z._spColor,A.pass=gm.TERRAIN_CLASSIFICATION;let Q=Z.appearance.material;if(V(Q)&&(e=Kh(e,Q._uniforms)),A.uniformMap=e,t=Am.shallowClone(A,A.derivedCommands.tileset),t.pass=gm.CESIUM_3D_TILE_CLASSIFICATION,A.derivedCommands.tileset=t,G){let p=Am.shallowClone(A,A.derivedCommands.appearance2D);p.shaderProgram=Z._spColor2D,A.derivedCommands.appearance2D=p,p=Am.shallowClone(t,t.derivedCommands.appearance2D),p.shaderProgram=Z._spColor2D,t.derivedCommands.appearance2D=p}}let F=Z._commandsIgnoreShow,d=Z._spStencil,J=0;n=F.length=n/2;for(let k=0;k<n;++k){let r=F[k]=Am.shallowClone(m[J],F[k]);r.shaderProgram=d,r.pass=gm.CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW,J+=2}}function ZJ(Z,m){let h=Z._usePickOffsets,n=Z._primitive,i=n._va.length*2,A,t=0,W;h&&(A=n._pickOffsets,i=A.length*2),m.length=i;let e,G,F,d=0,J=n._batchTable.getUniformMapCallback()(Z._uniformMap),k=Z._needs2DShader;for(e=0;e<i;e+=2){let r=n._va[d++];if(h&&(W=A[t++],r=n._va[W.index]),G=m[e],V(G)||(G=m[e]=new Am({owner:Z,primitiveType:n._primitiveType,pickOnly:!0})),G.vertexArray=r,G.renderState=Z._rsStencilDepthPass,G.shaderProgram=Z._sp,G.uniformMap=J,G.pass=gm.TERRAIN_CLASSIFICATION,h&&(G.offset=W.offset,G.count=W.count),F=Am.shallowClone(G,G.derivedCommands.tileset),F.renderState=Z._rsStencilDepthPass3DTiles,F.pass=gm.CESIUM_3D_TILE_CLASSIFICATION,G.derivedCommands.tileset=F,G=m[e+1],V(G)||(G=m[e+1]=new Am({owner:Z,primitiveType:n._primitiveType,pickOnly:!0})),G.vertexArray=r,G.renderState=Z._rsPickPass,G.shaderProgram=Z._spPick,G.uniformMap=J,G.pass=gm.TERRAIN_CLASSIFICATION,h&&(G.offset=W.offset,G.count=W.count),F=Am.shallowClone(G,G.derivedCommands.tileset),F.pass=gm.CESIUM_3D_TILE_CLASSIFICATION,G.derivedCommands.tileset=F,k){let Q=Am.shallowClone(G,G.derivedCommands.pick2D);Q.shaderProgram=Z._spPick2D,G.derivedCommands.pick2D=Q,Q=Am.shallowClone(F,F.derivedCommands.pick2D),Q.shaderProgram=Z._spPick2D,F.derivedCommands.pick2D=Q}}}function mJ(Z,m,h,n,i,A,t){$U(Z,A),ZJ(Z,t)}function GF(Z,m){return Math.floor(Z%m/2)}function Mt(Z,m,h,n,i,A){Z.modelMatrix=h,Z.boundingVolume=i,Z.cull=n,Z.debugShowBoundingVolume=A,m.commandList.push(Z)}function FF(Z,m,h,n,i){Z.modelMatrix=h,Z.boundingVolume=i,Z.cull=n,m.commandList.push(Z)}function hJ(Z,m,h,n,i,A,t,W){let e=Z._primitive;nh._updateBoundingVolumes(e,m,i);let G;m.mode===UZ.SCENE3D?G=e._boundingSphereWC:m.mode===UZ.COLUMBUS_VIEW?G=e._boundingSphereCV:m.mode===UZ.SCENE2D&&V(e._boundingSphere2D)?G=e._boundingSphere2D:V(e._boundingSphereMorph)&&(G=e._boundingSphereMorph);let F=Z.classificationType,d=F!==yh.CESIUM_3D_TILE,J=F!==yh.TERRAIN,k=m.passes,r,Q,p;if(k.render){let T=h.length;for(r=0;r<T;++r)Q=G[GF(r,T)],d&&(p=h[r],Mt(p,m,i,A,Q,t)),J&&(p=h[r].derivedCommands.tileset,Mt(p,m,i,A,Q,t));if(m.invertClassification){let I=Z._commandsIgnoreShow,f=I.length;for(r=0;r<f;++r)Q=G[r],p=I[r],Mt(p,m,i,A,Q,t)}}if(k.pick){let T=n.length,I=e._pickOffsets;for(r=0;r<T;++r){let f=I[GF(r,T)];Q=G[f.index],d&&(p=n[r],FF(p,m,i,A,Q)),J&&(p=n[r].derivedCommands.tileset,FF(p,m,i,A,Q))}}}In.prototype.update=function(Z){if(!V(this._primitive)&&!V(this.geometryInstances))return;let m=this.appearance;V(m)&&V(m.material)&&m.material.update(Z.context);let h=this,n=this._primitiveOptions;if(!V(this._primitive)){let i=Array.isArray(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],A=i.length,t,W,e,G=!1,F=!0,d,J=!1,k=!1;for(A>0&&(e=i[0].attributes,J=Zn.hasAttributesForSphericalExtents(e),k=Zn.hasAttributesForTextureCoordinatePlanes(e),d=e.color),t=0;t<A;t++){W=i[t];let Q=W.attributes.color;if(V(Q))G=!0;else if(G)throw new U("All GeometryInstances must have color attributes to use per-instance color.");F=F&&V(Q)&&KG.equals(d,Q)}if(!F&&!J&&!k)throw new U("All GeometryInstances must have the same color attribute except via GroundPrimitives");if(G&&!V(m)&&(m=new aY({flat:!0}),this.appearance=m),!G&&m instanceof aY)throw new U("PerInstanceColorAppearance requires color GeometryInstanceAttributes on all GeometryInstances");if(V(m.material)&&!J&&!k)throw new U("Materials on ClassificationPrimitives are not supported except via GroundPrimitives");this._usePickOffsets=!J&&!k,this._hasSphericalExtentsAttribute=J,this._hasPlanarExtentsAttributes=k,this._hasPerColorAttribute=G;let r=new Array(A);for(t=0;t<A;++t)W=i[t],r[t]=new sn({geometry:W.geometry,attributes:W.attributes,modelMatrix:W.modelMatrix,id:W.id,pickPrimitive:l(this._pickPrimitive,h)});n.appearance=m,n.geometryInstances=r,V(this._createBoundingVolumeFunction)&&(n._createBoundingVolumeFunction=function(Q,p){h._createBoundingVolumeFunction(Q,p)}),n._createRenderStatesFunction=function(Q,p,T,I){PU(h,p)},n._createShaderProgramFunction=function(Q,p,T){qU(h,p)},n._createCommandsFunction=function(Q,p,T,I,f,b,O){mJ(h,void 0,void 0,!0,!1,b,O)},V(this._updateAndQueueCommandsFunction)?n._updateAndQueueCommandsFunction=function(Q,p,T,I,f,b,O,v){h._updateAndQueueCommandsFunction(Q,p,T,I,f,b,O,v)}:n._updateAndQueueCommandsFunction=function(Q,p,T,I,f,b,O,v){hJ(h,p,T,I,f,b,O,v)},this._primitive=new nh(n)}if(this.debugShowShadowVolume&&!this._debugShowShadowVolume&&this._ready?(this._debugShowShadowVolume=!0,this._rsStencilDepthPass=Vm.fromCache(qn(!1,!1)),this._rsStencilDepthPass3DTiles=Vm.fromCache(qn(!1,!0)),this._rsColorPass=Vm.fromCache(St(!1))):!this.debugShowShadowVolume&&this._debugShowShadowVolume&&(this._debugShowShadowVolume=!1,this._rsStencilDepthPass=Vm.fromCache(qn(!0,!1)),this._rsStencilDepthPass3DTiles=Vm.fromCache(qn(!0,!0)),this._rsColorPass=Vm.fromCache(St(!0))),this._primitive.appearance!==m){if(!this._hasSphericalExtentsAttribute&&!this._hasPlanarExtentsAttributes&&V(m.material))throw new U("Materials on ClassificationPrimitives are not supported except via GroundPrimitive");if(!this._hasPerColorAttribute&&m instanceof aY)throw new U("PerInstanceColorAppearance requires color GeometryInstanceAttribute");this._primitive.appearance=m}this._primitive.show=this.show,this._primitive.debugShowBoundingVolume=this.debugShowBoundingVolume,this._primitive.update(Z),Z.afterRender.push(()=>{V(this._primitive)&&this._primitive.ready&&(this._ready=!0,this.releaseGeometryInstances&&(this.geometryInstances=void 0))})};In.prototype.getGeometryInstanceAttributes=function(Z){if(!V(this._primitive))throw new U("must call update before calling getGeometryInstanceAttributes");return this._primitive.getGeometryInstanceAttributes(Z)};In.prototype.isDestroyed=function(){return!1};In.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),this._sp=this._sp&&this._sp.destroy(),this._spPick=this._spPick&&this._spPick.destroy(),this._spColor=this._spColor&&this._spColor.destroy(),this._spPick2D=void 0,this._spColor2D=void 0,cZ(this)};var Dt=In;var YJ={u_globeMinimumAltitude:function(){return 55e3}};function Uh(Z){Z=l(Z,l.EMPTY_OBJECT);let m=Z.appearance,h=Z.geometryInstances;if(!V(m)&&V(h)){let i=Array.isArray(h)?h:[h],A=i.length;for(let t=0;t<A;t++){let W=i[t].attributes;if(V(W)&&V(W.color)){m=new aY({flat:!0});break}}}this.appearance=m,this.geometryInstances=Z.geometryInstances,this.show=l(Z.show,!0),this.classificationType=l(Z.classificationType,yh.BOTH),this.debugShowBoundingVolume=l(Z.debugShowBoundingVolume,!1),this.debugShowShadowVolume=l(Z.debugShowShadowVolume,!1),this._boundingVolumes=[],this._boundingVolumes2D=[],this._ready=!1,this._primitive=void 0,this._maxHeight=void 0,this._minHeight=void 0,this._maxTerrainHeight=qh._defaultMaxTerrainHeight,this._minTerrainHeight=qh._defaultMinTerrainHeight,this._boundingSpheresKeys=[],this._boundingSpheres=[],this._useFragmentCulling=!1,this._zIndex=void 0;let n=this;this._classificationPrimitiveOptions={geometryInstances:void 0,appearance:void 0,vertexCacheOptimize:l(Z.vertexCacheOptimize,!1),interleave:l(Z.interleave,!1),releaseGeometryInstances:l(Z.releaseGeometryInstances,!0),allowPicking:l(Z.allowPicking,!0),asynchronous:l(Z.asynchronous,!0),compressVertices:l(Z.compressVertices,!0),_createBoundingVolumeFunction:void 0,_updateAndQueueCommandsFunction:void 0,_pickPrimitive:n,_extruded:!0,_uniformMap:YJ}}Object.defineProperties(Uh.prototype,{vertexCacheOptimize:{get:function(){return this._classificationPrimitiveOptions.vertexCacheOptimize}},interleave:{get:function(){return this._classificationPrimitiveOptions.interleave}},releaseGeometryInstances:{get:function(){return this._classificationPrimitiveOptions.releaseGeometryInstances}},allowPicking:{get:function(){return this._classificationPrimitiveOptions.allowPicking}},asynchronous:{get:function(){return this._classificationPrimitiveOptions.asynchronous}},compressVertices:{get:function(){return this._classificationPrimitiveOptions.compressVertices}},ready:{get:function(){return this._ready}}});Uh.isSupported=Dt.isSupported;function dF(Z){return function(m,h){let n=h.maximumRadius,i=n/Math.cos(m*.5)-n;return Z._maxHeight+i}}function sF(Z){return function(m,h){return Z._minHeight}}var nJ=new _,iJ=new _,AJ=new _,aJ=new nm,tJ=new QY;function ea(Z,m){let h=Z.mapProjection.ellipsoid;if(!V(m.attributes)||!V(m.attributes.position3DHigh))return V(m.rectangle)?m.rectangle:void 0;let n=m.attributes.position3DHigh.values,i=m.attributes.position3DLow.values,A=n.length,t=Number.POSITIVE_INFINITY,W=Number.POSITIVE_INFINITY,e=Number.NEGATIVE_INFINITY,G=Number.NEGATIVE_INFINITY;for(let d=0;d<A;d+=3){let J=_.unpack(n,d,nJ),k=_.unpack(i,d,iJ),r=_.add(J,k,AJ),Q=h.cartesianToCartographic(r,aJ),p=Q.latitude,T=Q.longitude;t=Math.min(t,p),W=Math.min(W,T),e=Math.max(e,p),G=Math.max(G,T)}let F=tJ;return F.north=e,F.south=t,F.east=G,F.west=W,F}function WJ(Z,m,h){let n=qh.getMinimumMaximumHeights(m,h);Z._minTerrainHeight=n.minimumTerrainHeight,Z._maxTerrainHeight=n.maximumTerrainHeight}function eJ(Z,m,h){let n=m.mapProjection.ellipsoid,i=ea(m,h),A=MA.fromRectangle(i,Z._minHeight,Z._maxHeight,n);if(Z._boundingVolumes.push(A),!m.scene3DOnly){let t=m.mapProjection,W=BZ.fromRectangleWithHeights2D(i,t,Z._maxHeight,Z._minHeight);_.fromElements(W.center.z,W.center.x,W.center.y,W.center),Z._boundingVolumes2D.push(W)}}function ft(Z,m){return Math.floor(Z%m/2)}function ut(Z,m,h,n,i,A,t){let W=Z._primitive;h.mode!==UZ.SCENE3D&&m.shaderProgram===W._spColor&&W._needs2DShader&&(m=m.derivedCommands.appearance2D),m.owner=Z,m.modelMatrix=n,m.boundingVolume=A,m.cull=i,m.debugShowBoundingVolume=t,h.commandList.push(m)}function rF(Z,m,h,n,i,A){let t=Z._primitive;h.mode!==UZ.SCENE3D&&m.shaderProgram===t._spPick&&t._needs2DShader&&(m=m.derivedCommands.pick2D),m.owner=Z,m.modelMatrix=n,m.boundingVolume=A,m.cull=i,h.commandList.push(m)}function oJ(Z,m,h,n,i,A,t,W){let e;m.mode===UZ.SCENE3D?e=Z._boundingVolumes:e=Z._boundingVolumes2D;let G=Z.classificationType,F=G!==yh.CESIUM_3D_TILE,d=G!==yh.TERRAIN,J=m.passes,k=Z._primitive,r,Q,p;if(J.render){let T=h.length;for(r=0;r<T;++r)Q=e[ft(r,T)],F&&(p=h[r],ut(Z,p,m,i,A,Q,t)),d&&(p=h[r].derivedCommands.tileset,ut(Z,p,m,i,A,Q,t));if(m.invertClassification){let I=k._commandsIgnoreShow,f=I.length;for(r=0;r<f;++r)Q=e[r],p=I[r],ut(Z,p,m,i,A,Q,t)}}if(J.pick){let T=n.length,I;for(Z._useFragmentCulling||(I=k._primitive._pickOffsets),r=0;r<T;++r){if(Q=e[ft(r,T)],!Z._useFragmentCulling){let f=I[ft(r,T)];Q=e[f.index]}F&&(p=n[r],rF(Z,p,m,i,A,Q)),d&&(p=n[r].derivedCommands.tileset,rF(Z,p,m,i,A,Q))}}}Uh.initializeTerrainHeights=function(){return qh.initialize()};Uh.prototype.update=function(Z){if(!V(this._primitive)&&!V(this.geometryInstances))return;if(!qh.initialized){if(!this.asynchronous)throw new U("For synchronous GroundPrimitives, you must call GroundPrimitive.initializeTerrainHeights() and wait for the returned promise to resolve.");Uh.initializeTerrainHeights();return}let m=this,h=this._classificationPrimitiveOptions;if(!V(this._primitive)){let n=Z.mapProjection.ellipsoid,i,A,t,W=Array.isArray(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],e=W.length,G=new Array(e),F,d;for(F=0;F<e;++F){i=W[F],A=i.geometry;let Q=ea(Z,A);V(d)?V(Q)&&QY.union(d,Q,d):d=QY.clone(Q);let p=i.id;if(V(p)&&V(Q)){let T=qh.getBoundingSphere(Q,n);this._boundingSpheresKeys.push(p),this._boundingSpheres.push(T)}if(t=A.constructor,!V(t)||!V(t.createShadowVolume))throw new U("Not all of the geometry instances have GroundPrimitive support.")}WJ(this,d,n);let J=Z.terrainExaggeration,k=Z.terrainExaggerationRelativeHeight;this._minHeight=wa.getHeight(this._minTerrainHeight,J,k),this._maxHeight=wa.getHeight(this._maxTerrainHeight,J,k);let r=Uh._supportsMaterials(Z.context);if(this._useFragmentCulling=r,r){let Q,p=!0;for(F=0;F<e;++F)if(i=W[F],A=i.geometry,d=ea(Z,A),Zn.shouldUseSphericalCoordinates(d)){p=!1;break}for(F=0;F<e;++F){i=W[F],A=i.geometry,t=A.constructor;let T=ea(Z,A),I=A.textureCoordinateRotationPoints;p?Q=Zn.getPlanarTextureCoordinateAttributes(T,I,n,Z.mapProjection,this._maxHeight):Q=Zn.getSphericalExtentGeometryInstanceAttributes(T,I,n,Z.mapProjection);let f=i.attributes;for(let b in f)f.hasOwnProperty(b)&&(Q[b]=f[b]);G[F]=new sn({geometry:t.createShadowVolume(A,sF(this),dF(this)),attributes:Q,id:i.id})}}else for(F=0;F<e;++F)i=W[F],A=i.geometry,t=A.constructor,G[F]=new sn({geometry:t.createShadowVolume(A,sF(this),dF(this)),attributes:i.attributes,id:i.id});h.geometryInstances=G,h.appearance=this.appearance,h._createBoundingVolumeFunction=function(Q,p){eJ(m,Q,p)},h._updateAndQueueCommandsFunction=function(Q,p,T,I,f,b,O,v){oJ(m,p,T,I,f,b,O,v)},this._primitive=new Dt(h)}this._primitive.appearance=this.appearance,this._primitive.show=this.show,this._primitive.debugShowShadowVolume=this.debugShowShadowVolume,this._primitive.debugShowBoundingVolume=this.debugShowBoundingVolume,this._primitive.update(Z),Z.afterRender.push(()=>{!this._ready&&V(this._primitive)&&this._primitive.ready&&(this._ready=!0,this.releaseGeometryInstances&&(this.geometryInstances=void 0))})};Uh.prototype.getBoundingSphere=function(Z){let m=this._boundingSpheresKeys.indexOf(Z);if(m!==-1)return this._boundingSpheres[m]};Uh.prototype.getGeometryInstanceAttributes=function(Z){if(!V(this._primitive))throw new U("must call update before calling getGeometryInstanceAttributes");return this._primitive.getGeometryInstanceAttributes(Z)};Uh.prototype.isDestroyed=function(){return!1};Uh.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),cZ(this)};Uh._supportsMaterials=function(Z){return Z.depthTexture};Uh.supportsMaterials=function(Z){return y.typeOf.object("scene",Z),Uh._supportsMaterials(Z.frameState.context)};var NF=Uh;function mn(Z){this._value=void 0,this._hasClone=!1,this._hasEquals=!1,this._definitionChanged=new sZ,this.setValue(Z)}Object.defineProperties(mn.prototype,{isConstant:{value:!0},definitionChanged:{get:function(){return this._definitionChanged}}});mn.prototype.getValue=function(Z,m){return this._hasClone?this._value.clone(m):this._value};mn.prototype.setValue=function(Z){let m=this._value;if(m!==Z){let h=V(Z),n=h&&typeof Z.clone=="function",i=h&&typeof Z.equals=="function";(!i||!Z.equals(m))&&(this._hasClone=n,this._hasEquals=i,this._value=n?Z.clone(this._value):Z,this._definitionChanged.raiseEvent(this))}};mn.prototype.equals=function(Z){return this===Z||Z instanceof mn&&(!this._hasEquals&&this._value===Z._value||this._hasEquals&&this._value.equals(Z._value))};mn.prototype.valueOf=function(){return this._value};mn.prototype.toString=function(){return String(this._value)};var bY=mn;function VJ(Z,m,h,n,i){return{configurable:n,get:function(){return this[m]},set:function(A){let t=this[m],W=this[h];V(W)&&(W(),this[h]=void 0),A!==void 0&&(!V(A)||!V(A.getValue))&&V(i)&&(A=i(A)),t!==A&&(this[m]=A,this._definitionChanged.raiseEvent(this,Z,A,t)),V(A)&&V(A.definitionChanged)&&(this[h]=A.definitionChanged.addEventListener(function(){this._definitionChanged.raiseEvent(this,Z,A,A)},this))}}}function lJ(Z){return new bY(Z)}function RJ(Z,m,h){return VJ(Z,`_${Z.toString()}`,`_${Z.toString()}Subscription`,l(m,!1),l(h,lJ))}var j=RJ;function zi(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._image=void 0,this._imageSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._pixelOffset=void 0,this._pixelOffsetSubscription=void 0,this._eyeOffset=void 0,this._eyeOffsetSubscription=void 0,this._horizontalOrigin=void 0,this._horizontalOriginSubscription=void 0,this._verticalOrigin=void 0,this._verticalOriginSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._color=void 0,this._colorSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._alignedAxis=void 0,this._alignedAxisSubscription=void 0,this._sizeInMeters=void 0,this._sizeInMetersSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._scaleByDistance=void 0,this._scaleByDistanceSubscription=void 0,this._translucencyByDistance=void 0,this._translucencyByDistanceSubscription=void 0,this._pixelOffsetScaleByDistance=void 0,this._pixelOffsetScaleByDistanceSubscription=void 0,this._imageSubRegion=void 0,this._imageSubRegionSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this._disableDepthTestDistance=void 0,this._disableDepthTestDistanceSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(zi.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),image:j("image"),scale:j("scale"),pixelOffset:j("pixelOffset"),eyeOffset:j("eyeOffset"),horizontalOrigin:j("horizontalOrigin"),verticalOrigin:j("verticalOrigin"),heightReference:j("heightReference"),color:j("color"),rotation:j("rotation"),alignedAxis:j("alignedAxis"),sizeInMeters:j("sizeInMeters"),width:j("width"),height:j("height"),scaleByDistance:j("scaleByDistance"),translucencyByDistance:j("translucencyByDistance"),pixelOffsetScaleByDistance:j("pixelOffsetScaleByDistance"),imageSubRegion:j("imageSubRegion"),distanceDisplayCondition:j("distanceDisplayCondition"),disableDepthTestDistance:j("disableDepthTestDistance")});zi.prototype.clone=function(Z){return V(Z)?(Z.show=this._show,Z.image=this._image,Z.scale=this._scale,Z.pixelOffset=this._pixelOffset,Z.eyeOffset=this._eyeOffset,Z.horizontalOrigin=this._horizontalOrigin,Z.verticalOrigin=this._verticalOrigin,Z.heightReference=this._heightReference,Z.color=this._color,Z.rotation=this._rotation,Z.alignedAxis=this._alignedAxis,Z.sizeInMeters=this._sizeInMeters,Z.width=this._width,Z.height=this._height,Z.scaleByDistance=this._scaleByDistance,Z.translucencyByDistance=this._translucencyByDistance,Z.pixelOffsetScaleByDistance=this._pixelOffsetScaleByDistance,Z.imageSubRegion=this._imageSubRegion,Z.distanceDisplayCondition=this._distanceDisplayCondition,Z.disableDepthTestDistance=this._disableDepthTestDistance,Z):new zi(this)};zi.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this._show,Z.show),this.image=l(this._image,Z.image),this.scale=l(this._scale,Z.scale),this.pixelOffset=l(this._pixelOffset,Z.pixelOffset),this.eyeOffset=l(this._eyeOffset,Z.eyeOffset),this.horizontalOrigin=l(this._horizontalOrigin,Z.horizontalOrigin),this.verticalOrigin=l(this._verticalOrigin,Z.verticalOrigin),this.heightReference=l(this._heightReference,Z.heightReference),this.color=l(this._color,Z.color),this.rotation=l(this._rotation,Z.rotation),this.alignedAxis=l(this._alignedAxis,Z.alignedAxis),this.sizeInMeters=l(this._sizeInMeters,Z.sizeInMeters),this.width=l(this._width,Z.width),this.height=l(this._height,Z.height),this.scaleByDistance=l(this._scaleByDistance,Z.scaleByDistance),this.translucencyByDistance=l(this._translucencyByDistance,Z.translucencyByDistance),this.pixelOffsetScaleByDistance=l(this._pixelOffsetScaleByDistance,Z.pixelOffsetScaleByDistance),this.imageSubRegion=l(this._imageSubRegion,Z.imageSubRegion),this.distanceDisplayCondition=l(this._distanceDisplayCondition,Z.distanceDisplayCondition),this.disableDepthTestDistance=l(this._disableDepthTestDistance,Z.disableDepthTestDistance)};var EF=zi;function tY(){U.throwInstantiationError()}Object.defineProperties(tY.prototype,{isConstant:{get:U.throwInstantiationError},definitionChanged:{get:U.throwInstantiationError}});tY.prototype.getValue=U.throwInstantiationError;tY.prototype.equals=U.throwInstantiationError;tY.equals=function(Z,m){return Z===m||V(Z)&&Z.equals(m)};tY.arrayEquals=function(Z,m){if(Z===m)return!0;if(!V(Z)||!V(m)||Z.length!==m.length)return!1;let h=Z.length;for(let n=0;n<h;n++)if(!tY.equals(Z[n],m[n]))return!1;return!0};tY.isConstant=function(Z){return!V(Z)||Z.isConstant};tY.getValueOrUndefined=function(Z,m,h){return V(Z)?Z.getValue(m,h):void 0};tY.getValueOrDefault=function(Z,m,h,n){return V(Z)?l(Z.getValue(m,n),h):h};tY.getValueOrClonedDefault=function(Z,m,h,n){let i;return V(Z)&&(i=Z.getValue(m,n)),V(i)||(i=h.clone(i)),i};var OZ=tY;function $n(Z){this._definitionChanged=new sZ,this._color=void 0,this._colorSubscription=void 0,this.color=Z}Object.defineProperties($n.prototype,{isConstant:{get:function(){return OZ.isConstant(this._color)}},definitionChanged:{get:function(){return this._definitionChanged}},color:j("color")});$n.prototype.getType=function(Z){return"Color"};$n.prototype.getValue=function(Z,m){return V(m)||(m={}),m.color=OZ.getValueOrClonedDefault(this._color,Z,H.WHITE,m.color),m};$n.prototype.equals=function(Z){return this===Z||Z instanceof $n&&OZ.equals(this._color,Z._color)};var kF=$n;var GJ=new q(1,1),FJ=!1,dJ=H.WHITE;function Zi(Z){Z=l(Z,l.EMPTY_OBJECT),this._definitionChanged=new sZ,this._image=void 0,this._imageSubscription=void 0,this._repeat=void 0,this._repeatSubscription=void 0,this._color=void 0,this._colorSubscription=void 0,this._transparent=void 0,this._transparentSubscription=void 0,this.image=Z.image,this.repeat=Z.repeat,this.color=Z.color,this.transparent=Z.transparent}Object.defineProperties(Zi.prototype,{isConstant:{get:function(){return OZ.isConstant(this._image)&&OZ.isConstant(this._repeat)}},definitionChanged:{get:function(){return this._definitionChanged}},image:j("image"),repeat:j("repeat"),color:j("color"),transparent:j("transparent")});Zi.prototype.getType=function(Z){return"Image"};Zi.prototype.getValue=function(Z,m){return V(m)||(m={}),m.image=OZ.getValueOrUndefined(this._image,Z),m.repeat=OZ.getValueOrClonedDefault(this._repeat,Z,GJ,m.repeat),m.color=OZ.getValueOrClonedDefault(this._color,Z,dJ,m.color),OZ.getValueOrDefault(this._transparent,Z,FJ)&&(m.color.alpha=Math.min(.99,m.color.alpha)),m};Zi.prototype.equals=function(Z){return this===Z||Z instanceof Zi&&OZ.equals(this._image,Z._image)&&OZ.equals(this._repeat,Z._repeat)&&OZ.equals(this._color,Z._color)&&OZ.equals(this._transparent,Z._transparent)};var UF=Zi;function sJ(Z){if(Z instanceof H)return new kF(Z);if(typeof Z=="string"||Z instanceof Dm||Z instanceof HTMLCanvasElement||Z instanceof HTMLVideoElement){let m=new UF;return m.image=Z,m}throw new U(`Unable to infer material type: ${Z}`)}function rJ(Z,m){return j(Z,m,sJ)}var rm=rJ;function Xi(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._dimensions=void 0,this._dimensionsSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(Xi.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),dimensions:j("dimensions"),heightReference:j("heightReference"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition")});Xi.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.dimensions=this.dimensions,Z.heightReference=this.heightReference,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z):new Xi(this)};Xi.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.dimensions=l(this.dimensions,Z.dimensions),this.heightReference=l(this.heightReference,Z.heightReference),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition)};var JF=Xi;function mi(){U.throwInstantiationError()}Object.defineProperties(mi.prototype,{isConstant:{get:U.throwInstantiationError},definitionChanged:{get:U.throwInstantiationError},referenceFrame:{get:U.throwInstantiationError}});mi.prototype.getValue=U.throwInstantiationError;mi.prototype.getValueInReferenceFrame=U.throwInstantiationError;mi.prototype.equals=U.throwInstantiationError;var bt=new Bm;mi.convertToReferenceFrame=function(Z,m,h,n,i){if(!V(m))return m;if(V(i)||(i=new _),h===n)return _.clone(m,i);let A=kh.computeIcrfToFixedMatrix(Z,bt);if(V(A)||(A=kh.computeTemeToPseudoFixedMatrix(Z,bt)),h===Mm.INERTIAL)return Bm.multiplyByVector(A,m,i);if(h===Mm.FIXED)return Bm.multiplyByVector(Bm.transpose(A,bt),m,i)};var oa=mi;function pn(Z,m){this._definitionChanged=new sZ,this._value=_.clone(Z),this._referenceFrame=l(m,Mm.FIXED)}Object.defineProperties(pn.prototype,{isConstant:{get:function(){return!V(this._value)||this._referenceFrame===Mm.FIXED}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return this._referenceFrame}}});pn.prototype.getValue=function(Z,m){return this.getValueInReferenceFrame(Z,Mm.FIXED,m)};pn.prototype.setValue=function(Z,m){let h=!1;_.equals(this._value,Z)||(h=!0,this._value=_.clone(Z)),V(m)&&this._referenceFrame!==m&&(h=!0,this._referenceFrame=m),h&&this._definitionChanged.raiseEvent(this)};pn.prototype.getValueInReferenceFrame=function(Z,m,h){if(!V(Z))throw new U("time is required.");if(!V(m))throw new U("referenceFrame is required.");return oa.convertToReferenceFrame(Z,this._value,this._referenceFrame,m,h)};pn.prototype.equals=function(Z){return this===Z||Z instanceof pn&&_.equals(this._value,Z._value)&&this._referenceFrame===Z._referenceFrame};var QF=pn;function Li(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._extrudedHeightReference=void 0,this._extrudedHeightReferenceSubscription=void 0,this._cornerType=void 0,this._cornerTypeSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this._classificationType=void 0,this._classificationTypeSubscription=void 0,this._zIndex=void 0,this._zIndexSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(Li.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),positions:j("positions"),width:j("width"),height:j("height"),heightReference:j("heightReference"),extrudedHeight:j("extrudedHeight"),extrudedHeightReference:j("extrudedHeightReference"),cornerType:j("cornerType"),granularity:j("granularity"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition"),classificationType:j("classificationType"),zIndex:j("zIndex")});Li.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.positions=this.positions,Z.width=this.width,Z.height=this.height,Z.heightReference=this.heightReference,Z.extrudedHeight=this.extrudedHeight,Z.extrudedHeightReference=this.extrudedHeightReference,Z.cornerType=this.cornerType,Z.granularity=this.granularity,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z.classificationType=this.classificationType,Z.zIndex=this.zIndex,Z):new Li(this)};Li.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.positions=l(this.positions,Z.positions),this.width=l(this.width,Z.width),this.height=l(this.height,Z.height),this.heightReference=l(this.heightReference,Z.heightReference),this.extrudedHeight=l(this.extrudedHeight,Z.extrudedHeight),this.extrudedHeightReference=l(this.extrudedHeightReference,Z.extrudedHeightReference),this.cornerType=l(this.cornerType,Z.cornerType),this.granularity=l(this.granularity,Z.granularity),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition),this.classificationType=l(this.classificationType,Z.classificationType),this.zIndex=l(this.zIndex,Z.zIndex)};var CF=Li;function NJ(Z){return Z}function EJ(Z,m){return j(Z,m,NJ)}var Va=EJ;function vi(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._length=void 0,this._lengthSubscription=void 0,this._topRadius=void 0,this._topRadiusSubscription=void 0,this._bottomRadius=void 0,this._bottomRadiusSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._numberOfVerticalLines=void 0,this._numberOfVerticalLinesSubscription=void 0,this._slices=void 0,this._slicesSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(vi.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),length:j("length"),topRadius:j("topRadius"),bottomRadius:j("bottomRadius"),heightReference:j("heightReference"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),numberOfVerticalLines:j("numberOfVerticalLines"),slices:j("slices"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition")});vi.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.length=this.length,Z.topRadius=this.topRadius,Z.bottomRadius=this.bottomRadius,Z.heightReference=this.heightReference,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.numberOfVerticalLines=this.numberOfVerticalLines,Z.slices=this.slices,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z):new vi(this)};vi.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.length=l(this.length,Z.length),this.topRadius=l(this.topRadius,Z.topRadius),this.bottomRadius=l(this.bottomRadius,Z.bottomRadius),this.heightReference=l(this.heightReference,Z.heightReference),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.numberOfVerticalLines=l(this.numberOfVerticalLines,Z.numberOfVerticalLines),this.slices=l(this.slices,Z.slices),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition)};var BF=vi;function Pi(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._semiMajorAxis=void 0,this._semiMajorAxisSubscription=void 0,this._semiMinorAxis=void 0,this._semiMinorAxisSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._extrudedHeightReference=void 0,this._extrudedHeightReferenceSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._numberOfVerticalLines=void 0,this._numberOfVerticalLinesSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this._classificationType=void 0,this._classificationTypeSubscription=void 0,this._zIndex=void 0,this._zIndexSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(Pi.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),semiMajorAxis:j("semiMajorAxis"),semiMinorAxis:j("semiMinorAxis"),height:j("height"),heightReference:j("heightReference"),extrudedHeight:j("extrudedHeight"),extrudedHeightReference:j("extrudedHeightReference"),rotation:j("rotation"),stRotation:j("stRotation"),granularity:j("granularity"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),numberOfVerticalLines:j("numberOfVerticalLines"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition"),classificationType:j("classificationType"),zIndex:j("zIndex")});Pi.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.semiMajorAxis=this.semiMajorAxis,Z.semiMinorAxis=this.semiMinorAxis,Z.height=this.height,Z.heightReference=this.heightReference,Z.extrudedHeight=this.extrudedHeight,Z.extrudedHeightReference=this.extrudedHeightReference,Z.rotation=this.rotation,Z.stRotation=this.stRotation,Z.granularity=this.granularity,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.numberOfVerticalLines=this.numberOfVerticalLines,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z.classificationType=this.classificationType,Z.zIndex=this.zIndex,Z):new Pi(this)};Pi.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.semiMajorAxis=l(this.semiMajorAxis,Z.semiMajorAxis),this.semiMinorAxis=l(this.semiMinorAxis,Z.semiMinorAxis),this.height=l(this.height,Z.height),this.heightReference=l(this.heightReference,Z.heightReference),this.extrudedHeight=l(this.extrudedHeight,Z.extrudedHeight),this.extrudedHeightReference=l(this.extrudedHeightReference,Z.extrudedHeightReference),this.rotation=l(this.rotation,Z.rotation),this.stRotation=l(this.stRotation,Z.stRotation),this.granularity=l(this.granularity,Z.granularity),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.numberOfVerticalLines=l(this.numberOfVerticalLines,Z.numberOfVerticalLines),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition),this.classificationType=l(this.classificationType,Z.classificationType),this.zIndex=l(this.zIndex,Z.zIndex)};var gF=Pi;function Ki(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._radii=void 0,this._radiiSubscription=void 0,this._innerRadii=void 0,this._innerRadiiSubscription=void 0,this._minimumClock=void 0,this._minimumClockSubscription=void 0,this._maximumClock=void 0,this._maximumClockSubscription=void 0,this._minimumCone=void 0,this._minimumConeSubscription=void 0,this._maximumCone=void 0,this._maximumConeSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._stackPartitions=void 0,this._stackPartitionsSubscription=void 0,this._slicePartitions=void 0,this._slicePartitionsSubscription=void 0,this._subdivisions=void 0,this._subdivisionsSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(Ki.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),radii:j("radii"),innerRadii:j("innerRadii"),minimumClock:j("minimumClock"),maximumClock:j("maximumClock"),minimumCone:j("minimumCone"),maximumCone:j("maximumCone"),heightReference:j("heightReference"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),stackPartitions:j("stackPartitions"),slicePartitions:j("slicePartitions"),subdivisions:j("subdivisions"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition")});Ki.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.radii=this.radii,Z.innerRadii=this.innerRadii,Z.minimumClock=this.minimumClock,Z.maximumClock=this.maximumClock,Z.minimumCone=this.minimumCone,Z.maximumCone=this.maximumCone,Z.heightReference=this.heightReference,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.stackPartitions=this.stackPartitions,Z.slicePartitions=this.slicePartitions,Z.subdivisions=this.subdivisions,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z):new Ki(this)};Ki.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.radii=l(this.radii,Z.radii),this.innerRadii=l(this.innerRadii,Z.innerRadii),this.minimumClock=l(this.minimumClock,Z.minimumClock),this.maximumClock=l(this.maximumClock,Z.maximumClock),this.minimumCone=l(this.minimumCone,Z.minimumCone),this.maximumCone=l(this.maximumCone,Z.maximumCone),this.heightReference=l(this.heightReference,Z.heightReference),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.stackPartitions=l(this.stackPartitions,Z.stackPartitions),this.slicePartitions=l(this.slicePartitions,Z.slicePartitions),this.subdivisions=l(this.subdivisions,Z.subdivisions),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition)};var IF=Ki;function qi(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._text=void 0,this._textSubscription=void 0,this._font=void 0,this._fontSubscription=void 0,this._style=void 0,this._styleSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._showBackground=void 0,this._showBackgroundSubscription=void 0,this._backgroundColor=void 0,this._backgroundColorSubscription=void 0,this._backgroundPadding=void 0,this._backgroundPaddingSubscription=void 0,this._pixelOffset=void 0,this._pixelOffsetSubscription=void 0,this._eyeOffset=void 0,this._eyeOffsetSubscription=void 0,this._horizontalOrigin=void 0,this._horizontalOriginSubscription=void 0,this._verticalOrigin=void 0,this._verticalOriginSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._fillColor=void 0,this._fillColorSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._translucencyByDistance=void 0,this._translucencyByDistanceSubscription=void 0,this._pixelOffsetScaleByDistance=void 0,this._pixelOffsetScaleByDistanceSubscription=void 0,this._scaleByDistance=void 0,this._scaleByDistanceSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this._disableDepthTestDistance=void 0,this._disableDepthTestDistanceSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(qi.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),text:j("text"),font:j("font"),style:j("style"),scale:j("scale"),showBackground:j("showBackground"),backgroundColor:j("backgroundColor"),backgroundPadding:j("backgroundPadding"),pixelOffset:j("pixelOffset"),eyeOffset:j("eyeOffset"),horizontalOrigin:j("horizontalOrigin"),verticalOrigin:j("verticalOrigin"),heightReference:j("heightReference"),fillColor:j("fillColor"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),translucencyByDistance:j("translucencyByDistance"),pixelOffsetScaleByDistance:j("pixelOffsetScaleByDistance"),scaleByDistance:j("scaleByDistance"),distanceDisplayCondition:j("distanceDisplayCondition"),disableDepthTestDistance:j("disableDepthTestDistance")});qi.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.text=this.text,Z.font=this.font,Z.style=this.style,Z.scale=this.scale,Z.showBackground=this.showBackground,Z.backgroundColor=this.backgroundColor,Z.backgroundPadding=this.backgroundPadding,Z.pixelOffset=this.pixelOffset,Z.eyeOffset=this.eyeOffset,Z.horizontalOrigin=this.horizontalOrigin,Z.verticalOrigin=this.verticalOrigin,Z.heightReference=this.heightReference,Z.fillColor=this.fillColor,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.translucencyByDistance=this.translucencyByDistance,Z.pixelOffsetScaleByDistance=this.pixelOffsetScaleByDistance,Z.scaleByDistance=this.scaleByDistance,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z.disableDepthTestDistance=this.disableDepthTestDistance,Z):new qi(this)};qi.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.text=l(this.text,Z.text),this.font=l(this.font,Z.font),this.style=l(this.style,Z.style),this.scale=l(this.scale,Z.scale),this.showBackground=l(this.showBackground,Z.showBackground),this.backgroundColor=l(this.backgroundColor,Z.backgroundColor),this.backgroundPadding=l(this.backgroundPadding,Z.backgroundPadding),this.pixelOffset=l(this.pixelOffset,Z.pixelOffset),this.eyeOffset=l(this.eyeOffset,Z.eyeOffset),this.horizontalOrigin=l(this.horizontalOrigin,Z.horizontalOrigin),this.verticalOrigin=l(this.verticalOrigin,Z.verticalOrigin),this.heightReference=l(this.heightReference,Z.heightReference),this.fillColor=l(this.fillColor,Z.fillColor),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.translucencyByDistance=l(this.translucencyByDistance,Z.translucencyByDistance),this.pixelOffsetScaleByDistance=l(this.pixelOffsetScaleByDistance,Z.pixelOffsetScaleByDistance),this.scaleByDistance=l(this.scaleByDistance,Z.scaleByDistance),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition),this.disableDepthTestDistance=l(this.disableDepthTestDistance,Z.disableDepthTestDistance)};var pF=qi;var kJ=new _(1,1,1),UJ=_.ZERO,JJ=zm.IDENTITY;function jF(Z,m,h){this.translation=_.clone(l(Z,UJ)),this.rotation=zm.clone(l(m,JJ)),this.scale=_.clone(l(h,kJ))}jF.prototype.equals=function(Z){return this===Z||V(Z)&&_.equals(this.translation,Z.translation)&&zm.equals(this.rotation,Z.rotation)&&_.equals(this.scale,Z.scale)};var xt=jF;var _t=new xt;function $i(Z){Z=l(Z,l.EMPTY_OBJECT),this._definitionChanged=new sZ,this._translation=void 0,this._translationSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this.translation=Z.translation,this.rotation=Z.rotation,this.scale=Z.scale}Object.defineProperties($i.prototype,{isConstant:{get:function(){return OZ.isConstant(this._translation)&&OZ.isConstant(this._rotation)&&OZ.isConstant(this._scale)}},definitionChanged:{get:function(){return this._definitionChanged}},translation:j("translation"),rotation:j("rotation"),scale:j("scale")});$i.prototype.getValue=function(Z,m){return V(m)||(m=new xt),m.translation=OZ.getValueOrClonedDefault(this._translation,Z,_t.translation,m.translation),m.rotation=OZ.getValueOrClonedDefault(this._rotation,Z,_t.rotation,m.rotation),m.scale=OZ.getValueOrClonedDefault(this._scale,Z,_t.scale,m.scale),m};$i.prototype.equals=function(Z){return this===Z||Z instanceof $i&&OZ.equals(this._translation,Z._translation)&&OZ.equals(this._rotation,Z._rotation)&&OZ.equals(this._scale,Z._scale)};var cF=$i;function xY(Z,m){this._propertyNames=[],this._definitionChanged=new sZ,V(Z)&&this.merge(Z,m)}Object.defineProperties(xY.prototype,{propertyNames:{get:function(){return this._propertyNames}},isConstant:{get:function(){let Z=this._propertyNames;for(let m=0,h=Z.length;m<h;m++)if(!OZ.isConstant(this[Z[m]]))return!1;return!0}},definitionChanged:{get:function(){return this._definitionChanged}}});xY.prototype.hasProperty=function(Z){return this._propertyNames.indexOf(Z)!==-1};function QJ(Z){return new bY(Z)}xY.prototype.addProperty=function(Z,m,h){let n=this._propertyNames;if(!V(Z))throw new U("propertyName is required.");if(n.indexOf(Z)!==-1)throw new U(`${Z} is already a registered property.`);n.push(Z),Object.defineProperty(this,Z,j(Z,!0,l(h,QJ))),V(m)&&(this[Z]=m),this._definitionChanged.raiseEvent(this)};xY.prototype.removeProperty=function(Z){let h=this._propertyNames.indexOf(Z);if(!V(Z))throw new U("propertyName is required.");if(h===-1)throw new U(`${Z} is not a registered property.`);this._propertyNames.splice(h,1),delete this[Z],this._definitionChanged.raiseEvent(this)};xY.prototype.getValue=function(Z,m){if(!V(Z))throw new U("time is required.");V(m)||(m={});let h=this._propertyNames;for(let n=0,i=h.length;n<i;n++){let A=h[n];m[A]=OZ.getValueOrUndefined(this[A],Z,m[A])}return m};xY.prototype.merge=function(Z,m){if(!V(Z))throw new U("source is required.");let h=this._propertyNames,n=V(Z._propertyNames)?Z._propertyNames:Object.keys(Z);for(let i=0,A=n.length;i<A;i++){let t=n[i],W=this[t],e=Z[t];W===void 0&&h.indexOf(t)===-1&&this.addProperty(t,void 0,m),e!==void 0&&(W!==void 0?V(W)&&V(W.merge)&&W.merge(e):V(e)&&V(e.merge)&&V(e.clone)?this[t]=e.clone():this[t]=e)}};function CJ(Z,m){let h=Z._propertyNames,n=m._propertyNames,i=h.length;if(i!==n.length)return!1;for(let A=0;A<i;++A){let t=h[A];if(n.indexOf(t)===-1||!OZ.equals(Z[t],m[t]))return!1}return!0}xY.prototype.equals=function(Z){return this===Z||Z instanceof xY&&CJ(this,Z)};var jn=xY;function TF(Z){return new cF(Z)}function BJ(Z){return new jn(Z,TF)}function gJ(Z){return new jn(Z)}function ZA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._uri=void 0,this._uriSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._minimumPixelSize=void 0,this._minimumPixelSizeSubscription=void 0,this._maximumScale=void 0,this._maximumScaleSubscription=void 0,this._incrementallyLoadTextures=void 0,this._incrementallyLoadTexturesSubscription=void 0,this._runAnimations=void 0,this._runAnimationsSubscription=void 0,this._clampAnimations=void 0,this._clampAnimationsSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._silhouetteColor=void 0,this._silhouetteColorSubscription=void 0,this._silhouetteSize=void 0,this._silhouetteSizeSubscription=void 0,this._color=void 0,this._colorSubscription=void 0,this._colorBlendMode=void 0,this._colorBlendModeSubscription=void 0,this._colorBlendAmount=void 0,this._colorBlendAmountSubscription=void 0,this._imageBasedLightingFactor=void 0,this._imageBasedLightingFactorSubscription=void 0,this._lightColor=void 0,this._lightColorSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this._nodeTransformations=void 0,this._nodeTransformationsSubscription=void 0,this._articulations=void 0,this._articulationsSubscription=void 0,this._clippingPlanes=void 0,this._clippingPlanesSubscription=void 0,this._customShader=void 0,this._customShaderSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(ZA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),uri:j("uri"),scale:j("scale"),minimumPixelSize:j("minimumPixelSize"),maximumScale:j("maximumScale"),incrementallyLoadTextures:j("incrementallyLoadTextures"),runAnimations:j("runAnimations"),clampAnimations:j("clampAnimations"),shadows:j("shadows"),heightReference:j("heightReference"),silhouetteColor:j("silhouetteColor"),silhouetteSize:j("silhouetteSize"),color:j("color"),colorBlendMode:j("colorBlendMode"),colorBlendAmount:j("colorBlendAmount"),imageBasedLightingFactor:j("imageBasedLightingFactor"),lightColor:j("lightColor"),distanceDisplayCondition:j("distanceDisplayCondition"),nodeTransformations:j("nodeTransformations",void 0,BJ),articulations:j("articulations",void 0,gJ),clippingPlanes:j("clippingPlanes"),customShader:j("customShader")});ZA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.uri=this.uri,Z.scale=this.scale,Z.minimumPixelSize=this.minimumPixelSize,Z.maximumScale=this.maximumScale,Z.incrementallyLoadTextures=this.incrementallyLoadTextures,Z.runAnimations=this.runAnimations,Z.clampAnimations=this.clampAnimations,Z.heightReference=this._heightReference,Z.silhouetteColor=this.silhouetteColor,Z.silhouetteSize=this.silhouetteSize,Z.color=this.color,Z.colorBlendMode=this.colorBlendMode,Z.colorBlendAmount=this.colorBlendAmount,Z.imageBasedLightingFactor=this.imageBasedLightingFactor,Z.lightColor=this.lightColor,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z.nodeTransformations=this.nodeTransformations,Z.articulations=this.articulations,Z.clippingPlanes=this.clippingPlanes,Z.customShader=this.customShader,Z):new ZA(this)};ZA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.uri=l(this.uri,Z.uri),this.scale=l(this.scale,Z.scale),this.minimumPixelSize=l(this.minimumPixelSize,Z.minimumPixelSize),this.maximumScale=l(this.maximumScale,Z.maximumScale),this.incrementallyLoadTextures=l(this.incrementallyLoadTextures,Z.incrementallyLoadTextures),this.runAnimations=l(this.runAnimations,Z.runAnimations),this.clampAnimations=l(this.clampAnimations,Z.clampAnimations),this.shadows=l(this.shadows,Z.shadows),this.heightReference=l(this.heightReference,Z.heightReference),this.silhouetteColor=l(this.silhouetteColor,Z.silhouetteColor),this.silhouetteSize=l(this.silhouetteSize,Z.silhouetteSize),this.color=l(this.color,Z.color),this.colorBlendMode=l(this.colorBlendMode,Z.colorBlendMode),this.colorBlendAmount=l(this.colorBlendAmount,Z.colorBlendAmount),this.imageBasedLightingFactor=l(this.imageBasedLightingFactor,Z.imageBasedLightingFactor),this.lightColor=l(this.lightColor,Z.lightColor),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition),this.clippingPlanes=l(this.clippingPlanes,Z.clippingPlanes),this.customShader=l(this.customShader,Z.customShader);let m=Z.nodeTransformations;if(V(m)){let n=this.nodeTransformations;V(n)?n.merge(m):this.nodeTransformations=new jn(m,TF)}let h=Z.articulations;if(V(h)){let n=this.articulations;V(n)?n.merge(h):this.articulations=new jn(h)}};var MF=ZA;function mA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._uri=void 0,this._uriSubscription=void 0,this._maximumScreenSpaceError=void 0,this._maximumScreenSpaceErrorSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(mA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),uri:j("uri"),maximumScreenSpaceError:j("maximumScreenSpaceError")});mA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.uri=this.uri,Z.maximumScreenSpaceError=this.maximumScreenSpaceError,Z):new mA(this)};mA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.uri=l(this.uri,Z.uri),this.maximumScreenSpaceError=l(this.maximumScreenSpaceError,Z.maximumScreenSpaceError)};var SF=mA;function hA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._leadTime=void 0,this._leadTimeSubscription=void 0,this._trailTime=void 0,this._trailTimeSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._resolution=void 0,this._resolutionSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(hA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),leadTime:j("leadTime"),trailTime:j("trailTime"),width:j("width"),resolution:j("resolution"),material:rm("material"),distanceDisplayCondition:j("distanceDisplayCondition")});hA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.leadTime=this.leadTime,Z.trailTime=this.trailTime,Z.width=this.width,Z.resolution=this.resolution,Z.material=this.material,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z):new hA(this)};hA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.leadTime=l(this.leadTime,Z.leadTime),this.trailTime=l(this.trailTime,Z.trailTime),this.width=l(this.width,Z.width),this.resolution=l(this.resolution,Z.resolution),this.material=l(this.material,Z.material),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition)};var DF=hA;function YA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._plane=void 0,this._planeSubscription=void 0,this._dimensions=void 0,this._dimensionsSubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(YA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),plane:j("plane"),dimensions:j("dimensions"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition")});YA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.plane=this.plane,Z.dimensions=this.dimensions,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z):new YA(this)};YA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.plane=l(this.plane,Z.plane),this.dimensions=l(this.dimensions,Z.dimensions),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition)};var fF=YA;function nA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._pixelSize=void 0,this._pixelSizeSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._color=void 0,this._colorSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._scaleByDistance=void 0,this._scaleByDistanceSubscription=void 0,this._translucencyByDistance=void 0,this._translucencyByDistanceSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this._disableDepthTestDistance=void 0,this._disableDepthTestDistanceSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(nA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),pixelSize:j("pixelSize"),heightReference:j("heightReference"),color:j("color"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),scaleByDistance:j("scaleByDistance"),translucencyByDistance:j("translucencyByDistance"),distanceDisplayCondition:j("distanceDisplayCondition"),disableDepthTestDistance:j("disableDepthTestDistance")});nA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.pixelSize=this.pixelSize,Z.heightReference=this.heightReference,Z.color=this.color,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.scaleByDistance=this.scaleByDistance,Z.translucencyByDistance=this._translucencyByDistance,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z.disableDepthTestDistance=this.disableDepthTestDistance,Z):new nA(this)};nA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.pixelSize=l(this.pixelSize,Z.pixelSize),this.heightReference=l(this.heightReference,Z.heightReference),this.color=l(this.color,Z.color),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.scaleByDistance=l(this.scaleByDistance,Z.scaleByDistance),this.translucencyByDistance=l(this._translucencyByDistance,Z.translucencyByDistance),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition),this.disableDepthTestDistance=l(this.disableDepthTestDistance,Z.disableDepthTestDistance)};var uF=nA;function IJ(Z){return Array.isArray(Z)&&(Z=new SA(Z)),new bY(Z)}function iA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._hierarchy=void 0,this._hierarchySubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._extrudedHeightReference=void 0,this._extrudedHeightReferenceSubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._perPositionHeight=void 0,this._perPositionHeightSubscription=void 0,this._closeTop=void 0,this._closeTopSubscription=void 0,this._closeBottom=void 0,this._closeBottomSubscription=void 0,this._arcType=void 0,this._arcTypeSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this._classificationType=void 0,this._classificationTypeSubscription=void 0,this._zIndex=void 0,this._zIndexSubscription=void 0,this._textureCoordinates=void 0,this._textureCoordinatesSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(iA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),hierarchy:j("hierarchy",void 0,IJ),height:j("height"),heightReference:j("heightReference"),extrudedHeight:j("extrudedHeight"),extrudedHeightReference:j("extrudedHeightReference"),stRotation:j("stRotation"),granularity:j("granularity"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),perPositionHeight:j("perPositionHeight"),closeTop:j("closeTop"),closeBottom:j("closeBottom"),arcType:j("arcType"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition"),classificationType:j("classificationType"),zIndex:j("zIndex"),textureCoordinates:j("textureCoordinates")});iA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.hierarchy=this.hierarchy,Z.height=this.height,Z.heightReference=this.heightReference,Z.extrudedHeight=this.extrudedHeight,Z.extrudedHeightReference=this.extrudedHeightReference,Z.stRotation=this.stRotation,Z.granularity=this.granularity,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.perPositionHeight=this.perPositionHeight,Z.closeTop=this.closeTop,Z.closeBottom=this.closeBottom,Z.arcType=this.arcType,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z.classificationType=this.classificationType,Z.zIndex=this.zIndex,Z.textureCoordinates=this.textureCoordinates,Z):new iA(this)};iA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.hierarchy=l(this.hierarchy,Z.hierarchy),this.height=l(this.height,Z.height),this.heightReference=l(this.heightReference,Z.heightReference),this.extrudedHeight=l(this.extrudedHeight,Z.extrudedHeight),this.extrudedHeightReference=l(this.extrudedHeightReference,Z.extrudedHeightReference),this.stRotation=l(this.stRotation,Z.stRotation),this.granularity=l(this.granularity,Z.granularity),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.perPositionHeight=l(this.perPositionHeight,Z.perPositionHeight),this.closeTop=l(this.closeTop,Z.closeTop),this.closeBottom=l(this.closeBottom,Z.closeBottom),this.arcType=l(this.arcType,Z.arcType),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition),this.classificationType=l(this.classificationType,Z.classificationType),this.zIndex=l(this.zIndex,Z.zIndex),this.textureCoordinates=l(this.textureCoordinates,Z.textureCoordinates)};var bF=iA;function AA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._depthFailMaterial=void 0,this._depthFailMaterialSubscription=void 0,this._arcType=void 0,this._arcTypeSubscription=void 0,this._clampToGround=void 0,this._clampToGroundSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this._classificationType=void 0,this._classificationTypeSubscription=void 0,this._zIndex=void 0,this._zIndexSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(AA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),positions:j("positions"),width:j("width"),granularity:j("granularity"),material:rm("material"),depthFailMaterial:rm("depthFailMaterial"),arcType:j("arcType"),clampToGround:j("clampToGround"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition"),classificationType:j("classificationType"),zIndex:j("zIndex")});AA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.positions=this.positions,Z.width=this.width,Z.granularity=this.granularity,Z.material=this.material,Z.depthFailMaterial=this.depthFailMaterial,Z.arcType=this.arcType,Z.clampToGround=this.clampToGround,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z.classificationType=this.classificationType,Z.zIndex=this.zIndex,Z):new AA(this)};AA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.positions=l(this.positions,Z.positions),this.width=l(this.width,Z.width),this.granularity=l(this.granularity,Z.granularity),this.material=l(this.material,Z.material),this.depthFailMaterial=l(this.depthFailMaterial,Z.depthFailMaterial),this.arcType=l(this.arcType,Z.arcType),this.clampToGround=l(this.clampToGround,Z.clampToGround),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition),this.classificationType=l(this.classificationType,Z.classificationType),this.zIndex=l(this.zIndex,Z.zIndex)};var xF=AA;function aA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._shape=void 0,this._shapeSubscription=void 0,this._cornerType=void 0,this._cornerTypeSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubsription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(aA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),positions:j("positions"),shape:j("shape"),cornerType:j("cornerType"),granularity:j("granularity"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition")});aA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.positions=this.positions,Z.shape=this.shape,Z.cornerType=this.cornerType,Z.granularity=this.granularity,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z):new aA(this)};aA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.positions=l(this.positions,Z.positions),this.shape=l(this.shape,Z.shape),this.cornerType=l(this.cornerType,Z.cornerType),this.granularity=l(this.granularity,Z.granularity),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition)};var _F=aA;function tA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._coordinates=void 0,this._coordinatesSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._heightReference=void 0,this._heightReferenceSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._extrudedHeightReference=void 0,this._extrudedHeightReferenceSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distancedisplayConditionSubscription=void 0,this._classificationType=void 0,this._classificationTypeSubscription=void 0,this._zIndex=void 0,this._zIndexSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(tA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),coordinates:j("coordinates"),height:j("height"),heightReference:j("heightReference"),extrudedHeight:j("extrudedHeight"),extrudedHeightReference:j("extrudedHeightReference"),rotation:j("rotation"),stRotation:j("stRotation"),granularity:j("granularity"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition"),classificationType:j("classificationType"),zIndex:j("zIndex")});tA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.coordinates=this.coordinates,Z.height=this.height,Z.heightReference=this.heightReference,Z.extrudedHeight=this.extrudedHeight,Z.extrudedHeightReference=this.extrudedHeightReference,Z.rotation=this.rotation,Z.stRotation=this.stRotation,Z.granularity=this.granularity,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z.classificationType=this.classificationType,Z.zIndex=this.zIndex,Z):new tA(this)};tA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.coordinates=l(this.coordinates,Z.coordinates),this.height=l(this.height,Z.height),this.heightReference=l(this.heightReference,Z.heightReference),this.extrudedHeight=l(this.extrudedHeight,Z.extrudedHeight),this.extrudedHeightReference=l(this.extrudedHeightReference,Z.extrudedHeightReference),this.rotation=l(this.rotation,Z.rotation),this.stRotation=l(this.stRotation,Z.stRotation),this.granularity=l(this.granularity,Z.granularity),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition),this.classificationType=l(this.classificationType,Z.classificationType),this.zIndex=l(this.zIndex,Z.zIndex)};var OF=tA;function WA(Z){this._definitionChanged=new sZ,this._show=void 0,this._showSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._minimumHeights=void 0,this._minimumHeightsSubscription=void 0,this._maximumHeights=void 0,this._maximumHeightsSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._fill=void 0,this._fillSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._shadows=void 0,this._shadowsSubscription=void 0,this._distanceDisplayCondition=void 0,this._distanceDisplayConditionSubscription=void 0,this.merge(l(Z,l.EMPTY_OBJECT))}Object.defineProperties(WA.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:j("show"),positions:j("positions"),minimumHeights:j("minimumHeights"),maximumHeights:j("maximumHeights"),granularity:j("granularity"),fill:j("fill"),material:rm("material"),outline:j("outline"),outlineColor:j("outlineColor"),outlineWidth:j("outlineWidth"),shadows:j("shadows"),distanceDisplayCondition:j("distanceDisplayCondition")});WA.prototype.clone=function(Z){return V(Z)?(Z.show=this.show,Z.positions=this.positions,Z.minimumHeights=this.minimumHeights,Z.maximumHeights=this.maximumHeights,Z.granularity=this.granularity,Z.fill=this.fill,Z.material=this.material,Z.outline=this.outline,Z.outlineColor=this.outlineColor,Z.outlineWidth=this.outlineWidth,Z.shadows=this.shadows,Z.distanceDisplayCondition=this.distanceDisplayCondition,Z):new WA(this)};WA.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.show=l(this.show,Z.show),this.positions=l(this.positions,Z.positions),this.minimumHeights=l(this.minimumHeights,Z.minimumHeights),this.maximumHeights=l(this.maximumHeights,Z.maximumHeights),this.granularity=l(this.granularity,Z.granularity),this.fill=l(this.fill,Z.fill),this.material=l(this.material,Z.material),this.outline=l(this.outline,Z.outline),this.outlineColor=l(this.outlineColor,Z.outlineColor),this.outlineWidth=l(this.outlineWidth,Z.outlineWidth),this.shadows=l(this.shadows,Z.shadows),this.distanceDisplayCondition=l(this.distanceDisplayCondition,Z.distanceDisplayCondition)};var wF=WA;var pJ={NONE:0,HOLD:1,EXTRAPOLATE:2},cn=Object.freeze(pJ);var Ot={type:"Linear"};Ot.getRequiredDataPoints=function(Z){return 2};Ot.interpolateOrderZero=function(Z,m,h,n,i){if(m.length!==2)throw new U("The xTable provided to the linear interpolator must have exactly two elements.");if(n<=0)throw new U("There must be at least 1 dependent variable for each independent variable.");V(i)||(i=new Array(n));let A,t,W,e=m[0],G=m[1];if(e===G)throw new U("Divide by zero error: xTable[0] and xTable[1] are equal");for(A=0;A<n;A++)t=h[A],W=h[A+n],i[A]=((W-t)*Z+G*t-e*W)/(G-e);return i};var yF=Ot;var HF={packedLength:1,pack:function(Z,m,h){h=l(h,0),m[h]=Z},unpack:function(Z,m,h){return m=l(m,0),Z[m]}};function zF(Z,m,h){let n,i=Z.length,A=h.length,t=i+A;if(Z.length=t,i!==m){let W=i-1;for(n=t-1;n>=m;n--)Z[n]=Z[W--]}for(n=0;n<A;n++)Z[m++]=h[n]}function XF(Z,m){return Z instanceof kZ?Z:typeof Z=="string"?kZ.fromIso8601(Z):kZ.addSeconds(m,Z,new kZ)}var wt=[],yt=[];function la(Z,m,h,n,i){let A=0,t,W,e,G,F,d;for(;A<n.length;){F=XF(n[A],Z),e=vY(m,F,kZ.compare);let J=0,k=0;if(e<0){for(e=~e,G=e*i,W=void 0,d=m[e];A<n.length&&(F=XF(n[A],Z),!(V(W)&&kZ.compare(W,F)>=0||V(d)&&kZ.compare(F,d)>=0));){for(wt[J++]=F,A=A+1,t=0;t<i;t++)yt[k++]=n[A],A=A+1;W=F}J>0&&(yt.length=k,zF(h,G,yt),wt.length=J,zF(m,e,wt))}else{for(t=0;t<i;t++)A++,h[e*i+t]=n[A];A++}}}function WY(Z,m){y.defined("type",Z);let h=Z;h===Number&&(h=HF);let n=h.packedLength,i=l(h.packedInterpolationLength,n),A=0,t;if(V(m)){let W=m.length;t=new Array(W);for(let e=0;e<W;e++){let G=m[e];G===Number&&(G=HF);let F=G.packedLength;n+=F,i+=l(G.packedInterpolationLength,F),t[e]=G}A=W}this._type=Z,this._innerType=h,this._interpolationDegree=1,this._interpolationAlgorithm=yF,this._numberOfPoints=0,this._times=[],this._values=[],this._xTable=[],this._yTable=[],this._packedLength=n,this._packedInterpolationLength=i,this._updateTableLength=!0,this._interpolationResult=new Array(i),this._definitionChanged=new sZ,this._derivativeTypes=m,this._innerDerivativeTypes=t,this._inputOrder=A,this._forwardExtrapolationType=cn.NONE,this._forwardExtrapolationDuration=0,this._backwardExtrapolationType=cn.NONE,this._backwardExtrapolationDuration=0}Object.defineProperties(WY.prototype,{isConstant:{get:function(){return this._values.length===0}},definitionChanged:{get:function(){return this._definitionChanged}},type:{get:function(){return this._type}},derivativeTypes:{get:function(){return this._derivativeTypes}},interpolationDegree:{get:function(){return this._interpolationDegree}},interpolationAlgorithm:{get:function(){return this._interpolationAlgorithm}},forwardExtrapolationType:{get:function(){return this._forwardExtrapolationType},set:function(Z){this._forwardExtrapolationType!==Z&&(this._forwardExtrapolationType=Z,this._definitionChanged.raiseEvent(this))}},forwardExtrapolationDuration:{get:function(){return this._forwardExtrapolationDuration},set:function(Z){this._forwardExtrapolationDuration!==Z&&(this._forwardExtrapolationDuration=Z,this._definitionChanged.raiseEvent(this))}},backwardExtrapolationType:{get:function(){return this._backwardExtrapolationType},set:function(Z){this._backwardExtrapolationType!==Z&&(this._backwardExtrapolationType=Z,this._definitionChanged.raiseEvent(this))}},backwardExtrapolationDuration:{get:function(){return this._backwardExtrapolationDuration},set:function(Z){this._backwardExtrapolationDuration!==Z&&(this._backwardExtrapolationDuration=Z,this._definitionChanged.raiseEvent(this))}}});WY.prototype.getValue=function(Z,m){y.defined("time",Z);let h=this._times,n=h.length;if(n===0)return;let i,A=this._innerType,t=this._values,W=vY(h,Z,kZ.compare);if(W<0){if(W=~W,W===0){let b=h[W];if(i=this._backwardExtrapolationDuration,this._backwardExtrapolationType===cn.NONE||i!==0&&kZ.secondsDifference(b,Z)>i)return;if(this._backwardExtrapolationType===cn.HOLD)return A.unpack(t,0,m)}if(W>=n){W=n-1;let b=h[W];if(i=this._forwardExtrapolationDuration,this._forwardExtrapolationType===cn.NONE||i!==0&&kZ.secondsDifference(Z,b)>i)return;if(this._forwardExtrapolationType===cn.HOLD)return W=n-1,A.unpack(t,W*A.packedLength,m)}let e=this._xTable,G=this._yTable,F=this._interpolationAlgorithm,d=this._packedInterpolationLength,J=this._inputOrder;if(this._updateTableLength){this._updateTableLength=!1;let b=Math.min(F.getRequiredDataPoints(this._interpolationDegree,J),n);b!==this._numberOfPoints&&(this._numberOfPoints=b,e.length=b,G.length=b*d)}let k=this._numberOfPoints-1;if(k<1)return;let r=0,Q=n-1;if(Q-r+1>=k+1){let b=W-(k/2|0)-1;b<r&&(b=r);let O=b+k;O>Q&&(O=Q,b=O-k,b<r&&(b=r)),r=b,Q=O}let T=Q-r+1;for(let b=0;b<T;++b)e[b]=kZ.secondsDifference(h[r+b],h[Q]);if(V(A.convertPackedArrayForInterpolation))A.convertPackedArrayForInterpolation(t,r,Q,G);else{let b=0,O=this._packedLength,v=r*O,hZ=(Q+1)*O;for(;v<hZ;)G[b]=t[v],v++,b++}let I=kZ.secondsDifference(Z,h[Q]),f;if(J===0||!V(F.interpolate))f=F.interpolateOrderZero(I,e,G,d,this._interpolationResult);else{let b=Math.floor(d/(J+1));f=F.interpolate(I,e,G,b,J,J,this._interpolationResult)}return V(A.unpackInterpolationResult)?A.unpackInterpolationResult(f,t,r,Q,m):A.unpack(f,0,m)}return A.unpack(t,W*this._packedLength,m)};WY.prototype.setInterpolationOptions=function(Z){if(!V(Z))return;let m=!1,h=Z.interpolationAlgorithm,n=Z.interpolationDegree;V(h)&&this._interpolationAlgorithm!==h&&(this._interpolationAlgorithm=h,m=!0),V(n)&&this._interpolationDegree!==n&&(this._interpolationDegree=n,m=!0),m&&(this._updateTableLength=!0,this._definitionChanged.raiseEvent(this))};WY.prototype.addSample=function(Z,m,h){let n=this._innerDerivativeTypes,i=V(n);y.defined("time",Z),y.defined("value",m),i&&y.defined("derivatives",h);let A=this._innerType,t=[];if(t.push(Z),A.pack(m,t,t.length),i){let W=n.length;for(let e=0;e<W;e++)n[e].pack(h[e],t,t.length)}la(void 0,this._times,this._values,t,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)};WY.prototype.addSamples=function(Z,m,h){let n=this._innerDerivativeTypes,i=V(n);if(y.defined("times",Z),y.defined("values",m),Z.length!==m.length)throw new U("times and values must be the same length.");if(i&&(!V(h)||h.length!==Z.length))throw new U("times and derivativeValues must be the same length.");let A=this._innerType,t=Z.length,W=[];for(let e=0;e<t;e++)if(W.push(Z[e]),A.pack(m[e],W,W.length),i){let G=h[e],F=n.length;for(let d=0;d<F;d++)n[d].pack(G[d],W,W.length)}la(void 0,this._times,this._values,W,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)};WY.prototype.addSamplesPackedArray=function(Z,m){y.defined("packedSamples",Z),la(m,this._times,this._values,Z,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)};WY.prototype.removeSample=function(Z){y.defined("time",Z);let m=vY(this._times,Z,kZ.compare);return m<0?!1:(LF(this,m,1),!0)};function LF(Z,m,h){let n=Z._packedLength;Z._times.splice(m,h),Z._values.splice(m*n,h*n),Z._updateTableLength=!0,Z._definitionChanged.raiseEvent(Z)}WY.prototype.removeSamples=function(Z){y.defined("timeInterval",Z);let m=this._times,h=vY(m,Z.start,kZ.compare);h<0?h=~h:Z.isStartIncluded||++h;let n=vY(m,Z.stop,kZ.compare);n<0?n=~n:Z.isStopIncluded&&++n,LF(this,h,n-h)};WY.prototype.equals=function(Z){if(this===Z)return!0;if(!V(Z)||this._type!==Z._type||this._interpolationDegree!==Z._interpolationDegree||this._interpolationAlgorithm!==Z._interpolationAlgorithm)return!1;let m=this._derivativeTypes,h=V(m),n=Z._derivativeTypes,i=V(n);if(h!==i)return!1;let A,t;if(h){if(t=m.length,t!==n.length)return!1;for(A=0;A<t;A++)if(m[A]!==n[A])return!1}let W=this._times,e=Z._times;if(t=W.length,t!==e.length)return!1;for(A=0;A<t;A++)if(!kZ.equals(W[A],e[A]))return!1;let G=this._values,F=Z._values;for(t=G.length,A=0;A<t;A++)if(G[A]!==F[A])return!1;return!0};WY._mergeNewSamples=la;var Ra=WY;var{eastNorthUpToFixedFrame:jJ,getTransformToFixedFrame:cJ}=kh,TJ=new nm;function MJ(Z){return new QF(Z)}function SJ(Z){return j(Z,void 0,MJ)}function ih(Z,m){return j(Z,void 0,function(h){return h instanceof m?h:new m(h)})}function zh(Z){Z=l(Z,l.EMPTY_OBJECT);let m=Z.id;V(m)||(m=Km()),this._availability=void 0,this._id=m,this._definitionChanged=new sZ,this._name=Z.name,this._show=l(Z.show,!0),this._parent=void 0,this._propertyNames=["billboard","box","corridor","cylinder","description","ellipse","ellipsoid","label","model","tileset","orientation","path","plane","point","polygon","polyline","polylineVolume","position","properties","rectangle","viewFrom","wall","referenceFrame","gltfZForwardYUp"],this._billboard=void 0,this._billboardSubscription=void 0,this._box=void 0,this._boxSubscription=void 0,this._corridor=void 0,this._corridorSubscription=void 0,this._cylinder=void 0,this._cylinderSubscription=void 0,this._description=void 0,this._descriptionSubscription=void 0,this._ellipse=void 0,this._ellipseSubscription=void 0,this._ellipsoid=void 0,this._ellipsoidSubscription=void 0,this._label=void 0,this._labelSubscription=void 0,this._model=void 0,this._modelSubscription=void 0,this._tileset=void 0,this._tilesetSubscription=void 0,this._orientation=void 0,this._orientationSubscription=void 0,this._path=void 0,this._pathSubscription=void 0,this._plane=void 0,this._planeSubscription=void 0,this._point=void 0,this._pointSubscription=void 0,this._polygon=void 0,this._polygonSubscription=void 0,this._polyline=void 0,this._polylineSubscription=void 0,this._polylineVolume=void 0,this._polylineVolumeSubscription=void 0,this._position=void 0,this._positionSubscription=void 0,this._properties=void 0,this._propertiesSubscription=void 0,this._rectangle=void 0,this._rectangleSubscription=void 0,this._viewFrom=void 0,this._viewFromSubscription=void 0,this._wall=void 0,this._wallSubscription=void 0,this._children=[],this.entityCollection=void 0,this._referenceFrame=l(Z.referenceFrame,void 0),this._gltfZForwardYUp=l(Z.gltfZForwardYUp,!1),this.parent=Z.parent,this.merge(Z)}function Ht(Z,m,h){let n=m.length;for(let i=0;i<n;i++){let A=m[i],t=A._show;(!h&&t)!==(h&&t)&&Ht(A,A._children,h)}Z._definitionChanged.raiseEvent(Z,"isShowing",h,!h)}Object.defineProperties(zh.prototype,{availability:Va("availability"),id:{get:function(){return this._id}},definitionChanged:{get:function(){return this._definitionChanged}},name:Va("name"),show:{get:function(){return this._show},set:function(Z){if(!V(Z))throw new U("value is required.");if(Z===this._show)return;let m=this.isShowing;this._show=Z;let h=this.isShowing;m!==h&&Ht(this,this._children,h),this._definitionChanged.raiseEvent(this,"show",Z,!Z)}},isShowing:{get:function(){return this._show&&(!V(this.entityCollection)||this.entityCollection.show)&&(!V(this._parent)||this._parent.isShowing)}},parent:{get:function(){return this._parent},set:function(Z){let m=this._parent;if(m===Z)return;let h=this.isShowing;if(V(m)){let i=m._children.indexOf(this);m._children.splice(i,1)}this._parent=Z,V(Z)&&Z._children.push(this);let n=this.isShowing;h!==n&&Ht(this,this._children,n),this._definitionChanged.raiseEvent(this,"parent",Z,m)}},propertyNames:{get:function(){return this._propertyNames}},billboard:ih("billboard",EF),box:ih("box",JF),corridor:ih("corridor",CF),cylinder:ih("cylinder",BF),description:j("description"),ellipse:ih("ellipse",gF),ellipsoid:ih("ellipsoid",IF),label:ih("label",pF),model:ih("model",MF),tileset:ih("tileset",SF),orientation:j("orientation"),path:ih("path",DF),plane:ih("plane",fF),point:ih("point",uF),polygon:ih("polygon",bF),polyline:ih("polyline",xF),polylineVolume:ih("polylineVolume",_F),properties:ih("properties",jn),position:SJ("position"),rectangle:ih("rectangle",OF),viewFrom:j("viewFrom"),wall:ih("wall",wF)});zh.prototype.isAvailable=function(Z){if(!V(Z))throw new U("time is required.");let m=this._availability;return!V(m)||m.contains(Z)};zh.prototype.addProperty=function(Z){let m=this._propertyNames;if(!V(Z))throw new U("propertyName is required.");if(m.indexOf(Z)!==-1)throw new U(`${Z} is already a registered property.`);if(Z in this)throw new U(`${Z} is a reserved property name.`);m.push(Z),Object.defineProperty(this,Z,Va(Z,!0))};zh.prototype.removeProperty=function(Z){let h=this._propertyNames.indexOf(Z);if(!V(Z))throw new U("propertyName is required.");if(h===-1)throw new U(`${Z} is not a registered property.`);this._propertyNames.splice(h,1),delete this[Z]};zh.prototype.merge=function(Z){if(!V(Z))throw new U("source is required.");this.name=l(this.name,Z.name),this.availability=l(this.availability,Z.availability);let m=this._propertyNames,h=V(Z._propertyNames)?Z._propertyNames:Object.keys(Z),n=h.length;for(let i=0;i<n;i++){let A=h[i];if(A==="parent"||A==="name"||A==="availability"||A==="children")continue;let t=this[A],W=Z[A];!V(t)&&m.indexOf(A)===-1&&this.addProperty(A),V(W)&&(V(t)?V(t.merge)&&t.merge(W):V(W.merge)&&V(W.clone)?this[A]=W.clone():this[A]=W)}};var zt=new Bm,vF=new _,PF=new zm;Object.defineProperties(zh.prototype,{referenceFrame:{get:function(){return this._referenceFrame},set:function(Z){Object.values(Mm).includes(Z)&&(this._referenceFrame=Z)}},gltfZForwardYUp:{get:function(){return this._gltfZForwardYUp},set:function(Z){this._gltfZForwardYUp=Z}}});zh.prototype.computeModelMatrix=function(Z,m,h=!0){y.typeOf.object("time",Z);let n=OZ.getValueOrUndefined(this._position,Z,vF);if(!V(n))return;let i=OZ.getValueOrUndefined(this._orientation,Z,PF);i&&~uW.indexOf(this.referenceFrame)&&(i=kh.reverseHeadingQuaternion(i));let A=cJ(this.referenceFrame,Z,this._position);return!V(i)||!h?m=A(n,void 0,m):V(this.referenceFrame)?(kh.localToFixedFrameQuaternion(n,i,null,A,i),m=eZ.fromRotationTranslation(Bm.fromQuaternion(i,zt),n,m)):m=eZ.fromRotationTranslation(Bm.fromQuaternion(i,zt),n,m),m};zh.prototype.computeModelMatrixForHeightReference=function(Z,m,h,n,i){y.typeOf.object("time",Z);let A=OZ.getValueOrDefault(m,Z,hh.NONE),t=OZ.getValueOrUndefined(this._position,Z,vF);if(A===hh.NONE||!V(t)||_.equalsEpsilon(t,_.ZERO,gZ.EPSILON8))return this.computeModelMatrix(Z,i);let W=n.cartesianToCartographic(t,TJ);A===hh.CLAMP_TO_GROUND?W.height=h:W.height+=h,t=n.cartographicToCartesian(W,t);let e=OZ.getValueOrUndefined(this._orientation,Z,PF);return V(e)?i=eZ.fromRotationTranslation(Bm.fromQuaternion(e,zt),t,i):i=jJ(t,void 0,i),i};zh.supportsMaterialsforEntitiesOnTerrain=function(Z){return NF.supportsMaterials(Z)};zh.supportsPolylinesOnTerrain=function(Z){return PG.isSupported(Z)};var hi=new zm;zh.prototype.updateAdditiveOrientation=function(Z,m){this.orientation||(this.orientation=new bY(zm.clone(zm.IDENTITY)));let h=this.orientation,n=zm.fromAxisAngle(_.UNIT_X,Z.roll),i=zm.fromAxisAngle(_.UNIT_Y,-Z.pitch),A=zm.fromAxisAngle(_.UNIT_Z,-Z.heading),t=new zm;if(zm.multiply(i,A,t),zm.multiply(n,t,t),h instanceof Ra){let W=h._times,e=m?vY(W,m,kZ.compare):0;e<0&&(e=~e);let G=h._values[e];zm.multiply(t,G,hi),h._values[e]=zm.clone(hi)}else if(h instanceof bY){let W=h.getValue();zm.multiply(W,t,hi),zm.normalize(hi,hi),h.setValue(zm.clone(hi))}else throw new U("Unsupported orientation property type.")};var Yi=zh;var KF={id:void 0};function eA(Z){if(Z._firing){Z._refire=!0;return}if(Z._suspendCount===0){let m=Z._addedEntities,h=Z._removedEntities,n=Z._changedEntities;if(n.length!==0||m.length!==0||h.length!==0){Z._firing=!0;do{Z._refire=!1;let i=m.values.slice(0),A=h.values.slice(0),t=n.values.slice(0);m.removeAll(),h.removeAll(),n.removeAll(),Z._collectionChanged.raiseEvent(Z,i,A,t)}while(Z._refire);Z._firing=!1}}}function lm(Z){this._owner=Z,this._entities=new xi,this._addedEntities=new xi,this._removedEntities=new xi,this._changedEntities=new xi,this._suspendCount=0,this._collectionChanged=new sZ,this._id=Km(),this._show=!0,this._firing=!1,this._refire=!1}lm.prototype.suspendEvents=function(){this._suspendCount++};lm.prototype.resumeEvents=function(){if(this._suspendCount===0)throw new U("resumeEvents can not be called before suspendEvents.");this._suspendCount--,eA(this)};Object.defineProperties(lm.prototype,{collectionChanged:{get:function(){return this._collectionChanged}},id:{get:function(){return this._id}},values:{get:function(){return this._entities.values}},show:{get:function(){return this._show},set:function(Z){if(!V(Z))throw new U("value is required.");if(Z===this._show)return;this.suspendEvents();let m,h=[],n=this._entities.values,i=n.length;for(m=0;m<i;m++)h.push(n[m].isShowing);for(this._show=Z,m=0;m<i;m++){let A=h[m],t=n[m];A!==t.isShowing&&t.definitionChanged.raiseEvent(t,"isShowing",t.isShowing,A)}this.resumeEvents()}},owner:{get:function(){return this._owner}}});lm.prototype.computeAvailability=function(){let Z=TY.MAXIMUM_VALUE,m=TY.MINIMUM_VALUE,h=this._entities.values;for(let n=0,i=h.length;n<i;n++){let t=h[n].availability;if(V(t)){let W=t.start,e=t.stop;kZ.lessThan(W,Z)&&!W.equals(TY.MINIMUM_VALUE)&&(Z=W),kZ.greaterThan(e,m)&&!e.equals(TY.MAXIMUM_VALUE)&&(m=e)}}return TY.MAXIMUM_VALUE.equals(Z)&&(Z=TY.MINIMUM_VALUE),TY.MINIMUM_VALUE.equals(m)&&(m=TY.MAXIMUM_VALUE),new ma({start:Z,stop:m})};lm.prototype.add=function(Z){if(!V(Z))throw new U("entity is required.");Z instanceof Yi||(Z=new Yi(Z));let m=Z.id,h=this._entities;if(h.contains(m))throw new Sm(`An entity with id ${m} already exists in this collection.`);return Z.entityCollection=this,h.set(m,Z),this._removedEntities.remove(m)||this._addedEntities.set(m,Z),Z.definitionChanged.addEventListener(lm.prototype._onEntityDefinitionChanged,this),eA(this),this.manageVisualizers(Z),Z};lm.prototype.remove=function(Z){return V(Z)?this.removeById(Z.id):!1};lm.prototype.contains=function(Z){if(!V(Z))throw new U("entity is required");return this._entities.get(Z.id)===Z};lm.prototype.removeById=function(Z){if(!V(Z))return!1;let h=this._entities.get(Z);return this._entities.remove(Z)?(this._addedEntities.remove(Z)||(this._removedEntities.set(Z,h),this._changedEntities.remove(Z)),this._entities.remove(Z),h.definitionChanged.removeEventListener(lm.prototype._onEntityDefinitionChanged,this),eA(this),!0):!1};lm.prototype.removeAll=function(){let Z=this._entities,m=Z.length,h=Z.values,n=this._addedEntities,i=this._removedEntities;for(let A=0;A<m;A++){let t=h[A],W=t.id,e=n.get(W);V(e)||(t.definitionChanged.removeEventListener(lm.prototype._onEntityDefinitionChanged,this),i.set(W,t))}Z.removeAll(),n.removeAll(),this._changedEntities.removeAll(),eA(this)};lm.prototype.getById=function(Z){if(!V(Z))throw new U("id is required.");return this._entities.get(Z)};lm.prototype.getOrCreateEntity=function(Z){if(!V(Z))throw new U("id is required.");let m=this._entities.get(Z);return V(m)||(KF.id=Z,m=new Yi(KF),this.add(m)),m};lm.prototype._onEntityDefinitionChanged=function(Z){let m=Z.id;this._addedEntities.contains(m)||this._changedEntities.set(m,Z),this.manageVisualizers(Z),eA(this)};lm.prototype.manageVisualizers=function(Z){if(this.owner){if(!this.owner._visualizerCache){if(this.owner._visualizerCache={},this.owner._visualizers)for(let m=0;m<this.owner._visualizers.length;m++){let h=this.owner._visualizers[m].constructor.name;this.owner._visualizerCache[h]=this.owner._visualizers[m],this.syncVisualizerCache(h)}this.owner._visualizers=[]}for(let m in lm.prototype._visualizerMap)if(lm.prototype._visualizerMap.hasOwnProperty(m)){let h=this.owner._visualizerCache[lm.prototype._visualizerMap[m]];Z[m]&&h&&this.owner._visualizers.indexOf(h)===-1&&this.owner._visualizers.push(h),this.syncVisualizerCache(m)}}};var qF={MAX:0,DYNAMIC:1};lm.ThrottleType=qF;lm.prototype.ThrottleType=qF;lm.prototype.syncVisualizerCache=function(Z){this.owner._visualizerCache&&this.owner._throttleCache&&this.owner._visualizerCache[Z]&&this.owner._throttleCache[Z]&&(this.owner._visualizerCache[Z]._fps=this.owner._throttleCache[Z]._fps)};lm.prototype.throttleVisualizer=function(Z,m,h){let n=lm.prototype._visualizerMap[Z];this.owner._throttleCache=this.owner._throttleCache||{},this.owner._throttleCache[n]=this.owner._throttleCache[n]||{_fps:[]},this.owner._throttleCache[n]._fps[m]=h,this.syncVisualizerCache(n)};lm.prototype._visualizerMap={billboard:"BillboardVisualizer",box:"GeometryVisualizer",cylinder:"GeometryVisualizer",corridor:"GeometryVisualizer",ellipse:"GeometryVisualizer",ellipsoid:"GeometryVisualizer",plane:"GeometryVisualizer",polygon:"GeometryVisualizer",polylineVolume:"GeometryVisualizer",rectangle:"GeometryVisualizer",wall:"GeometryVisualizer",label:"LabelVisualizer",model:"ModelVisualizer",point:"PointVisualizer",path:"PathVisualizer",polyline:"PolylineVisualizer",customPatternSensor:"CustomPatternSensorVisualizer",conicSensor:"ConicSensorVisualizer",rectangularSensor:"RectangularSensorVisualizer"};lm.prototype._precisionMode=0;var $F=lm;function Xt(Z){this._name=Z,this._clock=void 0,this._changed=new sZ,this._error=new sZ,this._isLoading=!1,this._loading=new sZ,this._entityCollection=new $F(this),this._entityCluster=new yR}Object.defineProperties(Xt.prototype,{name:{get:function(){return this._name},set:function(Z){this._name!==Z&&(this._name=Z,this._changed.raiseEvent(this))}},clock:{get:function(){return this._clock},set:function(Z){this._clock!==Z&&(this._clock=Z,this._changed.raiseEvent(this))}},entities:{get:function(){return this._entityCollection}},isLoading:{get:function(){return this._isLoading},set:function(Z){KW.setLoading(this,Z)}},changedEvent:{get:function(){return this._changed}},errorEvent:{get:function(){return this._error}},loadingEvent:{get:function(){return this._loading}},show:{get:function(){return this._entityCollection.show},set:function(Z){this._entityCollection.show=Z}},clustering:{get:function(){return this._entityCluster},set:function(Z){if(!V(Z))throw new U("value must be defined.");this._entityCluster=Z}}});Xt.prototype.update=function(Z){return!0};var oA=Xt;function Xh(Z,m){m=l(m,0);let h;if(m>0){h=new Array(m);for(let n=0;n<m;n++)h[n]=_}this._numberOfDerivatives=m,this._property=new Ra(_,h),this._definitionChanged=new sZ,this._referenceFrame=l(Z,Mm.FIXED),this._property._definitionChanged.addEventListener(function(){this._definitionChanged.raiseEvent(this)},this)}Object.defineProperties(Xh.prototype,{isConstant:{get:function(){return this._property.isConstant}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return this._referenceFrame}},interpolationDegree:{get:function(){return this._property.interpolationDegree}},interpolationAlgorithm:{get:function(){return this._property.interpolationAlgorithm}},numberOfDerivatives:{get:function(){return this._numberOfDerivatives}},forwardExtrapolationType:{get:function(){return this._property.forwardExtrapolationType},set:function(Z){this._property.forwardExtrapolationType=Z}},forwardExtrapolationDuration:{get:function(){return this._property.forwardExtrapolationDuration},set:function(Z){this._property.forwardExtrapolationDuration=Z}},backwardExtrapolationType:{get:function(){return this._property.backwardExtrapolationType},set:function(Z){this._property.backwardExtrapolationType=Z}},backwardExtrapolationDuration:{get:function(){return this._property.backwardExtrapolationDuration},set:function(Z){this._property.backwardExtrapolationDuration=Z}}});Xh.prototype.getValue=function(Z,m){return this.getValueInReferenceFrame(Z,Mm.FIXED,m)};Xh.prototype.getValueInReferenceFrame=function(Z,m,h){if(y.defined("time",Z),y.defined("referenceFrame",m),h=this._property.getValue(Z,h),V(h))return oa.convertToReferenceFrame(Z,h,this._referenceFrame,m,h)};Xh.prototype.setInterpolationOptions=function(Z){this._property.setInterpolationOptions(Z)};Xh.prototype.addSample=function(Z,m,h){let n=this._numberOfDerivatives;if(n>0&&(!V(h)||h.length!==n))throw new U("derivatives length must be equal to the number of derivatives.");this._property.addSample(Z,m,h)};Xh.prototype.addSamples=function(Z,m,h){this._property.addSamples(Z,m,h)};Xh.prototype.addSamplesPackedArray=function(Z,m){this._property.addSamplesPackedArray(Z,m)};Xh.prototype.removeSample=function(Z){return this._property.removeSample(Z)};Xh.prototype.removeSamples=function(Z){this._property.removeSamples(Z)};Xh.prototype.equals=function(Z){return this===Z||Z instanceof Xh&&OZ.equals(this._property,Z._property)&&this._referenceFrame===Z._referenceFrame};var Zd=Xh;var Ga=new Int32Array(2),md=new Float32Array(Ga.buffer),hd=new Float64Array(Ga.buffer),Yd=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;var Fa;(function(Z){Z[Z.UTF8_BYTES=1]="UTF8_BYTES",Z[Z.UTF16_STRING=2]="UTF16_STRING"})(Fa||(Fa={}));var Lt=class Z{constructor(){_n(this,"bb",null);_n(this,"bb_pos",0)}__init(m,h){return this.bb_pos=m,this.bb=h,this}static getRootAsOMM(m,h){return(h||new Z).__init(m.readInt32(m.position())+m.position(),m)}static getSizePrefixedRootAsOMM(m,h){return m.setPosition(m.position()+4),(h||new Z).__init(m.readInt32(m.position())+m.position(),m)}static bufferHasIdentifier(m){return m.__has_identifier("$OMM")}CCSDS_OMM_VERS(){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.readFloat64(this.bb_pos+m):0}CREATION_DATE(m){let h=this.bb.__offset(this.bb_pos,6);return h?this.bb.__string(this.bb_pos+h,m):null}ORIGINATOR(m){let h=this.bb.__offset(this.bb_pos,8);return h?this.bb.__string(this.bb_pos+h,m):null}OBJECT_NAME(m){let h=this.bb.__offset(this.bb_pos,10);return h?this.bb.__string(this.bb_pos+h,m):null}OBJECT_ID(m){let h=this.bb.__offset(this.bb_pos,12);return h?this.bb.__string(this.bb_pos+h,m):null}CENTER_NAME(m){let h=this.bb.__offset(this.bb_pos,14);return h?this.bb.__string(this.bb_pos+h,m):null}REF_FRAME(){let m=this.bb.__offset(this.bb_pos,16);return m?this.bb.readInt8(this.bb_pos+m):9}REF_FRAME_EPOCH(m){let h=this.bb.__offset(this.bb_pos,18);return h?this.bb.__string(this.bb_pos+h,m):null}TIME_SYSTEM(){let m=this.bb.__offset(this.bb_pos,20);return m?this.bb.readInt8(this.bb_pos+m):11}MEAN_ELEMENT_THEORY(){let m=this.bb.__offset(this.bb_pos,22);return m?this.bb.readInt8(this.bb_pos+m):0}COMMENT(m){let h=this.bb.__offset(this.bb_pos,24);return h?this.bb.__string(this.bb_pos+h,m):null}EPOCH(m){let h=this.bb.__offset(this.bb_pos,26);return h?this.bb.__string(this.bb_pos+h,m):null}SEMI_MAJOR_AXIS(){let m=this.bb.__offset(this.bb_pos,28);return m?this.bb.readFloat64(this.bb_pos+m):0}MEAN_MOTION(){let m=this.bb.__offset(this.bb_pos,30);return m?this.bb.readFloat64(this.bb_pos+m):0}ECCENTRICITY(){let m=this.bb.__offset(this.bb_pos,32);return m?this.bb.readFloat64(this.bb_pos+m):0}INCLINATION(){let m=this.bb.__offset(this.bb_pos,34);return m?this.bb.readFloat64(this.bb_pos+m):0}RA_OF_ASC_NODE(){let m=this.bb.__offset(this.bb_pos,36);return m?this.bb.readFloat64(this.bb_pos+m):0}ARG_OF_PERICENTER(){let m=this.bb.__offset(this.bb_pos,38);return m?this.bb.readFloat64(this.bb_pos+m):0}MEAN_ANOMALY(){let m=this.bb.__offset(this.bb_pos,40);return m?this.bb.readFloat64(this.bb_pos+m):0}GM(){let m=this.bb.__offset(this.bb_pos,42);return m?this.bb.readFloat64(this.bb_pos+m):0}MASS(){let m=this.bb.__offset(this.bb_pos,44);return m?this.bb.readFloat64(this.bb_pos+m):0}SOLAR_RAD_AREA(){let m=this.bb.__offset(this.bb_pos,46);return m?this.bb.readFloat64(this.bb_pos+m):0}SOLAR_RAD_COEFF(){let m=this.bb.__offset(this.bb_pos,48);return m?this.bb.readFloat64(this.bb_pos+m):0}DRAG_AREA(){let m=this.bb.__offset(this.bb_pos,50);return m?this.bb.readFloat64(this.bb_pos+m):0}DRAG_COEFF(){let m=this.bb.__offset(this.bb_pos,52);return m?this.bb.readFloat64(this.bb_pos+m):0}EPHEMERIS_TYPE(){let m=this.bb.__offset(this.bb_pos,54);return m?this.bb.readInt8(this.bb_pos+m):1}CLASSIFICATION_TYPE(m){let h=this.bb.__offset(this.bb_pos,56);return h?this.bb.__string(this.bb_pos+h,m):null}NORAD_CAT_ID(){let m=this.bb.__offset(this.bb_pos,58);return m?this.bb.readUint32(this.bb_pos+m):0}ELEMENT_SET_NO(){let m=this.bb.__offset(this.bb_pos,60);return m?this.bb.readUint32(this.bb_pos+m):0}REV_AT_EPOCH(){let m=this.bb.__offset(this.bb_pos,62);return m?this.bb.readFloat64(this.bb_pos+m):0}BSTAR(){let m=this.bb.__offset(this.bb_pos,64);return m?this.bb.readFloat64(this.bb_pos+m):0}MEAN_MOTION_DOT(){let m=this.bb.__offset(this.bb_pos,66);return m?this.bb.readFloat64(this.bb_pos+m):0}MEAN_MOTION_DDOT(){let m=this.bb.__offset(this.bb_pos,68);return m?this.bb.readFloat64(this.bb_pos+m):0}COV_REF_FRAME(){let m=this.bb.__offset(this.bb_pos,70);return m?this.bb.readInt8(this.bb_pos+m):0}CX_X(){let m=this.bb.__offset(this.bb_pos,72);return m?this.bb.readFloat64(this.bb_pos+m):0}CY_X(){let m=this.bb.__offset(this.bb_pos,74);return m?this.bb.readFloat64(this.bb_pos+m):0}CY_Y(){let m=this.bb.__offset(this.bb_pos,76);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_X(){let m=this.bb.__offset(this.bb_pos,78);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_Y(){let m=this.bb.__offset(this.bb_pos,80);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_Z(){let m=this.bb.__offset(this.bb_pos,82);return m?this.bb.readFloat64(this.bb_pos+m):0}CX_DOT_X(){let m=this.bb.__offset(this.bb_pos,84);return m?this.bb.readFloat64(this.bb_pos+m):0}CX_DOT_Y(){let m=this.bb.__offset(this.bb_pos,86);return m?this.bb.readFloat64(this.bb_pos+m):0}CX_DOT_Z(){let m=this.bb.__offset(this.bb_pos,88);return m?this.bb.readFloat64(this.bb_pos+m):0}CX_DOT_X_DOT(){let m=this.bb.__offset(this.bb_pos,90);return m?this.bb.readFloat64(this.bb_pos+m):0}CY_DOT_X(){let m=this.bb.__offset(this.bb_pos,92);return m?this.bb.readFloat64(this.bb_pos+m):0}CY_DOT_Y(){let m=this.bb.__offset(this.bb_pos,94);return m?this.bb.readFloat64(this.bb_pos+m):0}CY_DOT_Z(){let m=this.bb.__offset(this.bb_pos,96);return m?this.bb.readFloat64(this.bb_pos+m):0}CY_DOT_X_DOT(){let m=this.bb.__offset(this.bb_pos,98);return m?this.bb.readFloat64(this.bb_pos+m):0}CY_DOT_Y_DOT(){let m=this.bb.__offset(this.bb_pos,100);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_DOT_X(){let m=this.bb.__offset(this.bb_pos,102);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_DOT_Y(){let m=this.bb.__offset(this.bb_pos,104);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_DOT_Z(){let m=this.bb.__offset(this.bb_pos,106);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_DOT_X_DOT(){let m=this.bb.__offset(this.bb_pos,108);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_DOT_Y_DOT(){let m=this.bb.__offset(this.bb_pos,110);return m?this.bb.readFloat64(this.bb_pos+m):0}CZ_DOT_Z_DOT(){let m=this.bb.__offset(this.bb_pos,112);return m?this.bb.readFloat64(this.bb_pos+m):0}USER_DEFINED_BIP_0044_TYPE(){let m=this.bb.__offset(this.bb_pos,114);return m?this.bb.readUint32(this.bb_pos+m):0}USER_DEFINED_OBJECT_DESIGNATOR(m){let h=this.bb.__offset(this.bb_pos,116);return h?this.bb.__string(this.bb_pos+h,m):null}USER_DEFINED_EARTH_MODEL(m){let h=this.bb.__offset(this.bb_pos,118);return h?this.bb.__string(this.bb_pos+h,m):null}USER_DEFINED_EPOCH_TIMESTAMP(){let m=this.bb.__offset(this.bb_pos,120);return m?this.bb.readFloat64(this.bb_pos+m):0}USER_DEFINED_MICROSECONDS(){let m=this.bb.__offset(this.bb_pos,122);return m?this.bb.readFloat64(this.bb_pos+m):0}static startOMM(m){m.startObject(60)}static addCcsdsOmmVers(m,h){m.addFieldFloat64(0,h,0)}static addCreationDate(m,h){m.addFieldOffset(1,h,0)}static addOriginator(m,h){m.addFieldOffset(2,h,0)}static addObjectName(m,h){m.addFieldOffset(3,h,0)}static addObjectId(m,h){m.addFieldOffset(4,h,0)}static addCenterName(m,h){m.addFieldOffset(5,h,0)}static addRefFrame(m,h){m.addFieldInt8(6,h,9)}static addRefFrameEpoch(m,h){m.addFieldOffset(7,h,0)}static addTimeSystem(m,h){m.addFieldInt8(8,h,11)}static addMeanElementTheory(m,h){m.addFieldInt8(9,h,0)}static addComment(m,h){m.addFieldOffset(10,h,0)}static addEpoch(m,h){m.addFieldOffset(11,h,0)}static addSemiMajorAxis(m,h){m.addFieldFloat64(12,h,0)}static addMeanMotion(m,h){m.addFieldFloat64(13,h,0)}static addEccentricity(m,h){m.addFieldFloat64(14,h,0)}static addInclination(m,h){m.addFieldFloat64(15,h,0)}static addRaOfAscNode(m,h){m.addFieldFloat64(16,h,0)}static addArgOfPericenter(m,h){m.addFieldFloat64(17,h,0)}static addMeanAnomaly(m,h){m.addFieldFloat64(18,h,0)}static addGm(m,h){m.addFieldFloat64(19,h,0)}static addMass(m,h){m.addFieldFloat64(20,h,0)}static addSolarRadArea(m,h){m.addFieldFloat64(21,h,0)}static addSolarRadCoeff(m,h){m.addFieldFloat64(22,h,0)}static addDragArea(m,h){m.addFieldFloat64(23,h,0)}static addDragCoeff(m,h){m.addFieldFloat64(24,h,0)}static addEphemerisType(m,h){m.addFieldInt8(25,h,1)}static addClassificationType(m,h){m.addFieldOffset(26,h,0)}static addNoradCatId(m,h){m.addFieldInt32(27,h,0)}static addElementSetNo(m,h){m.addFieldInt32(28,h,0)}static addRevAtEpoch(m,h){m.addFieldFloat64(29,h,0)}static addBstar(m,h){m.addFieldFloat64(30,h,0)}static addMeanMotionDot(m,h){m.addFieldFloat64(31,h,0)}static addMeanMotionDdot(m,h){m.addFieldFloat64(32,h,0)}static addCovRefFrame(m,h){m.addFieldInt8(33,h,0)}static addCxX(m,h){m.addFieldFloat64(34,h,0)}static addCyX(m,h){m.addFieldFloat64(35,h,0)}static addCyY(m,h){m.addFieldFloat64(36,h,0)}static addCzX(m,h){m.addFieldFloat64(37,h,0)}static addCzY(m,h){m.addFieldFloat64(38,h,0)}static addCzZ(m,h){m.addFieldFloat64(39,h,0)}static addCxDotX(m,h){m.addFieldFloat64(40,h,0)}static addCxDotY(m,h){m.addFieldFloat64(41,h,0)}static addCxDotZ(m,h){m.addFieldFloat64(42,h,0)}static addCxDotXDot(m,h){m.addFieldFloat64(43,h,0)}static addCyDotX(m,h){m.addFieldFloat64(44,h,0)}static addCyDotY(m,h){m.addFieldFloat64(45,h,0)}static addCyDotZ(m,h){m.addFieldFloat64(46,h,0)}static addCyDotXDot(m,h){m.addFieldFloat64(47,h,0)}static addCyDotYDot(m,h){m.addFieldFloat64(48,h,0)}static addCzDotX(m,h){m.addFieldFloat64(49,h,0)}static addCzDotY(m,h){m.addFieldFloat64(50,h,0)}static addCzDotZ(m,h){m.addFieldFloat64(51,h,0)}static addCzDotXDot(m,h){m.addFieldFloat64(52,h,0)}static addCzDotYDot(m,h){m.addFieldFloat64(53,h,0)}static addCzDotZDot(m,h){m.addFieldFloat64(54,h,0)}static addUserDefinedBip0044Type(m,h){m.addFieldInt32(55,h,0)}static addUserDefinedObjectDesignator(m,h){m.addFieldOffset(56,h,0)}static addUserDefinedEarthModel(m,h){m.addFieldOffset(57,h,0)}static addUserDefinedEpochTimestamp(m,h){m.addFieldFloat64(58,h,0)}static addUserDefinedMicroseconds(m,h){m.addFieldFloat64(59,h,0)}static endOMM(m){return m.endObject()}static finishOMMBuffer(m,h){m.finish(h,"$OMM")}static finishSizePrefixedOMMBuffer(m,h){m.finish(h,"$OMM",!0)}static createOMM(m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q,p,T,I,f,b,O,v,hZ,K,tZ,NZ,Y,ZZ,oZ,RZ,EZ,z,nZ,XZ,wZ,DZ,TZ,LZ,Cm,pm,Om,Xm,wm,Lm,Zh,mh,vm,Tm,Gm,ym,Em,g,s,N,c,x,$,L,IZ,uZ,KZ){return Z.startOMM(m),Z.addCcsdsOmmVers(m,h),Z.addCreationDate(m,n),Z.addOriginator(m,i),Z.addObjectName(m,A),Z.addObjectId(m,t),Z.addCenterName(m,W),Z.addRefFrame(m,e),Z.addRefFrameEpoch(m,G),Z.addTimeSystem(m,F),Z.addMeanElementTheory(m,d),Z.addComment(m,J),Z.addEpoch(m,k),Z.addSemiMajorAxis(m,r),Z.addMeanMotion(m,Q),Z.addEccentricity(m,p),Z.addInclination(m,T),Z.addRaOfAscNode(m,I),Z.addArgOfPericenter(m,f),Z.addMeanAnomaly(m,b),Z.addGm(m,O),Z.addMass(m,v),Z.addSolarRadArea(m,hZ),Z.addSolarRadCoeff(m,K),Z.addDragArea(m,tZ),Z.addDragCoeff(m,NZ),Z.addEphemerisType(m,Y),Z.addClassificationType(m,ZZ),Z.addNoradCatId(m,oZ),Z.addElementSetNo(m,RZ),Z.addRevAtEpoch(m,EZ),Z.addBstar(m,z),Z.addMeanMotionDot(m,nZ),Z.addMeanMotionDdot(m,XZ),Z.addCovRefFrame(m,wZ),Z.addCxX(m,DZ),Z.addCyX(m,TZ),Z.addCyY(m,LZ),Z.addCzX(m,Cm),Z.addCzY(m,pm),Z.addCzZ(m,Om),Z.addCxDotX(m,Xm),Z.addCxDotY(m,wm),Z.addCxDotZ(m,Lm),Z.addCxDotXDot(m,Zh),Z.addCyDotX(m,mh),Z.addCyDotY(m,vm),Z.addCyDotZ(m,Tm),Z.addCyDotXDot(m,Gm),Z.addCyDotYDot(m,ym),Z.addCzDotX(m,Em),Z.addCzDotY(m,g),Z.addCzDotZ(m,s),Z.addCzDotXDot(m,N),Z.addCzDotYDot(m,c),Z.addCzDotZDot(m,x),Z.addUserDefinedBip0044Type(m,$),Z.addUserDefinedObjectDesignator(m,L),Z.addUserDefinedEarthModel(m,IZ),Z.addUserDefinedEpochTimestamp(m,uZ),Z.addUserDefinedMicroseconds(m,KZ),Z.endOMM(m)}unpack(){return new lA(this.CCSDS_OMM_VERS(),this.CREATION_DATE(),this.ORIGINATOR(),this.OBJECT_NAME(),this.OBJECT_ID(),this.CENTER_NAME(),this.REF_FRAME(),this.REF_FRAME_EPOCH(),this.TIME_SYSTEM(),this.MEAN_ELEMENT_THEORY(),this.COMMENT(),this.EPOCH(),this.SEMI_MAJOR_AXIS(),this.MEAN_MOTION(),this.ECCENTRICITY(),this.INCLINATION(),this.RA_OF_ASC_NODE(),this.ARG_OF_PERICENTER(),this.MEAN_ANOMALY(),this.GM(),this.MASS(),this.SOLAR_RAD_AREA(),this.SOLAR_RAD_COEFF(),this.DRAG_AREA(),this.DRAG_COEFF(),this.EPHEMERIS_TYPE(),this.CLASSIFICATION_TYPE(),this.NORAD_CAT_ID(),this.ELEMENT_SET_NO(),this.REV_AT_EPOCH(),this.BSTAR(),this.MEAN_MOTION_DOT(),this.MEAN_MOTION_DDOT(),this.COV_REF_FRAME(),this.CX_X(),this.CY_X(),this.CY_Y(),this.CZ_X(),this.CZ_Y(),this.CZ_Z(),this.CX_DOT_X(),this.CX_DOT_Y(),this.CX_DOT_Z(),this.CX_DOT_X_DOT(),this.CY_DOT_X(),this.CY_DOT_Y(),this.CY_DOT_Z(),this.CY_DOT_X_DOT(),this.CY_DOT_Y_DOT(),this.CZ_DOT_X(),this.CZ_DOT_Y(),this.CZ_DOT_Z(),this.CZ_DOT_X_DOT(),this.CZ_DOT_Y_DOT(),this.CZ_DOT_Z_DOT(),this.USER_DEFINED_BIP_0044_TYPE(),this.USER_DEFINED_OBJECT_DESIGNATOR(),this.USER_DEFINED_EARTH_MODEL(),this.USER_DEFINED_EPOCH_TIMESTAMP(),this.USER_DEFINED_MICROSECONDS())}unpackTo(m){m.CCSDS_OMM_VERS=this.CCSDS_OMM_VERS(),m.CREATION_DATE=this.CREATION_DATE(),m.ORIGINATOR=this.ORIGINATOR(),m.OBJECT_NAME=this.OBJECT_NAME(),m.OBJECT_ID=this.OBJECT_ID(),m.CENTER_NAME=this.CENTER_NAME(),m.REF_FRAME=this.REF_FRAME(),m.REF_FRAME_EPOCH=this.REF_FRAME_EPOCH(),m.TIME_SYSTEM=this.TIME_SYSTEM(),m.MEAN_ELEMENT_THEORY=this.MEAN_ELEMENT_THEORY(),m.COMMENT=this.COMMENT(),m.EPOCH=this.EPOCH(),m.SEMI_MAJOR_AXIS=this.SEMI_MAJOR_AXIS(),m.MEAN_MOTION=this.MEAN_MOTION(),m.ECCENTRICITY=this.ECCENTRICITY(),m.INCLINATION=this.INCLINATION(),m.RA_OF_ASC_NODE=this.RA_OF_ASC_NODE(),m.ARG_OF_PERICENTER=this.ARG_OF_PERICENTER(),m.MEAN_ANOMALY=this.MEAN_ANOMALY(),m.GM=this.GM(),m.MASS=this.MASS(),m.SOLAR_RAD_AREA=this.SOLAR_RAD_AREA(),m.SOLAR_RAD_COEFF=this.SOLAR_RAD_COEFF(),m.DRAG_AREA=this.DRAG_AREA(),m.DRAG_COEFF=this.DRAG_COEFF(),m.EPHEMERIS_TYPE=this.EPHEMERIS_TYPE(),m.CLASSIFICATION_TYPE=this.CLASSIFICATION_TYPE(),m.NORAD_CAT_ID=this.NORAD_CAT_ID(),m.ELEMENT_SET_NO=this.ELEMENT_SET_NO(),m.REV_AT_EPOCH=this.REV_AT_EPOCH(),m.BSTAR=this.BSTAR(),m.MEAN_MOTION_DOT=this.MEAN_MOTION_DOT(),m.MEAN_MOTION_DDOT=this.MEAN_MOTION_DDOT(),m.COV_REF_FRAME=this.COV_REF_FRAME(),m.CX_X=this.CX_X(),m.CY_X=this.CY_X(),m.CY_Y=this.CY_Y(),m.CZ_X=this.CZ_X(),m.CZ_Y=this.CZ_Y(),m.CZ_Z=this.CZ_Z(),m.CX_DOT_X=this.CX_DOT_X(),m.CX_DOT_Y=this.CX_DOT_Y(),m.CX_DOT_Z=this.CX_DOT_Z(),m.CX_DOT_X_DOT=this.CX_DOT_X_DOT(),m.CY_DOT_X=this.CY_DOT_X(),m.CY_DOT_Y=this.CY_DOT_Y(),m.CY_DOT_Z=this.CY_DOT_Z(),m.CY_DOT_X_DOT=this.CY_DOT_X_DOT(),m.CY_DOT_Y_DOT=this.CY_DOT_Y_DOT(),m.CZ_DOT_X=this.CZ_DOT_X(),m.CZ_DOT_Y=this.CZ_DOT_Y(),m.CZ_DOT_Z=this.CZ_DOT_Z(),m.CZ_DOT_X_DOT=this.CZ_DOT_X_DOT(),m.CZ_DOT_Y_DOT=this.CZ_DOT_Y_DOT(),m.CZ_DOT_Z_DOT=this.CZ_DOT_Z_DOT(),m.USER_DEFINED_BIP_0044_TYPE=this.USER_DEFINED_BIP_0044_TYPE(),m.USER_DEFINED_OBJECT_DESIGNATOR=this.USER_DEFINED_OBJECT_DESIGNATOR(),m.USER_DEFINED_EARTH_MODEL=this.USER_DEFINED_EARTH_MODEL(),m.USER_DEFINED_EPOCH_TIMESTAMP=this.USER_DEFINED_EPOCH_TIMESTAMP(),m.USER_DEFINED_MICROSECONDS=this.USER_DEFINED_MICROSECONDS()}},lA=class{constructor(m=0,h=null,n=null,i=null,A=null,t=null,W=9,e=null,G=11,F=0,d=null,J=null,k=0,r=0,Q=0,p=0,T=0,I=0,f=0,b=0,O=0,v=0,hZ=0,K=0,tZ=0,NZ=1,Y=null,ZZ=0,oZ=0,RZ=0,EZ=0,z=0,nZ=0,XZ=0,wZ=0,DZ=0,TZ=0,LZ=0,Cm=0,pm=0,Om=0,Xm=0,wm=0,Lm=0,Zh=0,mh=0,vm=0,Tm=0,Gm=0,ym=0,Em=0,g=0,s=0,N=0,c=0,x=0,$=null,L=null,IZ=0,uZ=0){this.CCSDS_OMM_VERS=m;this.CREATION_DATE=h;this.ORIGINATOR=n;this.OBJECT_NAME=i;this.OBJECT_ID=A;this.CENTER_NAME=t;this.REF_FRAME=W;this.REF_FRAME_EPOCH=e;this.TIME_SYSTEM=G;this.MEAN_ELEMENT_THEORY=F;this.COMMENT=d;this.EPOCH=J;this.SEMI_MAJOR_AXIS=k;this.MEAN_MOTION=r;this.ECCENTRICITY=Q;this.INCLINATION=p;this.RA_OF_ASC_NODE=T;this.ARG_OF_PERICENTER=I;this.MEAN_ANOMALY=f;this.GM=b;this.MASS=O;this.SOLAR_RAD_AREA=v;this.SOLAR_RAD_COEFF=hZ;this.DRAG_AREA=K;this.DRAG_COEFF=tZ;this.EPHEMERIS_TYPE=NZ;this.CLASSIFICATION_TYPE=Y;this.NORAD_CAT_ID=ZZ;this.ELEMENT_SET_NO=oZ;this.REV_AT_EPOCH=RZ;this.BSTAR=EZ;this.MEAN_MOTION_DOT=z;this.MEAN_MOTION_DDOT=nZ;this.COV_REF_FRAME=XZ;this.CX_X=wZ;this.CY_X=DZ;this.CY_Y=TZ;this.CZ_X=LZ;this.CZ_Y=Cm;this.CZ_Z=pm;this.CX_DOT_X=Om;this.CX_DOT_Y=Xm;this.CX_DOT_Z=wm;this.CX_DOT_X_DOT=Lm;this.CY_DOT_X=Zh;this.CY_DOT_Y=mh;this.CY_DOT_Z=vm;this.CY_DOT_X_DOT=Tm;this.CY_DOT_Y_DOT=Gm;this.CZ_DOT_X=ym;this.CZ_DOT_Y=Em;this.CZ_DOT_Z=g;this.CZ_DOT_X_DOT=s;this.CZ_DOT_Y_DOT=N;this.CZ_DOT_Z_DOT=c;this.USER_DEFINED_BIP_0044_TYPE=x;this.USER_DEFINED_OBJECT_DESIGNATOR=$;this.USER_DEFINED_EARTH_MODEL=L;this.USER_DEFINED_EPOCH_TIMESTAMP=IZ;this.USER_DEFINED_MICROSECONDS=uZ}pack(m){let h=this.CREATION_DATE!==null?m.createString(this.CREATION_DATE):0,n=this.ORIGINATOR!==null?m.createString(this.ORIGINATOR):0,i=this.OBJECT_NAME!==null?m.createString(this.OBJECT_NAME):0,A=this.OBJECT_ID!==null?m.createString(this.OBJECT_ID):0,t=this.CENTER_NAME!==null?m.createString(this.CENTER_NAME):0,W=this.REF_FRAME_EPOCH!==null?m.createString(this.REF_FRAME_EPOCH):0,e=this.COMMENT!==null?m.createString(this.COMMENT):0,G=this.EPOCH!==null?m.createString(this.EPOCH):0,F=this.CLASSIFICATION_TYPE!==null?m.createString(this.CLASSIFICATION_TYPE):0,d=this.USER_DEFINED_OBJECT_DESIGNATOR!==null?m.createString(this.USER_DEFINED_OBJECT_DESIGNATOR):0,J=this.USER_DEFINED_EARTH_MODEL!==null?m.createString(this.USER_DEFINED_EARTH_MODEL):0;return Lt.createOMM(m,this.CCSDS_OMM_VERS,h,n,i,A,t,this.REF_FRAME,W,this.TIME_SYSTEM,this.MEAN_ELEMENT_THEORY,e,G,this.SEMI_MAJOR_AXIS,this.MEAN_MOTION,this.ECCENTRICITY,this.INCLINATION,this.RA_OF_ASC_NODE,this.ARG_OF_PERICENTER,this.MEAN_ANOMALY,this.GM,this.MASS,this.SOLAR_RAD_AREA,this.SOLAR_RAD_COEFF,this.DRAG_AREA,this.DRAG_COEFF,this.EPHEMERIS_TYPE,F,this.NORAD_CAT_ID,this.ELEMENT_SET_NO,this.REV_AT_EPOCH,this.BSTAR,this.MEAN_MOTION_DOT,this.MEAN_MOTION_DDOT,this.COV_REF_FRAME,this.CX_X,this.CY_X,this.CY_Y,this.CZ_X,this.CZ_Y,this.CZ_Z,this.CX_DOT_X,this.CX_DOT_Y,this.CX_DOT_Z,this.CX_DOT_X_DOT,this.CY_DOT_X,this.CY_DOT_Y,this.CY_DOT_Z,this.CY_DOT_X_DOT,this.CY_DOT_Y_DOT,this.CZ_DOT_X,this.CZ_DOT_Y,this.CZ_DOT_Z,this.CZ_DOT_X_DOT,this.CZ_DOT_Y_DOT,this.CZ_DOT_Z_DOT,this.USER_DEFINED_BIP_0044_TYPE,d,J,this.USER_DEFINED_EPOCH_TIMESTAMP,this.USER_DEFINED_MICROSECONDS)}};var vt=class Z{constructor(){_n(this,"bb",null);_n(this,"bb_pos",0)}__init(m,h){return this.bb_pos=m,this.bb=h,this}static getRootAsCAT(m,h){return(h||new Z).__init(m.readInt32(m.position())+m.position(),m)}static getSizePrefixedRootAsCAT(m,h){return m.setPosition(m.position()+4),(h||new Z).__init(m.readInt32(m.position())+m.position(),m)}static bufferHasIdentifier(m){return m.__has_identifier("$CAT")}OBJECT_NAME(m){let h=this.bb.__offset(this.bb_pos,4);return h?this.bb.__string(this.bb_pos+h,m):null}OBJECT_ID(m){let h=this.bb.__offset(this.bb_pos,6);return h?this.bb.__string(this.bb_pos+h,m):null}NORAD_CAT_ID(){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.readUint32(this.bb_pos+m):0}OBJECT_TYPE(){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.readInt8(this.bb_pos+m):3}OPS_STATUS_CODE(){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.readInt8(this.bb_pos+m):7}OWNER(m){let h=this.bb.__offset(this.bb_pos,14);return h?this.bb.__string(this.bb_pos+h,m):null}LAUNCH_DATE(m){let h=this.bb.__offset(this.bb_pos,16);return h?this.bb.__string(this.bb_pos+h,m):null}LAUNCH_SITE(m){let h=this.bb.__offset(this.bb_pos,18);return h?this.bb.__string(this.bb_pos+h,m):null}DECAY_DATE(m){let h=this.bb.__offset(this.bb_pos,20);return h?this.bb.__string(this.bb_pos+h,m):null}PERIOD(){let m=this.bb.__offset(this.bb_pos,22);return m?this.bb.readFloat64(this.bb_pos+m):0}INCLINATION(){let m=this.bb.__offset(this.bb_pos,24);return m?this.bb.readFloat64(this.bb_pos+m):0}APOGEE(){let m=this.bb.__offset(this.bb_pos,26);return m?this.bb.readFloat64(this.bb_pos+m):0}PERIGEE(){let m=this.bb.__offset(this.bb_pos,28);return m?this.bb.readFloat64(this.bb_pos+m):0}RCS(){let m=this.bb.__offset(this.bb_pos,30);return m?this.bb.readFloat64(this.bb_pos+m):0}DATA_STATUS_CODE(){let m=this.bb.__offset(this.bb_pos,32);return m?this.bb.readInt8(this.bb_pos+m):0}ORBIT_CENTER(m){let h=this.bb.__offset(this.bb_pos,34);return h?this.bb.__string(this.bb_pos+h,m):null}ORBIT_TYPE(){let m=this.bb.__offset(this.bb_pos,36);return m?this.bb.readInt8(this.bb_pos+m):0}DEPLOYMENT_DATE(m){let h=this.bb.__offset(this.bb_pos,38);return h?this.bb.__string(this.bb_pos+h,m):null}MANEUVERABLE(){let m=this.bb.__offset(this.bb_pos,40);return m?!!this.bb.readInt8(this.bb_pos+m):!1}SIZE(){let m=this.bb.__offset(this.bb_pos,42);return m?this.bb.readFloat64(this.bb_pos+m):0}MASS(){let m=this.bb.__offset(this.bb_pos,44);return m?this.bb.readFloat64(this.bb_pos+m):0}MASS_TYPE(){let m=this.bb.__offset(this.bb_pos,46);return m?this.bb.readInt8(this.bb_pos+m):0}static startCAT(m){m.startObject(22)}static addObjectName(m,h){m.addFieldOffset(0,h,0)}static addObjectId(m,h){m.addFieldOffset(1,h,0)}static addNoradCatId(m,h){m.addFieldInt32(2,h,0)}static addObjectType(m,h){m.addFieldInt8(3,h,3)}static addOpsStatusCode(m,h){m.addFieldInt8(4,h,7)}static addOwner(m,h){m.addFieldOffset(5,h,0)}static addLaunchDate(m,h){m.addFieldOffset(6,h,0)}static addLaunchSite(m,h){m.addFieldOffset(7,h,0)}static addDecayDate(m,h){m.addFieldOffset(8,h,0)}static addPeriod(m,h){m.addFieldFloat64(9,h,0)}static addInclination(m,h){m.addFieldFloat64(10,h,0)}static addApogee(m,h){m.addFieldFloat64(11,h,0)}static addPerigee(m,h){m.addFieldFloat64(12,h,0)}static addRcs(m,h){m.addFieldFloat64(13,h,0)}static addDataStatusCode(m,h){m.addFieldInt8(14,h,0)}static addOrbitCenter(m,h){m.addFieldOffset(15,h,0)}static addOrbitType(m,h){m.addFieldInt8(16,h,0)}static addDeploymentDate(m,h){m.addFieldOffset(17,h,0)}static addManeuverable(m,h){m.addFieldInt8(18,+h,0)}static addSize(m,h){m.addFieldFloat64(19,h,0)}static addMass(m,h){m.addFieldFloat64(20,h,0)}static addMassType(m,h){m.addFieldInt8(21,h,0)}static endCAT(m){return m.endObject()}static finishCATBuffer(m,h){m.finish(h,"$CAT")}static finishSizePrefixedCATBuffer(m,h){m.finish(h,"$CAT",!0)}static createCAT(m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q,p,T,I,f,b,O,v,hZ){return Z.startCAT(m),Z.addObjectName(m,h),Z.addObjectId(m,n),Z.addNoradCatId(m,i),Z.addObjectType(m,A),Z.addOpsStatusCode(m,t),Z.addOwner(m,W),Z.addLaunchDate(m,e),Z.addLaunchSite(m,G),Z.addDecayDate(m,F),Z.addPeriod(m,d),Z.addInclination(m,J),Z.addApogee(m,k),Z.addPerigee(m,r),Z.addRcs(m,Q),Z.addDataStatusCode(m,p),Z.addOrbitCenter(m,T),Z.addOrbitType(m,I),Z.addDeploymentDate(m,f),Z.addManeuverable(m,b),Z.addSize(m,O),Z.addMass(m,v),Z.addMassType(m,hZ),Z.endCAT(m)}unpack(){return new RA(this.OBJECT_NAME(),this.OBJECT_ID(),this.NORAD_CAT_ID(),this.OBJECT_TYPE(),this.OPS_STATUS_CODE(),this.OWNER(),this.LAUNCH_DATE(),this.LAUNCH_SITE(),this.DECAY_DATE(),this.PERIOD(),this.INCLINATION(),this.APOGEE(),this.PERIGEE(),this.RCS(),this.DATA_STATUS_CODE(),this.ORBIT_CENTER(),this.ORBIT_TYPE(),this.DEPLOYMENT_DATE(),this.MANEUVERABLE(),this.SIZE(),this.MASS(),this.MASS_TYPE())}unpackTo(m){m.OBJECT_NAME=this.OBJECT_NAME(),m.OBJECT_ID=this.OBJECT_ID(),m.NORAD_CAT_ID=this.NORAD_CAT_ID(),m.OBJECT_TYPE=this.OBJECT_TYPE(),m.OPS_STATUS_CODE=this.OPS_STATUS_CODE(),m.OWNER=this.OWNER(),m.LAUNCH_DATE=this.LAUNCH_DATE(),m.LAUNCH_SITE=this.LAUNCH_SITE(),m.DECAY_DATE=this.DECAY_DATE(),m.PERIOD=this.PERIOD(),m.INCLINATION=this.INCLINATION(),m.APOGEE=this.APOGEE(),m.PERIGEE=this.PERIGEE(),m.RCS=this.RCS(),m.DATA_STATUS_CODE=this.DATA_STATUS_CODE(),m.ORBIT_CENTER=this.ORBIT_CENTER(),m.ORBIT_TYPE=this.ORBIT_TYPE(),m.DEPLOYMENT_DATE=this.DEPLOYMENT_DATE(),m.MANEUVERABLE=this.MANEUVERABLE(),m.SIZE=this.SIZE(),m.MASS=this.MASS(),m.MASS_TYPE=this.MASS_TYPE()}},RA=class{constructor(m=null,h=null,n=0,i=3,A=7,t=null,W=null,e=null,G=null,F=0,d=0,J=0,k=0,r=0,Q=0,p=null,T=0,I=null,f=!1,b=0,O=0,v=0){this.OBJECT_NAME=m;this.OBJECT_ID=h;this.NORAD_CAT_ID=n;this.OBJECT_TYPE=i;this.OPS_STATUS_CODE=A;this.OWNER=t;this.LAUNCH_DATE=W;this.LAUNCH_SITE=e;this.DECAY_DATE=G;this.PERIOD=F;this.INCLINATION=d;this.APOGEE=J;this.PERIGEE=k;this.RCS=r;this.DATA_STATUS_CODE=Q;this.ORBIT_CENTER=p;this.ORBIT_TYPE=T;this.DEPLOYMENT_DATE=I;this.MANEUVERABLE=f;this.SIZE=b;this.MASS=O;this.MASS_TYPE=v}pack(m){let h=this.OBJECT_NAME!==null?m.createString(this.OBJECT_NAME):0,n=this.OBJECT_ID!==null?m.createString(this.OBJECT_ID):0,i=this.OWNER!==null?m.createString(this.OWNER):0,A=this.LAUNCH_DATE!==null?m.createString(this.LAUNCH_DATE):0,t=this.LAUNCH_SITE!==null?m.createString(this.LAUNCH_SITE):0,W=this.DECAY_DATE!==null?m.createString(this.DECAY_DATE):0,e=this.ORBIT_CENTER!==null?m.createString(this.ORBIT_CENTER):0,G=this.DEPLOYMENT_DATE!==null?m.createString(this.DEPLOYMENT_DATE):0;return vt.createCAT(m,h,n,this.NORAD_CAT_ID,this.OBJECT_TYPE,this.OPS_STATUS_CODE,i,A,t,W,this.PERIOD,this.INCLINATION,this.APOGEE,this.PERIGEE,this.RCS,this.DATA_STATUS_CODE,e,this.ORBIT_TYPE,G,this.MANEUVERABLE,this.SIZE,this.MASS,this.MASS_TYPE)}};Number.prototype.map=function(Z,m,h,n){return(this-Z)*(n-h)/(m-Z)+h};var da=class extends Yi{constructor(m,h,n,i){super(m),this.constructor.prototype.wasmSchema={},this._position=new Zd,this._spaceCatalog=n,this._velocity={getValue:(A,t)=>this._velocity.getValueInReferenceFrame(A,0,t),getValueInReferenceFrame:(A,t,W)=>{let e=new Float64Array(h.wasm.HEAP8.buffer,n.getVelocity(this.properties.wasmSpaceEntity,kZ.toDate(A).getTime(),t!==Mm.TEME),3);if(V(W)||(W=new _),W=_.fromArray(e),t===Mm.INERTIAL){let G=kh.computeFixedToIcrfMatrix(A);if(V(G)){let F=new _;Bm.multiplyByVector(G,W,F),W=F}}return W}},Object.defineProperty(this,"velocity",{get:()=>this._velocity,set:()=>{}}),Object.defineProperties(this._position,{isConstant:{get:()=>!1},_referenceFrame:{get:()=>this.entityCollection.referenceFrame},referenceFrame:{get:()=>this._referenceFrame}}),this._position.getValue=(A,t)=>this._position.getValueInReferenceFrame(A,0,t),this._position.getValueInReferenceFrame=(A,t,W)=>{let e=new Float64Array(h.wasm.HEAP8.buffer,n.getPositionInReferenceFrame(this.properties.wasmSpaceEntity,kZ.toDate(A).getTime(),t!==Mm.TEME),3);if(V(W)||(W=new _),W=_.fromArray(e),t===Mm.INERTIAL){let G=kh.computeFixedToIcrfMatrix(A);if(V(G)){let F=new _;Bm.multiplyByVector(G,W,F),W=F}}return W},this.children={add:A=>(A=this.entityCollection.add(A),this.entityCollection.allValues||(Object.defineProperty(this.entityCollection,"allValues",{get:function(){return this._entities.values}}),Object.defineProperty(this.entityCollection,"values",{get:function(){return this._entities.values.filter(t=>!t._isChild)}})),A._isChild=!0,A.parent=this,A.position=this.position,A),remove:A=>{this.entityCollection.remove(A);let t=this._children.indexOf(this);this._children.splice(t,1)},values:this._children},this.loadOMM(i)}loadOMM(m){let h=this._spaceCatalog.registerEntityOMM("",m.EPOCH,m.MEAN_MOTION,m.ECCENTRICITY,m.INCLINATION,m.RA_OF_ASC_NODE,m.ARG_OF_PERICENTER,m.MEAN_ANOMALY,0,0,"",m.NORAD_CAT_ID,0,0,m.BSTAR,0,0,!0,0,0,0,this.properties.wasmSpaceEntity||null);this.properties.wasmSpaceEntity=h,this.properties.CAT=this.properties._CAT||new RA,this.properties._CAT._value.APOGEE=h.apogee,this.properties._CAT._value.PERIGEE=h.perigee,this.properties._CAT._value.PERIOD=h.period_sec,this.properties.OMM=this.properties._OMM||new lA,this.properties._OMM._value.ECCENTRICITY=h.ecco,this.properties._OMM._value.SEMI_MAJOR_AXIS=h.semi_major_axis/1e3,this.properties._OMM._value.SEMI_MINOR_AXIS=h.semi_minor_axis/1e3,this.array_index=this.properties.wasmSpaceEntity.array_index,this.samplesPerPeriod=180,this.extraEpochSamples=60,this.resolutionAtEpoch=5,this.autoEpochResolution=!0,this.epochBlockSize=.5,this.extraSamples=5,this.eccentricityThreshold=.2,this.targetIntervalCount=20,this._orbitShowing=!1,this._coverageShowing=!1,this.referenceFrame=Mm.VVLH,this._position._clearCache=!0}showCoverage(m={show:!1}){this._coverageShowing=m.show,m.show?this.entityCollection.owner._coverageGroup.push(this):this.entityCollection.owner._coverageGroup.remove({id:this.id})}showOrbit(m={show:!1}){if(this._orbitShowing=m.show,!m.show){this.path=null;return}m&&(m.color=m.material),m?.referenceEntity?this._localReferenceEntity=m.referenceEntity:this._localReferenceEntity=void 0,this.path=this.path||{};let{material:h,width:n,leadTime:i,trailTime:A,resolution:t}=this.path;this.path=Object.assign({},{material:h||H.WHITE,width:n||1.25,leadTime:i||5e3,trailTime:A||5e3,resolution:t||120,show:!0},m);let{ecco:W,period_sec:e}=this.properties.wasmSpaceEntity,G=W<this.eccentricityThreshold;G||(this.extraSamples=W.map(this.eccentricityThreshold,.9,10,50),this.samplesPerPeriod=W.map(this.eccentricityThreshold,.9,180,1440));let{samplesPerPeriod:F}=this,J=e/(G?1.8:2);this.path.leadTime=J,this.path.trailTime=J;let k={...this,period:e,resolution:e/F};this.path.resolution=G?{...k,method:"timeStep"}:{...k,method:"trueAnomaly",period:e,samplesPerPeriod:F}}};var uJ=Object.create,Kt=Object.defineProperty,bJ=Object.getOwnPropertyDescriptor,Wd=Object.getOwnPropertyNames,xJ=Object.getPrototypeOf,_J=Object.prototype.hasOwnProperty,qt=(Z,m)=>function(){return m||(0,Z[Wd(Z)[0]])((m={exports:{}}).exports,m),m.exports},Vn=(Z,m)=>{for(var h in m)Kt(Z,h,{get:m[h],enumerable:!0})},OJ=(Z,m,h,n)=>{if(m&&typeof m=="object"||typeof m=="function")for(let i of Wd(m))!_J.call(Z,i)&&i!==h&&Kt(Z,i,{get:()=>m[i],enumerable:!(n=bJ(m,i))||n.enumerable});return Z},wJ=(Z,m,h)=>(h=Z!=null?uJ(xJ(Z)):{},OJ(m||!Z||!Z.__esModule?Kt(h,"default",{value:Z,enumerable:!0}):h,Z)),yJ=qt({"../../node_modules/base64-js/index.js"(Z){"use strict";Z.byteLength=e,Z.toByteArray=F,Z.fromByteArray=k;var m=[],h=[],n=typeof Uint8Array<"u"?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(A=0,t=i.length;A<t;++A)m[A]=i[A],h[i.charCodeAt(A)]=A;var A,t;h["-".charCodeAt(0)]=62,h["_".charCodeAt(0)]=63;function W(r){var Q=r.length;if(Q%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var p=r.indexOf("=");p===-1&&(p=Q);var T=p===Q?0:4-p%4;return[p,T]}function e(r){var Q=W(r),p=Q[0],T=Q[1];return(p+T)*3/4-T}function G(r,Q,p){return(Q+p)*3/4-p}function F(r){var Q,p=W(r),T=p[0],I=p[1],f=new n(G(r,T,I)),b=0,O=I>0?T-4:T,v;for(v=0;v<O;v+=4)Q=h[r.charCodeAt(v)]<<18|h[r.charCodeAt(v+1)]<<12|h[r.charCodeAt(v+2)]<<6|h[r.charCodeAt(v+3)],f[b++]=Q>>16&255,f[b++]=Q>>8&255,f[b++]=Q&255;return I===2&&(Q=h[r.charCodeAt(v)]<<2|h[r.charCodeAt(v+1)]>>4,f[b++]=Q&255),I===1&&(Q=h[r.charCodeAt(v)]<<10|h[r.charCodeAt(v+1)]<<4|h[r.charCodeAt(v+2)]>>2,f[b++]=Q>>8&255,f[b++]=Q&255),f}function d(r){return m[r>>18&63]+m[r>>12&63]+m[r>>6&63]+m[r&63]}function J(r,Q,p){for(var T,I=[],f=Q;f<p;f+=3)T=(r[f]<<16&16711680)+(r[f+1]<<8&65280)+(r[f+2]&255),I.push(d(T));return I.join("")}function k(r){for(var Q,p=r.length,T=p%3,I=[],f=16383,b=0,O=p-T;b<O;b+=f)I.push(J(r,b,b+f>O?O:b+f));return T===1?(Q=r[p-1],I.push(m[Q>>2]+m[Q<<4&63]+"==")):T===2&&(Q=(r[p-2]<<8)+r[p-1],I.push(m[Q>>10]+m[Q>>4&63]+m[Q<<2&63]+"=")),I.join("")}}}),HJ=qt({"../../node_modules/ieee754/index.js"(Z){Z.read=function(m,h,n,i,A){var t,W,e=A*8-i-1,G=(1<<e)-1,F=G>>1,d=-7,J=n?A-1:0,k=n?-1:1,r=m[h+J];for(J+=k,t=r&(1<<-d)-1,r>>=-d,d+=e;d>0;t=t*256+m[h+J],J+=k,d-=8);for(W=t&(1<<-d)-1,t>>=-d,d+=i;d>0;W=W*256+m[h+J],J+=k,d-=8);if(t===0)t=1-F;else{if(t===G)return W?NaN:(r?-1:1)*(1/0);W=W+Math.pow(2,i),t=t-F}return(r?-1:1)*W*Math.pow(2,t-i)},Z.write=function(m,h,n,i,A,t){var W,e,G,F=t*8-A-1,d=(1<<F)-1,J=d>>1,k=A===23?Math.pow(2,-24)-Math.pow(2,-77):0,r=i?0:t-1,Q=i?1:-1,p=h<0||h===0&&1/h<0?1:0;for(h=Math.abs(h),isNaN(h)||h===1/0?(e=isNaN(h)?1:0,W=d):(W=Math.floor(Math.log(h)/Math.LN2),h*(G=Math.pow(2,-W))<1&&(W--,G*=2),W+J>=1?h+=k/G:h+=k*Math.pow(2,1-J),h*G>=2&&(W++,G/=2),W+J>=d?(e=0,W=d):W+J>=1?(e=(h*G-1)*Math.pow(2,A),W=W+J):(e=h*Math.pow(2,J-1)*Math.pow(2,A),W=0));A>=8;m[n+r]=e&255,r+=Q,e/=256,A-=8);for(W=W<<A|e,F+=A;F>0;m[n+r]=W&255,r+=Q,W/=256,F-=8);m[n+r-Q]|=p*128}}}),zJ=qt({"../../node_modules/buffer/index.js"(Z){"use strict";var m=yJ(),h=HJ(),n=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;Z.Buffer=W,Z.SlowBuffer=T,Z.INSPECT_MAX_BYTES=50;var i=2147483647;Z.kMaxLength=i,W.TYPED_ARRAY_SUPPORT=A(),!W.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function A(){try{var g=new Uint8Array(1),s={foo:function(){return 42}};return Object.setPrototypeOf(s,Uint8Array.prototype),Object.setPrototypeOf(g,s),g.foo()===42}catch{return!1}}Object.defineProperty(W.prototype,"parent",{enumerable:!0,get:function(){if(W.isBuffer(this))return this.buffer}}),Object.defineProperty(W.prototype,"offset",{enumerable:!0,get:function(){if(W.isBuffer(this))return this.byteOffset}});function t(g){if(g>i)throw new RangeError('The value "'+g+'" is invalid for option "size"');var s=new Uint8Array(g);return Object.setPrototypeOf(s,W.prototype),s}function W(g,s,N){if(typeof g=="number"){if(typeof s=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return d(g)}return e(g,s,N)}W.poolSize=8192;function e(g,s,N){if(typeof g=="string")return J(g,s);if(ArrayBuffer.isView(g))return k(g);if(g==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof g);if(Gm(g,ArrayBuffer)||g&&Gm(g.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(Gm(g,SharedArrayBuffer)||g&&Gm(g.buffer,SharedArrayBuffer)))return r(g,s,N);if(typeof g=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');var c=g.valueOf&&g.valueOf();if(c!=null&&c!==g)return W.from(c,s,N);var x=Q(g);if(x)return x;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof g[Symbol.toPrimitive]=="function")return W.from(g[Symbol.toPrimitive]("string"),s,N);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof g)}W.from=function(g,s,N){return e(g,s,N)},Object.setPrototypeOf(W.prototype,Uint8Array.prototype),Object.setPrototypeOf(W,Uint8Array);function G(g){if(typeof g!="number")throw new TypeError('"size" argument must be of type number');if(g<0)throw new RangeError('The value "'+g+'" is invalid for option "size"')}function F(g,s,N){return G(g),g<=0?t(g):s!==void 0?typeof N=="string"?t(g).fill(s,N):t(g).fill(s):t(g)}W.alloc=function(g,s,N){return F(g,s,N)};function d(g){return G(g),t(g<0?0:p(g)|0)}W.allocUnsafe=function(g){return d(g)},W.allocUnsafeSlow=function(g){return d(g)};function J(g,s){if((typeof s!="string"||s==="")&&(s="utf8"),!W.isEncoding(s))throw new TypeError("Unknown encoding: "+s);var N=I(g,s)|0,c=t(N),x=c.write(g,s);return x!==N&&(c=c.slice(0,x)),c}function k(g){for(var s=g.length<0?0:p(g.length)|0,N=t(s),c=0;c<s;c+=1)N[c]=g[c]&255;return N}function r(g,s,N){if(s<0||g.byteLength<s)throw new RangeError('"offset" is outside of buffer bounds');if(g.byteLength<s+(N||0))throw new RangeError('"length" is outside of buffer bounds');var c;return s===void 0&&N===void 0?c=new Uint8Array(g):N===void 0?c=new Uint8Array(g,s):c=new Uint8Array(g,s,N),Object.setPrototypeOf(c,W.prototype),c}function Q(g){if(W.isBuffer(g)){var s=p(g.length)|0,N=t(s);return N.length===0||g.copy(N,0,0,s),N}if(g.length!==void 0)return typeof g.length!="number"||ym(g.length)?t(0):k(g);if(g.type==="Buffer"&&Array.isArray(g.data))return k(g.data)}function p(g){if(g>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return g|0}function T(g){return+g!=g&&(g=0),W.alloc(+g)}W.isBuffer=function(s){return s!=null&&s._isBuffer===!0&&s!==W.prototype},W.compare=function(s,N){if(Gm(s,Uint8Array)&&(s=W.from(s,s.offset,s.byteLength)),Gm(N,Uint8Array)&&(N=W.from(N,N.offset,N.byteLength)),!W.isBuffer(s)||!W.isBuffer(N))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(s===N)return 0;for(var c=s.length,x=N.length,$=0,L=Math.min(c,x);$<L;++$)if(s[$]!==N[$]){c=s[$],x=N[$];break}return c<x?-1:x<c?1:0},W.isEncoding=function(s){switch(String(s).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},W.concat=function(s,N){if(!Array.isArray(s))throw new TypeError('"list" argument must be an Array of Buffers');if(s.length===0)return W.alloc(0);var c;if(N===void 0)for(N=0,c=0;c<s.length;++c)N+=s[c].length;var x=W.allocUnsafe(N),$=0;for(c=0;c<s.length;++c){var L=s[c];if(Gm(L,Uint8Array)&&(L=W.from(L)),!W.isBuffer(L))throw new TypeError('"list" argument must be an Array of Buffers');L.copy(x,$),$+=L.length}return x};function I(g,s){if(W.isBuffer(g))return g.length;if(ArrayBuffer.isView(g)||Gm(g,ArrayBuffer))return g.byteLength;if(typeof g!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof g);var N=g.length,c=arguments.length>2&&arguments[2]===!0;if(!c&&N===0)return 0;for(var x=!1;;)switch(s){case"ascii":case"latin1":case"binary":return N;case"utf8":case"utf-8":return Lm(g).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N*2;case"hex":return N>>>1;case"base64":return vm(g).length;default:if(x)return c?-1:Lm(g).length;s=(""+s).toLowerCase(),x=!0}}W.byteLength=I;function f(g,s,N){var c=!1;if((s===void 0||s<0)&&(s=0),s>this.length||((N===void 0||N>this.length)&&(N=this.length),N<=0)||(N>>>=0,s>>>=0,N<=s))return"";for(g||(g="utf8");;)switch(g){case"hex":return wZ(this,s,N);case"utf8":case"utf-8":return RZ(this,s,N);case"ascii":return nZ(this,s,N);case"latin1":case"binary":return XZ(this,s,N);case"base64":return oZ(this,s,N);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return DZ(this,s,N);default:if(c)throw new TypeError("Unknown encoding: "+g);g=(g+"").toLowerCase(),c=!0}}W.prototype._isBuffer=!0;function b(g,s,N){var c=g[s];g[s]=g[N],g[N]=c}W.prototype.swap16=function(){var s=this.length;if(s%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var N=0;N<s;N+=2)b(this,N,N+1);return this},W.prototype.swap32=function(){var s=this.length;if(s%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var N=0;N<s;N+=4)b(this,N,N+3),b(this,N+1,N+2);return this},W.prototype.swap64=function(){var s=this.length;if(s%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var N=0;N<s;N+=8)b(this,N,N+7),b(this,N+1,N+6),b(this,N+2,N+5),b(this,N+3,N+4);return this},W.prototype.toString=function(){var s=this.length;return s===0?"":arguments.length===0?RZ(this,0,s):f.apply(this,arguments)},W.prototype.toLocaleString=W.prototype.toString,W.prototype.equals=function(s){if(!W.isBuffer(s))throw new TypeError("Argument must be a Buffer");return this===s?!0:W.compare(this,s)===0},W.prototype.inspect=function(){var s="",N=Z.INSPECT_MAX_BYTES;return s=this.toString("hex",0,N).replace(/(.{2})/g,"$1 ").trim(),this.length>N&&(s+=" ... "),"<Buffer "+s+">"},n&&(W.prototype[n]=W.prototype.inspect),W.prototype.compare=function(s,N,c,x,$){if(Gm(s,Uint8Array)&&(s=W.from(s,s.offset,s.byteLength)),!W.isBuffer(s))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof s);if(N===void 0&&(N=0),c===void 0&&(c=s?s.length:0),x===void 0&&(x=0),$===void 0&&($=this.length),N<0||c>s.length||x<0||$>this.length)throw new RangeError("out of range index");if(x>=$&&N>=c)return 0;if(x>=$)return-1;if(N>=c)return 1;if(N>>>=0,c>>>=0,x>>>=0,$>>>=0,this===s)return 0;for(var L=$-x,IZ=c-N,uZ=Math.min(L,IZ),KZ=this.slice(x,$),fZ=s.slice(N,c),HZ=0;HZ<uZ;++HZ)if(KZ[HZ]!==fZ[HZ]){L=KZ[HZ],IZ=fZ[HZ];break}return L<IZ?-1:IZ<L?1:0};function O(g,s,N,c,x){if(g.length===0)return-1;if(typeof N=="string"?(c=N,N=0):N>2147483647?N=2147483647:N<-2147483648&&(N=-2147483648),N=+N,ym(N)&&(N=x?0:g.length-1),N<0&&(N=g.length+N),N>=g.length){if(x)return-1;N=g.length-1}else if(N<0)if(x)N=0;else return-1;if(typeof s=="string"&&(s=W.from(s,c)),W.isBuffer(s))return s.length===0?-1:v(g,s,N,c,x);if(typeof s=="number")return s=s&255,typeof Uint8Array.prototype.indexOf=="function"?x?Uint8Array.prototype.indexOf.call(g,s,N):Uint8Array.prototype.lastIndexOf.call(g,s,N):v(g,[s],N,c,x);throw new TypeError("val must be string, number or Buffer")}function v(g,s,N,c,x){var $=1,L=g.length,IZ=s.length;if(c!==void 0&&(c=String(c).toLowerCase(),c==="ucs2"||c==="ucs-2"||c==="utf16le"||c==="utf-16le")){if(g.length<2||s.length<2)return-1;$=2,L/=2,IZ/=2,N/=2}function uZ(wY,yY){return $===1?wY[yY]:wY.readUInt16BE(yY*$)}var KZ;if(x){var fZ=-1;for(KZ=N;KZ<L;KZ++)if(uZ(g,KZ)===uZ(s,fZ===-1?0:KZ-fZ)){if(fZ===-1&&(fZ=KZ),KZ-fZ+1===IZ)return fZ*$}else fZ!==-1&&(KZ-=KZ-fZ),fZ=-1}else for(N+IZ>L&&(N=L-IZ),KZ=N;KZ>=0;KZ--){for(var HZ=!0,eY=0;eY<IZ;eY++)if(uZ(g,KZ+eY)!==uZ(s,eY)){HZ=!1;break}if(HZ)return KZ}return-1}W.prototype.includes=function(s,N,c){return this.indexOf(s,N,c)!==-1},W.prototype.indexOf=function(s,N,c){return O(this,s,N,c,!0)},W.prototype.lastIndexOf=function(s,N,c){return O(this,s,N,c,!1)};function hZ(g,s,N,c){N=Number(N)||0;var x=g.length-N;c?(c=Number(c),c>x&&(c=x)):c=x;var $=s.length;c>$/2&&(c=$/2);for(var L=0;L<c;++L){var IZ=parseInt(s.substr(L*2,2),16);if(ym(IZ))return L;g[N+L]=IZ}return L}function K(g,s,N,c){return Tm(Lm(s,g.length-N),g,N,c)}function tZ(g,s,N,c){return Tm(Zh(s),g,N,c)}function NZ(g,s,N,c){return tZ(g,s,N,c)}function Y(g,s,N,c){return Tm(vm(s),g,N,c)}function ZZ(g,s,N,c){return Tm(mh(s,g.length-N),g,N,c)}W.prototype.write=function(s,N,c,x){if(N===void 0)x="utf8",c=this.length,N=0;else if(c===void 0&&typeof N=="string")x=N,c=this.length,N=0;else if(isFinite(N))N=N>>>0,isFinite(c)?(c=c>>>0,x===void 0&&(x="utf8")):(x=c,c=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var $=this.length-N;if((c===void 0||c>$)&&(c=$),s.length>0&&(c<0||N<0)||N>this.length)throw new RangeError("Attempt to write outside buffer bounds");x||(x="utf8");for(var L=!1;;)switch(x){case"hex":return hZ(this,s,N,c);case"utf8":case"utf-8":return K(this,s,N,c);case"ascii":return tZ(this,s,N,c);case"latin1":case"binary":return NZ(this,s,N,c);case"base64":return Y(this,s,N,c);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ZZ(this,s,N,c);default:if(L)throw new TypeError("Unknown encoding: "+x);x=(""+x).toLowerCase(),L=!0}},W.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function oZ(g,s,N){return s===0&&N===g.length?m.fromByteArray(g):m.fromByteArray(g.slice(s,N))}function RZ(g,s,N){N=Math.min(g.length,N);for(var c=[],x=s;x<N;){var $=g[x],L=null,IZ=$>239?4:$>223?3:$>191?2:1;if(x+IZ<=N){var uZ,KZ,fZ,HZ;switch(IZ){case 1:$<128&&(L=$);break;case 2:uZ=g[x+1],(uZ&192)===128&&(HZ=($&31)<<6|uZ&63,HZ>127&&(L=HZ));break;case 3:uZ=g[x+1],KZ=g[x+2],(uZ&192)===128&&(KZ&192)===128&&(HZ=($&15)<<12|(uZ&63)<<6|KZ&63,HZ>2047&&(HZ<55296||HZ>57343)&&(L=HZ));break;case 4:uZ=g[x+1],KZ=g[x+2],fZ=g[x+3],(uZ&192)===128&&(KZ&192)===128&&(fZ&192)===128&&(HZ=($&15)<<18|(uZ&63)<<12|(KZ&63)<<6|fZ&63,HZ>65535&&HZ<1114112&&(L=HZ))}}L===null?(L=65533,IZ=1):L>65535&&(L-=65536,c.push(L>>>10&1023|55296),L=56320|L&1023),c.push(L),x+=IZ}return z(c)}var EZ=4096;function z(g){var s=g.length;if(s<=EZ)return String.fromCharCode.apply(String,g);for(var N="",c=0;c<s;)N+=String.fromCharCode.apply(String,g.slice(c,c+=EZ));return N}function nZ(g,s,N){var c="";N=Math.min(g.length,N);for(var x=s;x<N;++x)c+=String.fromCharCode(g[x]&127);return c}function XZ(g,s,N){var c="";N=Math.min(g.length,N);for(var x=s;x<N;++x)c+=String.fromCharCode(g[x]);return c}function wZ(g,s,N){var c=g.length;(!s||s<0)&&(s=0),(!N||N<0||N>c)&&(N=c);for(var x="",$=s;$<N;++$)x+=Em[g[$]];return x}function DZ(g,s,N){for(var c=g.slice(s,N),x="",$=0;$<c.length;$+=2)x+=String.fromCharCode(c[$]+c[$+1]*256);return x}W.prototype.slice=function(s,N){var c=this.length;s=~~s,N=N===void 0?c:~~N,s<0?(s+=c,s<0&&(s=0)):s>c&&(s=c),N<0?(N+=c,N<0&&(N=0)):N>c&&(N=c),N<s&&(N=s);var x=this.subarray(s,N);return Object.setPrototypeOf(x,W.prototype),x};function TZ(g,s,N){if(g%1!==0||g<0)throw new RangeError("offset is not uint");if(g+s>N)throw new RangeError("Trying to access beyond buffer length")}W.prototype.readUIntLE=function(s,N,c){s=s>>>0,N=N>>>0,c||TZ(s,N,this.length);for(var x=this[s],$=1,L=0;++L<N&&($*=256);)x+=this[s+L]*$;return x},W.prototype.readUIntBE=function(s,N,c){s=s>>>0,N=N>>>0,c||TZ(s,N,this.length);for(var x=this[s+--N],$=1;N>0&&($*=256);)x+=this[s+--N]*$;return x},W.prototype.readUInt8=function(s,N){return s=s>>>0,N||TZ(s,1,this.length),this[s]},W.prototype.readUInt16LE=function(s,N){return s=s>>>0,N||TZ(s,2,this.length),this[s]|this[s+1]<<8},W.prototype.readUInt16BE=function(s,N){return s=s>>>0,N||TZ(s,2,this.length),this[s]<<8|this[s+1]},W.prototype.readUInt32LE=function(s,N){return s=s>>>0,N||TZ(s,4,this.length),(this[s]|this[s+1]<<8|this[s+2]<<16)+this[s+3]*16777216},W.prototype.readUInt32BE=function(s,N){return s=s>>>0,N||TZ(s,4,this.length),this[s]*16777216+(this[s+1]<<16|this[s+2]<<8|this[s+3])},W.prototype.readIntLE=function(s,N,c){s=s>>>0,N=N>>>0,c||TZ(s,N,this.length);for(var x=this[s],$=1,L=0;++L<N&&($*=256);)x+=this[s+L]*$;return $*=128,x>=$&&(x-=Math.pow(2,8*N)),x},W.prototype.readIntBE=function(s,N,c){s=s>>>0,N=N>>>0,c||TZ(s,N,this.length);for(var x=N,$=1,L=this[s+--x];x>0&&($*=256);)L+=this[s+--x]*$;return $*=128,L>=$&&(L-=Math.pow(2,8*N)),L},W.prototype.readInt8=function(s,N){return s=s>>>0,N||TZ(s,1,this.length),this[s]&128?(255-this[s]+1)*-1:this[s]},W.prototype.readInt16LE=function(s,N){s=s>>>0,N||TZ(s,2,this.length);var c=this[s]|this[s+1]<<8;return c&32768?c|4294901760:c},W.prototype.readInt16BE=function(s,N){s=s>>>0,N||TZ(s,2,this.length);var c=this[s+1]|this[s]<<8;return c&32768?c|4294901760:c},W.prototype.readInt32LE=function(s,N){return s=s>>>0,N||TZ(s,4,this.length),this[s]|this[s+1]<<8|this[s+2]<<16|this[s+3]<<24},W.prototype.readInt32BE=function(s,N){return s=s>>>0,N||TZ(s,4,this.length),this[s]<<24|this[s+1]<<16|this[s+2]<<8|this[s+3]},W.prototype.readFloatLE=function(s,N){return s=s>>>0,N||TZ(s,4,this.length),h.read(this,s,!0,23,4)},W.prototype.readFloatBE=function(s,N){return s=s>>>0,N||TZ(s,4,this.length),h.read(this,s,!1,23,4)},W.prototype.readDoubleLE=function(s,N){return s=s>>>0,N||TZ(s,8,this.length),h.read(this,s,!0,52,8)},W.prototype.readDoubleBE=function(s,N){return s=s>>>0,N||TZ(s,8,this.length),h.read(this,s,!1,52,8)};function LZ(g,s,N,c,x,$){if(!W.isBuffer(g))throw new TypeError('"buffer" argument must be a Buffer instance');if(s>x||s<$)throw new RangeError('"value" argument is out of bounds');if(N+c>g.length)throw new RangeError("Index out of range")}W.prototype.writeUIntLE=function(s,N,c,x){if(s=+s,N=N>>>0,c=c>>>0,!x){var $=Math.pow(2,8*c)-1;LZ(this,s,N,c,$,0)}var L=1,IZ=0;for(this[N]=s&255;++IZ<c&&(L*=256);)this[N+IZ]=s/L&255;return N+c},W.prototype.writeUIntBE=function(s,N,c,x){if(s=+s,N=N>>>0,c=c>>>0,!x){var $=Math.pow(2,8*c)-1;LZ(this,s,N,c,$,0)}var L=c-1,IZ=1;for(this[N+L]=s&255;--L>=0&&(IZ*=256);)this[N+L]=s/IZ&255;return N+c},W.prototype.writeUInt8=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,1,255,0),this[N]=s&255,N+1},W.prototype.writeUInt16LE=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,2,65535,0),this[N]=s&255,this[N+1]=s>>>8,N+2},W.prototype.writeUInt16BE=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,2,65535,0),this[N]=s>>>8,this[N+1]=s&255,N+2},W.prototype.writeUInt32LE=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,4,4294967295,0),this[N+3]=s>>>24,this[N+2]=s>>>16,this[N+1]=s>>>8,this[N]=s&255,N+4},W.prototype.writeUInt32BE=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,4,4294967295,0),this[N]=s>>>24,this[N+1]=s>>>16,this[N+2]=s>>>8,this[N+3]=s&255,N+4},W.prototype.writeIntLE=function(s,N,c,x){if(s=+s,N=N>>>0,!x){var $=Math.pow(2,8*c-1);LZ(this,s,N,c,$-1,-$)}var L=0,IZ=1,uZ=0;for(this[N]=s&255;++L<c&&(IZ*=256);)s<0&&uZ===0&&this[N+L-1]!==0&&(uZ=1),this[N+L]=(s/IZ>>0)-uZ&255;return N+c},W.prototype.writeIntBE=function(s,N,c,x){if(s=+s,N=N>>>0,!x){var $=Math.pow(2,8*c-1);LZ(this,s,N,c,$-1,-$)}var L=c-1,IZ=1,uZ=0;for(this[N+L]=s&255;--L>=0&&(IZ*=256);)s<0&&uZ===0&&this[N+L+1]!==0&&(uZ=1),this[N+L]=(s/IZ>>0)-uZ&255;return N+c},W.prototype.writeInt8=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,1,127,-128),s<0&&(s=255+s+1),this[N]=s&255,N+1},W.prototype.writeInt16LE=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,2,32767,-32768),this[N]=s&255,this[N+1]=s>>>8,N+2},W.prototype.writeInt16BE=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,2,32767,-32768),this[N]=s>>>8,this[N+1]=s&255,N+2},W.prototype.writeInt32LE=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,4,2147483647,-2147483648),this[N]=s&255,this[N+1]=s>>>8,this[N+2]=s>>>16,this[N+3]=s>>>24,N+4},W.prototype.writeInt32BE=function(s,N,c){return s=+s,N=N>>>0,c||LZ(this,s,N,4,2147483647,-2147483648),s<0&&(s=4294967295+s+1),this[N]=s>>>24,this[N+1]=s>>>16,this[N+2]=s>>>8,this[N+3]=s&255,N+4};function Cm(g,s,N,c,x,$){if(N+c>g.length)throw new RangeError("Index out of range");if(N<0)throw new RangeError("Index out of range")}function pm(g,s,N,c,x){return s=+s,N=N>>>0,x||Cm(g,s,N,4,34028234663852886e22,-34028234663852886e22),h.write(g,s,N,c,23,4),N+4}W.prototype.writeFloatLE=function(s,N,c){return pm(this,s,N,!0,c)},W.prototype.writeFloatBE=function(s,N,c){return pm(this,s,N,!1,c)};function Om(g,s,N,c,x){return s=+s,N=N>>>0,x||Cm(g,s,N,8,17976931348623157e292,-17976931348623157e292),h.write(g,s,N,c,52,8),N+8}W.prototype.writeDoubleLE=function(s,N,c){return Om(this,s,N,!0,c)},W.prototype.writeDoubleBE=function(s,N,c){return Om(this,s,N,!1,c)},W.prototype.copy=function(s,N,c,x){if(!W.isBuffer(s))throw new TypeError("argument should be a Buffer");if(c||(c=0),!x&&x!==0&&(x=this.length),N>=s.length&&(N=s.length),N||(N=0),x>0&&x<c&&(x=c),x===c||s.length===0||this.length===0)return 0;if(N<0)throw new RangeError("targetStart out of bounds");if(c<0||c>=this.length)throw new RangeError("Index out of range");if(x<0)throw new RangeError("sourceEnd out of bounds");x>this.length&&(x=this.length),s.length-N<x-c&&(x=s.length-N+c);var $=x-c;if(this===s&&typeof Uint8Array.prototype.copyWithin=="function")this.copyWithin(N,c,x);else if(this===s&&c<N&&N<x)for(var L=$-1;L>=0;--L)s[L+N]=this[L+c];else Uint8Array.prototype.set.call(s,this.subarray(c,x),N);return $},W.prototype.fill=function(s,N,c,x){if(typeof s=="string"){if(typeof N=="string"?(x=N,N=0,c=this.length):typeof c=="string"&&(x=c,c=this.length),x!==void 0&&typeof x!="string")throw new TypeError("encoding must be a string");if(typeof x=="string"&&!W.isEncoding(x))throw new TypeError("Unknown encoding: "+x);if(s.length===1){var $=s.charCodeAt(0);(x==="utf8"&&$<128||x==="latin1")&&(s=$)}}else typeof s=="number"?s=s&255:typeof s=="boolean"&&(s=Number(s));if(N<0||this.length<N||this.length<c)throw new RangeError("Out of range index");if(c<=N)return this;N=N>>>0,c=c===void 0?this.length:c>>>0,s||(s=0);var L;if(typeof s=="number")for(L=N;L<c;++L)this[L]=s;else{var IZ=W.isBuffer(s)?s:W.from(s,x),uZ=IZ.length;if(uZ===0)throw new TypeError('The value "'+s+'" is invalid for argument "value"');for(L=0;L<c-N;++L)this[L+N]=IZ[L%uZ]}return this};var Xm=/[^+/0-9A-Za-z-_]/g;function wm(g){if(g=g.split("=")[0],g=g.trim().replace(Xm,""),g.length<2)return"";for(;g.length%4!==0;)g=g+"=";return g}function Lm(g,s){s=s||1/0;for(var N,c=g.length,x=null,$=[],L=0;L<c;++L){if(N=g.charCodeAt(L),N>55295&&N<57344){if(!x){if(N>56319){(s-=3)>-1&&$.push(239,191,189);continue}else if(L+1===c){(s-=3)>-1&&$.push(239,191,189);continue}x=N;continue}if(N<56320){(s-=3)>-1&&$.push(239,191,189),x=N;continue}N=(x-55296<<10|N-56320)+65536}else x&&(s-=3)>-1&&$.push(239,191,189);if(x=null,N<128){if((s-=1)<0)break;$.push(N)}else if(N<2048){if((s-=2)<0)break;$.push(N>>6|192,N&63|128)}else if(N<65536){if((s-=3)<0)break;$.push(N>>12|224,N>>6&63|128,N&63|128)}else if(N<1114112){if((s-=4)<0)break;$.push(N>>18|240,N>>12&63|128,N>>6&63|128,N&63|128)}else throw new Error("Invalid code point")}return $}function Zh(g){for(var s=[],N=0;N<g.length;++N)s.push(g.charCodeAt(N)&255);return s}function mh(g,s){for(var N,c,x,$=[],L=0;L<g.length&&!((s-=2)<0);++L)N=g.charCodeAt(L),c=N>>8,x=N%256,$.push(x),$.push(c);return $}function vm(g){return m.toByteArray(wm(g))}function Tm(g,s,N,c){for(var x=0;x<c&&!(x+N>=s.length||x>=g.length);++x)s[x+N]=g[x];return x}function Gm(g,s){return g instanceof s||g!=null&&g.constructor!=null&&g.constructor.name!=null&&g.constructor.name===s.name}function ym(g){return g!==g}var Em=function(){for(var g="0123456789abcdef",s=new Array(256),N=0;N<16;++N)for(var c=N*16,x=0;x<16;++x)s[c+x]=g[N]+g[x];return s}()}});var GA=4,FA=4,Nm=4,hn=new Int32Array(2),ad=new Float32Array(hn.buffer),td=new Float64Array(hn.buffer),sa=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1,Pt;(function(Z){Z[Z.UTF8_BYTES=1]="UTF8_BYTES",Z[Z.UTF16_STRING=2]="UTF16_STRING"})(Pt||(Pt={}));var ed=class{constructor(Z){this.bytes_=Z,this.position_=0,this.text_decoder_=new TextDecoder}static allocate(Z){return new ed(new Uint8Array(Z))}clear(){this.position_=0}bytes(){return this.bytes_}position(){return this.position_}setPosition(Z){this.position_=Z}capacity(){return this.bytes_.length}readInt8(Z){return this.readUint8(Z)<<24>>24}readUint8(Z){return this.bytes_[Z]}readInt16(Z){return this.readUint16(Z)<<16>>16}readUint16(Z){return this.bytes_[Z]|this.bytes_[Z+1]<<8}readInt32(Z){return this.bytes_[Z]|this.bytes_[Z+1]<<8|this.bytes_[Z+2]<<16|this.bytes_[Z+3]<<24}readUint32(Z){return this.readInt32(Z)>>>0}readInt64(Z){return BigInt.asIntN(64,BigInt(this.readUint32(Z))+(BigInt(this.readUint32(Z+4))<<BigInt(32)))}readUint64(Z){return BigInt.asUintN(64,BigInt(this.readUint32(Z))+(BigInt(this.readUint32(Z+4))<<BigInt(32)))}readFloat32(Z){return hn[0]=this.readInt32(Z),ad[0]}readFloat64(Z){return hn[sa?0:1]=this.readInt32(Z),hn[sa?1:0]=this.readInt32(Z+4),td[0]}writeInt8(Z,m){this.bytes_[Z]=m}writeUint8(Z,m){this.bytes_[Z]=m}writeInt16(Z,m){this.bytes_[Z]=m,this.bytes_[Z+1]=m>>8}writeUint16(Z,m){this.bytes_[Z]=m,this.bytes_[Z+1]=m>>8}writeInt32(Z,m){this.bytes_[Z]=m,this.bytes_[Z+1]=m>>8,this.bytes_[Z+2]=m>>16,this.bytes_[Z+3]=m>>24}writeUint32(Z,m){this.bytes_[Z]=m,this.bytes_[Z+1]=m>>8,this.bytes_[Z+2]=m>>16,this.bytes_[Z+3]=m>>24}writeInt64(Z,m){this.writeInt32(Z,Number(BigInt.asIntN(32,m))),this.writeInt32(Z+4,Number(BigInt.asIntN(32,m>>BigInt(32))))}writeUint64(Z,m){this.writeUint32(Z,Number(BigInt.asUintN(32,m))),this.writeUint32(Z+4,Number(BigInt.asUintN(32,m>>BigInt(32))))}writeFloat32(Z,m){ad[0]=m,this.writeInt32(Z,hn[0])}writeFloat64(Z,m){td[0]=m,this.writeInt32(Z,hn[sa?0:1]),this.writeInt32(Z+4,hn[sa?1:0])}getBufferIdentifier(){if(this.bytes_.length<this.position_+GA+FA)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");let Z="";for(let m=0;m<FA;m++)Z+=String.fromCharCode(this.readInt8(this.position_+GA+m));return Z}__offset(Z,m){let h=Z-this.readInt32(Z);return m<this.readInt16(h)?this.readInt16(h+m):0}__union(Z,m){return Z.bb_pos=m+this.readInt32(m),Z.bb=this,Z}__string(Z,m){Z+=this.readInt32(Z);let h=this.readInt32(Z);Z+=GA;let n=this.bytes_.subarray(Z,Z+h);return m===Pt.UTF8_BYTES?n:this.text_decoder_.decode(n)}__union_with_string(Z,m){return typeof Z=="string"?this.__string(m):this.__union(Z,m)}__indirect(Z){return Z+this.readInt32(Z)}__vector(Z){return Z+this.readInt32(Z)+GA}__vector_len(Z){return this.readInt32(Z+this.readInt32(Z))}__has_identifier(Z){if(Z.length!=FA)throw new Error("FlatBuffers: file identifier must be length "+FA);for(let m=0;m<FA;m++)if(Z.charCodeAt(m)!=this.readInt8(this.position()+GA+m))return!1;return!0}createScalarList(Z,m){let h=[];for(let n=0;n<m;++n){let i=Z(n);i!==null&&h.push(i)}return h}createObjList(Z,m){let h=[];for(let n=0;n<m;++n){let i=Z(n);i!==null&&h.push(i.unpack())}return h}};var xH=wJ(zJ(),1),$t={};Vn($t,{CAT:()=>am,CATCOLLECTION:()=>Yn,CATCOLLECTIONT:()=>dd,CATT:()=>Fd,dataStatusCode:()=>od,massType:()=>Vd,objectType:()=>ld,opsStatusCode:()=>Rd,orbitType:()=>Gd});var od=(Z=>(Z[Z.NO_CURRENT_ELEMENTS=0]="NO_CURRENT_ELEMENTS",Z[Z.NO_INITIAL_ELEMENTS=1]="NO_INITIAL_ELEMENTS",Z[Z.NO_ELEMENTS_AVAILABLE=2]="NO_ELEMENTS_AVAILABLE",Z[Z.OK=3]="OK",Z))(od||{}),Vd=(Z=>(Z[Z.DRY=0]="DRY",Z[Z.WET=1]="WET",Z))(Vd||{}),ld=(Z=>(Z[Z.PAYLOAD=0]="PAYLOAD",Z[Z.ROCKET_BODY=1]="ROCKET_BODY",Z[Z.DEBRIS=2]="DEBRIS",Z[Z.UNKNOWN=3]="UNKNOWN",Z))(ld||{}),Rd=(Z=>(Z[Z.OPERATIONAL=0]="OPERATIONAL",Z[Z.NONOPERATIONAL=1]="NONOPERATIONAL",Z[Z.PARTIALLY_OPERATIONAL=2]="PARTIALLY_OPERATIONAL",Z[Z.BACKUP_STANDBY=3]="BACKUP_STANDBY",Z[Z.SPARE=4]="SPARE",Z[Z.EXTENDED_MISSION=5]="EXTENDED_MISSION",Z[Z.DECAYED=6]="DECAYED",Z[Z.UNKNOWN=7]="UNKNOWN",Z))(Rd||{}),Gd=(Z=>(Z[Z.ORBIT=0]="ORBIT",Z[Z.LANDING=1]="LANDING",Z[Z.IMPACT=2]="IMPACT",Z[Z.DOCKED=3]="DOCKED",Z[Z.ROUNDTRIP=4]="ROUNDTRIP",Z))(Gd||{}),am=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsCAT(Z,m){return(m||new am).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsCAT(Z,m){return Z.setPosition(Z.position()+Nm),(m||new am).__init(Z.readInt32(Z.position())+Z.position(),Z)}static bufferHasIdentifier(Z){return Z.__has_identifier("$CAT")}OBJECT_NAME(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_ID(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}NORAD_CAT_ID(){let Z=this.bb.__offset(this.bb_pos,8);return Z?this.bb.readUint32(this.bb_pos+Z):0}OBJECT_TYPE(){let Z=this.bb.__offset(this.bb_pos,10);return Z?this.bb.readInt8(this.bb_pos+Z):3}OPS_STATUS_CODE(){let Z=this.bb.__offset(this.bb_pos,12);return Z?this.bb.readInt8(this.bb_pos+Z):7}OWNER(Z){let m=this.bb.__offset(this.bb_pos,14);return m?this.bb.__string(this.bb_pos+m,Z):null}LAUNCH_DATE(Z){let m=this.bb.__offset(this.bb_pos,16);return m?this.bb.__string(this.bb_pos+m,Z):null}LAUNCH_SITE(Z){let m=this.bb.__offset(this.bb_pos,18);return m?this.bb.__string(this.bb_pos+m,Z):null}DECAY_DATE(Z){let m=this.bb.__offset(this.bb_pos,20);return m?this.bb.__string(this.bb_pos+m,Z):null}PERIOD(){let Z=this.bb.__offset(this.bb_pos,22);return Z?this.bb.readFloat64(this.bb_pos+Z):0}INCLINATION(){let Z=this.bb.__offset(this.bb_pos,24);return Z?this.bb.readFloat64(this.bb_pos+Z):0}APOGEE(){let Z=this.bb.__offset(this.bb_pos,26);return Z?this.bb.readFloat64(this.bb_pos+Z):0}PERIGEE(){let Z=this.bb.__offset(this.bb_pos,28);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RCS(){let Z=this.bb.__offset(this.bb_pos,30);return Z?this.bb.readFloat64(this.bb_pos+Z):0}DATA_STATUS_CODE(){let Z=this.bb.__offset(this.bb_pos,32);return Z?this.bb.readInt8(this.bb_pos+Z):0}ORBIT_CENTER(Z){let m=this.bb.__offset(this.bb_pos,34);return m?this.bb.__string(this.bb_pos+m,Z):null}ORBIT_TYPE(){let Z=this.bb.__offset(this.bb_pos,36);return Z?this.bb.readInt8(this.bb_pos+Z):0}DEPLOYMENT_DATE(Z){let m=this.bb.__offset(this.bb_pos,38);return m?this.bb.__string(this.bb_pos+m,Z):null}MANEUVERABLE(){let Z=this.bb.__offset(this.bb_pos,40);return Z?!!this.bb.readInt8(this.bb_pos+Z):!1}SIZE(){let Z=this.bb.__offset(this.bb_pos,42);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MASS(){let Z=this.bb.__offset(this.bb_pos,44);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MASS_TYPE(){let Z=this.bb.__offset(this.bb_pos,46);return Z?this.bb.readInt8(this.bb_pos+Z):0}static startCAT(Z){Z.startObject(22)}static addObjectName(Z,m){Z.addFieldOffset(0,m,0)}static addObjectId(Z,m){Z.addFieldOffset(1,m,0)}static addNoradCatId(Z,m){Z.addFieldInt32(2,m,0)}static addObjectType(Z,m){Z.addFieldInt8(3,m,3)}static addOpsStatusCode(Z,m){Z.addFieldInt8(4,m,7)}static addOwner(Z,m){Z.addFieldOffset(5,m,0)}static addLaunchDate(Z,m){Z.addFieldOffset(6,m,0)}static addLaunchSite(Z,m){Z.addFieldOffset(7,m,0)}static addDecayDate(Z,m){Z.addFieldOffset(8,m,0)}static addPeriod(Z,m){Z.addFieldFloat64(9,m,0)}static addInclination(Z,m){Z.addFieldFloat64(10,m,0)}static addApogee(Z,m){Z.addFieldFloat64(11,m,0)}static addPerigee(Z,m){Z.addFieldFloat64(12,m,0)}static addRcs(Z,m){Z.addFieldFloat64(13,m,0)}static addDataStatusCode(Z,m){Z.addFieldInt8(14,m,0)}static addOrbitCenter(Z,m){Z.addFieldOffset(15,m,0)}static addOrbitType(Z,m){Z.addFieldInt8(16,m,0)}static addDeploymentDate(Z,m){Z.addFieldOffset(17,m,0)}static addManeuverable(Z,m){Z.addFieldInt8(18,+m,0)}static addSize(Z,m){Z.addFieldFloat64(19,m,0)}static addMass(Z,m){Z.addFieldFloat64(20,m,0)}static addMassType(Z,m){Z.addFieldInt8(21,m,0)}static endCAT(Z){return Z.endObject()}static finishCATBuffer(Z,m){Z.finish(m,"$CAT")}static finishSizePrefixedCATBuffer(Z,m){Z.finish(m,"$CAT",!0)}static createCAT(Z,m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q,p,T,I,f,b,O,v){return am.startCAT(Z),am.addObjectName(Z,m),am.addObjectId(Z,h),am.addNoradCatId(Z,n),am.addObjectType(Z,i),am.addOpsStatusCode(Z,A),am.addOwner(Z,t),am.addLaunchDate(Z,W),am.addLaunchSite(Z,e),am.addDecayDate(Z,G),am.addPeriod(Z,F),am.addInclination(Z,d),am.addApogee(Z,J),am.addPerigee(Z,k),am.addRcs(Z,r),am.addDataStatusCode(Z,Q),am.addOrbitCenter(Z,p),am.addOrbitType(Z,T),am.addDeploymentDate(Z,I),am.addManeuverable(Z,f),am.addSize(Z,b),am.addMass(Z,O),am.addMassType(Z,v),am.endCAT(Z)}unpack(){return new Fd(this.OBJECT_NAME(),this.OBJECT_ID(),this.NORAD_CAT_ID(),this.OBJECT_TYPE(),this.OPS_STATUS_CODE(),this.OWNER(),this.LAUNCH_DATE(),this.LAUNCH_SITE(),this.DECAY_DATE(),this.PERIOD(),this.INCLINATION(),this.APOGEE(),this.PERIGEE(),this.RCS(),this.DATA_STATUS_CODE(),this.ORBIT_CENTER(),this.ORBIT_TYPE(),this.DEPLOYMENT_DATE(),this.MANEUVERABLE(),this.SIZE(),this.MASS(),this.MASS_TYPE())}unpackTo(Z){Z.OBJECT_NAME=this.OBJECT_NAME(),Z.OBJECT_ID=this.OBJECT_ID(),Z.NORAD_CAT_ID=this.NORAD_CAT_ID(),Z.OBJECT_TYPE=this.OBJECT_TYPE(),Z.OPS_STATUS_CODE=this.OPS_STATUS_CODE(),Z.OWNER=this.OWNER(),Z.LAUNCH_DATE=this.LAUNCH_DATE(),Z.LAUNCH_SITE=this.LAUNCH_SITE(),Z.DECAY_DATE=this.DECAY_DATE(),Z.PERIOD=this.PERIOD(),Z.INCLINATION=this.INCLINATION(),Z.APOGEE=this.APOGEE(),Z.PERIGEE=this.PERIGEE(),Z.RCS=this.RCS(),Z.DATA_STATUS_CODE=this.DATA_STATUS_CODE(),Z.ORBIT_CENTER=this.ORBIT_CENTER(),Z.ORBIT_TYPE=this.ORBIT_TYPE(),Z.DEPLOYMENT_DATE=this.DEPLOYMENT_DATE(),Z.MANEUVERABLE=this.MANEUVERABLE(),Z.SIZE=this.SIZE(),Z.MASS=this.MASS(),Z.MASS_TYPE=this.MASS_TYPE()}},Fd=class{constructor(Z=null,m=null,h=0,n=3,i=7,A=null,t=null,W=null,e=null,G=0,F=0,d=0,J=0,k=0,r=0,Q=null,p=0,T=null,I=!1,f=0,b=0,O=0){this.OBJECT_NAME=Z,this.OBJECT_ID=m,this.NORAD_CAT_ID=h,this.OBJECT_TYPE=n,this.OPS_STATUS_CODE=i,this.OWNER=A,this.LAUNCH_DATE=t,this.LAUNCH_SITE=W,this.DECAY_DATE=e,this.PERIOD=G,this.INCLINATION=F,this.APOGEE=d,this.PERIGEE=J,this.RCS=k,this.DATA_STATUS_CODE=r,this.ORBIT_CENTER=Q,this.ORBIT_TYPE=p,this.DEPLOYMENT_DATE=T,this.MANEUVERABLE=I,this.SIZE=f,this.MASS=b,this.MASS_TYPE=O}pack(Z){let m=this.OBJECT_NAME!==null?Z.createString(this.OBJECT_NAME):0,h=this.OBJECT_ID!==null?Z.createString(this.OBJECT_ID):0,n=this.OWNER!==null?Z.createString(this.OWNER):0,i=this.LAUNCH_DATE!==null?Z.createString(this.LAUNCH_DATE):0,A=this.LAUNCH_SITE!==null?Z.createString(this.LAUNCH_SITE):0,t=this.DECAY_DATE!==null?Z.createString(this.DECAY_DATE):0,W=this.ORBIT_CENTER!==null?Z.createString(this.ORBIT_CENTER):0,e=this.DEPLOYMENT_DATE!==null?Z.createString(this.DEPLOYMENT_DATE):0;return am.createCAT(Z,m,h,this.NORAD_CAT_ID,this.OBJECT_TYPE,this.OPS_STATUS_CODE,n,i,A,t,this.PERIOD,this.INCLINATION,this.APOGEE,this.PERIGEE,this.RCS,this.DATA_STATUS_CODE,W,this.ORBIT_TYPE,e,this.MANEUVERABLE,this.SIZE,this.MASS,this.MASS_TYPE)}},Yn=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsCATCOLLECTION(Z,m){return(m||new Yn).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsCATCOLLECTION(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Yn).__init(Z.readInt32(Z.position())+Z.position(),Z)}RECORDS(Z,m){let h=this.bb.__offset(this.bb_pos,4);return h?(m||new am).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}recordsLength(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startCATCOLLECTION(Z){Z.startObject(1)}static addRecords(Z,m){Z.addFieldOffset(0,m,0)}static createRecordsVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startRecordsVector(Z,m){Z.startVector(4,m,4)}static endCATCOLLECTION(Z){return Z.endObject()}static createCATCOLLECTION(Z,m){return Yn.startCATCOLLECTION(Z),Yn.addRecords(Z,m),Yn.endCATCOLLECTION(Z)}unpack(){return new dd(this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength()))}unpackTo(Z){Z.RECORDS=this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength())}},dd=class{constructor(Z=[]){this.RECORDS=Z}pack(Z){let m=Yn.createRecordsVector(Z,Z.createObjectOffsetList(this.RECORDS));return Yn.createCATCOLLECTION(Z,m)}},ra={};Vn(ra,{OMM:()=>dZ,OMMCOLLECTION:()=>nn,OMMCOLLECTIONT:()=>Jd,OMMT:()=>Ud,ephemerisType:()=>sd,manCovRefFrame:()=>rd,meanElementTheory:()=>Nd,referenceFrame:()=>Ed,timeSystem:()=>kd});var sd=(Z=>(Z[Z.SGP=0]="SGP",Z[Z.SGP4=1]="SGP4",Z[Z.SDP4=2]="SDP4",Z[Z.SGP8=3]="SGP8",Z[Z.SDP8=4]="SDP8",Z))(sd||{}),rd=(Z=>(Z[Z.RSW=0]="RSW",Z[Z.RTN=1]="RTN",Z[Z.TNW=2]="TNW",Z))(rd||{}),Nd=(Z=>(Z[Z.SGP4=0]="SGP4",Z[Z.DSST=1]="DSST",Z[Z.USM=2]="USM",Z))(Nd||{}),Ed=(Z=>(Z[Z.EME2000=0]="EME2000",Z[Z.GCRF=1]="GCRF",Z[Z.GRC=2]="GRC",Z[Z.ICRF=3]="ICRF",Z[Z.ITRF2000=4]="ITRF2000",Z[Z.ITRF93=5]="ITRF93",Z[Z.ITRF97=6]="ITRF97",Z[Z.MCI=7]="MCI",Z[Z.TDR=8]="TDR",Z[Z.TEME=9]="TEME",Z[Z.TOD=10]="TOD",Z))(Ed||{}),kd=(Z=>(Z[Z.GMST=0]="GMST",Z[Z.GPS=1]="GPS",Z[Z.MET=2]="MET",Z[Z.MRT=3]="MRT",Z[Z.SCLK=4]="SCLK",Z[Z.TAI=5]="TAI",Z[Z.TCB=6]="TCB",Z[Z.TDB=7]="TDB",Z[Z.TCG=8]="TCG",Z[Z.TT=9]="TT",Z[Z.UT1=10]="UT1",Z[Z.UTC=11]="UTC",Z))(kd||{}),dZ=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsOMM(Z,m){return(m||new dZ).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsOMM(Z,m){return Z.setPosition(Z.position()+Nm),(m||new dZ).__init(Z.readInt32(Z.position())+Z.position(),Z)}static bufferHasIdentifier(Z){return Z.__has_identifier("$OMM")}CCSDS_OMM_VERS(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CREATION_DATE(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}ORIGINATOR(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_NAME(Z){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_ID(Z){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.__string(this.bb_pos+m,Z):null}CENTER_NAME(Z){let m=this.bb.__offset(this.bb_pos,14);return m?this.bb.__string(this.bb_pos+m,Z):null}REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readInt8(this.bb_pos+Z):9}REF_FRAME_EPOCH(Z){let m=this.bb.__offset(this.bb_pos,18);return m?this.bb.__string(this.bb_pos+m,Z):null}TIME_SYSTEM(){let Z=this.bb.__offset(this.bb_pos,20);return Z?this.bb.readInt8(this.bb_pos+Z):11}MEAN_ELEMENT_THEORY(){let Z=this.bb.__offset(this.bb_pos,22);return Z?this.bb.readInt8(this.bb_pos+Z):0}COMMENT(Z){let m=this.bb.__offset(this.bb_pos,24);return m?this.bb.__string(this.bb_pos+m,Z):null}EPOCH(Z){let m=this.bb.__offset(this.bb_pos,26);return m?this.bb.__string(this.bb_pos+m,Z):null}SEMI_MAJOR_AXIS(){let Z=this.bb.__offset(this.bb_pos,28);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MEAN_MOTION(){let Z=this.bb.__offset(this.bb_pos,30);return Z?this.bb.readFloat64(this.bb_pos+Z):0}ECCENTRICITY(){let Z=this.bb.__offset(this.bb_pos,32);return Z?this.bb.readFloat64(this.bb_pos+Z):0}INCLINATION(){let Z=this.bb.__offset(this.bb_pos,34);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RA_OF_ASC_NODE(){let Z=this.bb.__offset(this.bb_pos,36);return Z?this.bb.readFloat64(this.bb_pos+Z):0}ARG_OF_PERICENTER(){let Z=this.bb.__offset(this.bb_pos,38);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MEAN_ANOMALY(){let Z=this.bb.__offset(this.bb_pos,40);return Z?this.bb.readFloat64(this.bb_pos+Z):0}GM(){let Z=this.bb.__offset(this.bb_pos,42);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MASS(){let Z=this.bb.__offset(this.bb_pos,44);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SOLAR_RAD_AREA(){let Z=this.bb.__offset(this.bb_pos,46);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SOLAR_RAD_COEFF(){let Z=this.bb.__offset(this.bb_pos,48);return Z?this.bb.readFloat64(this.bb_pos+Z):0}DRAG_AREA(){let Z=this.bb.__offset(this.bb_pos,50);return Z?this.bb.readFloat64(this.bb_pos+Z):0}DRAG_COEFF(){let Z=this.bb.__offset(this.bb_pos,52);return Z?this.bb.readFloat64(this.bb_pos+Z):0}EPHEMERIS_TYPE(){let Z=this.bb.__offset(this.bb_pos,54);return Z?this.bb.readInt8(this.bb_pos+Z):1}CLASSIFICATION_TYPE(Z){let m=this.bb.__offset(this.bb_pos,56);return m?this.bb.__string(this.bb_pos+m,Z):null}NORAD_CAT_ID(){let Z=this.bb.__offset(this.bb_pos,58);return Z?this.bb.readUint32(this.bb_pos+Z):0}ELEMENT_SET_NO(){let Z=this.bb.__offset(this.bb_pos,60);return Z?this.bb.readUint32(this.bb_pos+Z):0}REV_AT_EPOCH(){let Z=this.bb.__offset(this.bb_pos,62);return Z?this.bb.readFloat64(this.bb_pos+Z):0}BSTAR(){let Z=this.bb.__offset(this.bb_pos,64);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MEAN_MOTION_DOT(){let Z=this.bb.__offset(this.bb_pos,66);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MEAN_MOTION_DDOT(){let Z=this.bb.__offset(this.bb_pos,68);return Z?this.bb.readFloat64(this.bb_pos+Z):0}COV_REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,70);return Z?this.bb.readInt8(this.bb_pos+Z):0}CX_X(){let Z=this.bb.__offset(this.bb_pos,72);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_X(){let Z=this.bb.__offset(this.bb_pos,74);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_Y(){let Z=this.bb.__offset(this.bb_pos,76);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_X(){let Z=this.bb.__offset(this.bb_pos,78);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_Y(){let Z=this.bb.__offset(this.bb_pos,80);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_Z(){let Z=this.bb.__offset(this.bb_pos,82);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_X(){let Z=this.bb.__offset(this.bb_pos,84);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,86);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,88);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,90);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_X(){let Z=this.bb.__offset(this.bb_pos,92);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,94);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,96);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,98);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Y_DOT(){let Z=this.bb.__offset(this.bb_pos,100);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_X(){let Z=this.bb.__offset(this.bb_pos,102);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,104);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,106);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,108);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Y_DOT(){let Z=this.bb.__offset(this.bb_pos,110);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Z_DOT(){let Z=this.bb.__offset(this.bb_pos,112);return Z?this.bb.readFloat64(this.bb_pos+Z):0}USER_DEFINED_BIP_0044_TYPE(){let Z=this.bb.__offset(this.bb_pos,114);return Z?this.bb.readUint32(this.bb_pos+Z):0}USER_DEFINED_OBJECT_DESIGNATOR(Z){let m=this.bb.__offset(this.bb_pos,116);return m?this.bb.__string(this.bb_pos+m,Z):null}USER_DEFINED_EARTH_MODEL(Z){let m=this.bb.__offset(this.bb_pos,118);return m?this.bb.__string(this.bb_pos+m,Z):null}USER_DEFINED_EPOCH_TIMESTAMP(){let Z=this.bb.__offset(this.bb_pos,120);return Z?this.bb.readFloat64(this.bb_pos+Z):0}USER_DEFINED_MICROSECONDS(){let Z=this.bb.__offset(this.bb_pos,122);return Z?this.bb.readFloat64(this.bb_pos+Z):0}static startOMM(Z){Z.startObject(60)}static addCcsdsOmmVers(Z,m){Z.addFieldFloat64(0,m,0)}static addCreationDate(Z,m){Z.addFieldOffset(1,m,0)}static addOriginator(Z,m){Z.addFieldOffset(2,m,0)}static addObjectName(Z,m){Z.addFieldOffset(3,m,0)}static addObjectId(Z,m){Z.addFieldOffset(4,m,0)}static addCenterName(Z,m){Z.addFieldOffset(5,m,0)}static addRefFrame(Z,m){Z.addFieldInt8(6,m,9)}static addRefFrameEpoch(Z,m){Z.addFieldOffset(7,m,0)}static addTimeSystem(Z,m){Z.addFieldInt8(8,m,11)}static addMeanElementTheory(Z,m){Z.addFieldInt8(9,m,0)}static addComment(Z,m){Z.addFieldOffset(10,m,0)}static addEpoch(Z,m){Z.addFieldOffset(11,m,0)}static addSemiMajorAxis(Z,m){Z.addFieldFloat64(12,m,0)}static addMeanMotion(Z,m){Z.addFieldFloat64(13,m,0)}static addEccentricity(Z,m){Z.addFieldFloat64(14,m,0)}static addInclination(Z,m){Z.addFieldFloat64(15,m,0)}static addRaOfAscNode(Z,m){Z.addFieldFloat64(16,m,0)}static addArgOfPericenter(Z,m){Z.addFieldFloat64(17,m,0)}static addMeanAnomaly(Z,m){Z.addFieldFloat64(18,m,0)}static addGm(Z,m){Z.addFieldFloat64(19,m,0)}static addMass(Z,m){Z.addFieldFloat64(20,m,0)}static addSolarRadArea(Z,m){Z.addFieldFloat64(21,m,0)}static addSolarRadCoeff(Z,m){Z.addFieldFloat64(22,m,0)}static addDragArea(Z,m){Z.addFieldFloat64(23,m,0)}static addDragCoeff(Z,m){Z.addFieldFloat64(24,m,0)}static addEphemerisType(Z,m){Z.addFieldInt8(25,m,1)}static addClassificationType(Z,m){Z.addFieldOffset(26,m,0)}static addNoradCatId(Z,m){Z.addFieldInt32(27,m,0)}static addElementSetNo(Z,m){Z.addFieldInt32(28,m,0)}static addRevAtEpoch(Z,m){Z.addFieldFloat64(29,m,0)}static addBstar(Z,m){Z.addFieldFloat64(30,m,0)}static addMeanMotionDot(Z,m){Z.addFieldFloat64(31,m,0)}static addMeanMotionDdot(Z,m){Z.addFieldFloat64(32,m,0)}static addCovRefFrame(Z,m){Z.addFieldInt8(33,m,0)}static addCxX(Z,m){Z.addFieldFloat64(34,m,0)}static addCyX(Z,m){Z.addFieldFloat64(35,m,0)}static addCyY(Z,m){Z.addFieldFloat64(36,m,0)}static addCzX(Z,m){Z.addFieldFloat64(37,m,0)}static addCzY(Z,m){Z.addFieldFloat64(38,m,0)}static addCzZ(Z,m){Z.addFieldFloat64(39,m,0)}static addCxDotX(Z,m){Z.addFieldFloat64(40,m,0)}static addCxDotY(Z,m){Z.addFieldFloat64(41,m,0)}static addCxDotZ(Z,m){Z.addFieldFloat64(42,m,0)}static addCxDotXDot(Z,m){Z.addFieldFloat64(43,m,0)}static addCyDotX(Z,m){Z.addFieldFloat64(44,m,0)}static addCyDotY(Z,m){Z.addFieldFloat64(45,m,0)}static addCyDotZ(Z,m){Z.addFieldFloat64(46,m,0)}static addCyDotXDot(Z,m){Z.addFieldFloat64(47,m,0)}static addCyDotYDot(Z,m){Z.addFieldFloat64(48,m,0)}static addCzDotX(Z,m){Z.addFieldFloat64(49,m,0)}static addCzDotY(Z,m){Z.addFieldFloat64(50,m,0)}static addCzDotZ(Z,m){Z.addFieldFloat64(51,m,0)}static addCzDotXDot(Z,m){Z.addFieldFloat64(52,m,0)}static addCzDotYDot(Z,m){Z.addFieldFloat64(53,m,0)}static addCzDotZDot(Z,m){Z.addFieldFloat64(54,m,0)}static addUserDefinedBip0044Type(Z,m){Z.addFieldInt32(55,m,0)}static addUserDefinedObjectDesignator(Z,m){Z.addFieldOffset(56,m,0)}static addUserDefinedEarthModel(Z,m){Z.addFieldOffset(57,m,0)}static addUserDefinedEpochTimestamp(Z,m){Z.addFieldFloat64(58,m,0)}static addUserDefinedMicroseconds(Z,m){Z.addFieldFloat64(59,m,0)}static endOMM(Z){return Z.endObject()}static finishOMMBuffer(Z,m){Z.finish(m,"$OMM")}static finishSizePrefixedOMMBuffer(Z,m){Z.finish(m,"$OMM",!0)}static createOMM(Z,m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q,p,T,I,f,b,O,v,hZ,K,tZ,NZ,Y,ZZ,oZ,RZ,EZ,z,nZ,XZ,wZ,DZ,TZ,LZ,Cm,pm,Om,Xm,wm,Lm,Zh,mh,vm,Tm,Gm,ym,Em,g,s,N,c,x,$,L,IZ,uZ){return dZ.startOMM(Z),dZ.addCcsdsOmmVers(Z,m),dZ.addCreationDate(Z,h),dZ.addOriginator(Z,n),dZ.addObjectName(Z,i),dZ.addObjectId(Z,A),dZ.addCenterName(Z,t),dZ.addRefFrame(Z,W),dZ.addRefFrameEpoch(Z,e),dZ.addTimeSystem(Z,G),dZ.addMeanElementTheory(Z,F),dZ.addComment(Z,d),dZ.addEpoch(Z,J),dZ.addSemiMajorAxis(Z,k),dZ.addMeanMotion(Z,r),dZ.addEccentricity(Z,Q),dZ.addInclination(Z,p),dZ.addRaOfAscNode(Z,T),dZ.addArgOfPericenter(Z,I),dZ.addMeanAnomaly(Z,f),dZ.addGm(Z,b),dZ.addMass(Z,O),dZ.addSolarRadArea(Z,v),dZ.addSolarRadCoeff(Z,hZ),dZ.addDragArea(Z,K),dZ.addDragCoeff(Z,tZ),dZ.addEphemerisType(Z,NZ),dZ.addClassificationType(Z,Y),dZ.addNoradCatId(Z,ZZ),dZ.addElementSetNo(Z,oZ),dZ.addRevAtEpoch(Z,RZ),dZ.addBstar(Z,EZ),dZ.addMeanMotionDot(Z,z),dZ.addMeanMotionDdot(Z,nZ),dZ.addCovRefFrame(Z,XZ),dZ.addCxX(Z,wZ),dZ.addCyX(Z,DZ),dZ.addCyY(Z,TZ),dZ.addCzX(Z,LZ),dZ.addCzY(Z,Cm),dZ.addCzZ(Z,pm),dZ.addCxDotX(Z,Om),dZ.addCxDotY(Z,Xm),dZ.addCxDotZ(Z,wm),dZ.addCxDotXDot(Z,Lm),dZ.addCyDotX(Z,Zh),dZ.addCyDotY(Z,mh),dZ.addCyDotZ(Z,vm),dZ.addCyDotXDot(Z,Tm),dZ.addCyDotYDot(Z,Gm),dZ.addCzDotX(Z,ym),dZ.addCzDotY(Z,Em),dZ.addCzDotZ(Z,g),dZ.addCzDotXDot(Z,s),dZ.addCzDotYDot(Z,N),dZ.addCzDotZDot(Z,c),dZ.addUserDefinedBip0044Type(Z,x),dZ.addUserDefinedObjectDesignator(Z,$),dZ.addUserDefinedEarthModel(Z,L),dZ.addUserDefinedEpochTimestamp(Z,IZ),dZ.addUserDefinedMicroseconds(Z,uZ),dZ.endOMM(Z)}unpack(){return new Ud(this.CCSDS_OMM_VERS(),this.CREATION_DATE(),this.ORIGINATOR(),this.OBJECT_NAME(),this.OBJECT_ID(),this.CENTER_NAME(),this.REF_FRAME(),this.REF_FRAME_EPOCH(),this.TIME_SYSTEM(),this.MEAN_ELEMENT_THEORY(),this.COMMENT(),this.EPOCH(),this.SEMI_MAJOR_AXIS(),this.MEAN_MOTION(),this.ECCENTRICITY(),this.INCLINATION(),this.RA_OF_ASC_NODE(),this.ARG_OF_PERICENTER(),this.MEAN_ANOMALY(),this.GM(),this.MASS(),this.SOLAR_RAD_AREA(),this.SOLAR_RAD_COEFF(),this.DRAG_AREA(),this.DRAG_COEFF(),this.EPHEMERIS_TYPE(),this.CLASSIFICATION_TYPE(),this.NORAD_CAT_ID(),this.ELEMENT_SET_NO(),this.REV_AT_EPOCH(),this.BSTAR(),this.MEAN_MOTION_DOT(),this.MEAN_MOTION_DDOT(),this.COV_REF_FRAME(),this.CX_X(),this.CY_X(),this.CY_Y(),this.CZ_X(),this.CZ_Y(),this.CZ_Z(),this.CX_DOT_X(),this.CX_DOT_Y(),this.CX_DOT_Z(),this.CX_DOT_X_DOT(),this.CY_DOT_X(),this.CY_DOT_Y(),this.CY_DOT_Z(),this.CY_DOT_X_DOT(),this.CY_DOT_Y_DOT(),this.CZ_DOT_X(),this.CZ_DOT_Y(),this.CZ_DOT_Z(),this.CZ_DOT_X_DOT(),this.CZ_DOT_Y_DOT(),this.CZ_DOT_Z_DOT(),this.USER_DEFINED_BIP_0044_TYPE(),this.USER_DEFINED_OBJECT_DESIGNATOR(),this.USER_DEFINED_EARTH_MODEL(),this.USER_DEFINED_EPOCH_TIMESTAMP(),this.USER_DEFINED_MICROSECONDS())}unpackTo(Z){Z.CCSDS_OMM_VERS=this.CCSDS_OMM_VERS(),Z.CREATION_DATE=this.CREATION_DATE(),Z.ORIGINATOR=this.ORIGINATOR(),Z.OBJECT_NAME=this.OBJECT_NAME(),Z.OBJECT_ID=this.OBJECT_ID(),Z.CENTER_NAME=this.CENTER_NAME(),Z.REF_FRAME=this.REF_FRAME(),Z.REF_FRAME_EPOCH=this.REF_FRAME_EPOCH(),Z.TIME_SYSTEM=this.TIME_SYSTEM(),Z.MEAN_ELEMENT_THEORY=this.MEAN_ELEMENT_THEORY(),Z.COMMENT=this.COMMENT(),Z.EPOCH=this.EPOCH(),Z.SEMI_MAJOR_AXIS=this.SEMI_MAJOR_AXIS(),Z.MEAN_MOTION=this.MEAN_MOTION(),Z.ECCENTRICITY=this.ECCENTRICITY(),Z.INCLINATION=this.INCLINATION(),Z.RA_OF_ASC_NODE=this.RA_OF_ASC_NODE(),Z.ARG_OF_PERICENTER=this.ARG_OF_PERICENTER(),Z.MEAN_ANOMALY=this.MEAN_ANOMALY(),Z.GM=this.GM(),Z.MASS=this.MASS(),Z.SOLAR_RAD_AREA=this.SOLAR_RAD_AREA(),Z.SOLAR_RAD_COEFF=this.SOLAR_RAD_COEFF(),Z.DRAG_AREA=this.DRAG_AREA(),Z.DRAG_COEFF=this.DRAG_COEFF(),Z.EPHEMERIS_TYPE=this.EPHEMERIS_TYPE(),Z.CLASSIFICATION_TYPE=this.CLASSIFICATION_TYPE(),Z.NORAD_CAT_ID=this.NORAD_CAT_ID(),Z.ELEMENT_SET_NO=this.ELEMENT_SET_NO(),Z.REV_AT_EPOCH=this.REV_AT_EPOCH(),Z.BSTAR=this.BSTAR(),Z.MEAN_MOTION_DOT=this.MEAN_MOTION_DOT(),Z.MEAN_MOTION_DDOT=this.MEAN_MOTION_DDOT(),Z.COV_REF_FRAME=this.COV_REF_FRAME(),Z.CX_X=this.CX_X(),Z.CY_X=this.CY_X(),Z.CY_Y=this.CY_Y(),Z.CZ_X=this.CZ_X(),Z.CZ_Y=this.CZ_Y(),Z.CZ_Z=this.CZ_Z(),Z.CX_DOT_X=this.CX_DOT_X(),Z.CX_DOT_Y=this.CX_DOT_Y(),Z.CX_DOT_Z=this.CX_DOT_Z(),Z.CX_DOT_X_DOT=this.CX_DOT_X_DOT(),Z.CY_DOT_X=this.CY_DOT_X(),Z.CY_DOT_Y=this.CY_DOT_Y(),Z.CY_DOT_Z=this.CY_DOT_Z(),Z.CY_DOT_X_DOT=this.CY_DOT_X_DOT(),Z.CY_DOT_Y_DOT=this.CY_DOT_Y_DOT(),Z.CZ_DOT_X=this.CZ_DOT_X(),Z.CZ_DOT_Y=this.CZ_DOT_Y(),Z.CZ_DOT_Z=this.CZ_DOT_Z(),Z.CZ_DOT_X_DOT=this.CZ_DOT_X_DOT(),Z.CZ_DOT_Y_DOT=this.CZ_DOT_Y_DOT(),Z.CZ_DOT_Z_DOT=this.CZ_DOT_Z_DOT(),Z.USER_DEFINED_BIP_0044_TYPE=this.USER_DEFINED_BIP_0044_TYPE(),Z.USER_DEFINED_OBJECT_DESIGNATOR=this.USER_DEFINED_OBJECT_DESIGNATOR(),Z.USER_DEFINED_EARTH_MODEL=this.USER_DEFINED_EARTH_MODEL(),Z.USER_DEFINED_EPOCH_TIMESTAMP=this.USER_DEFINED_EPOCH_TIMESTAMP(),Z.USER_DEFINED_MICROSECONDS=this.USER_DEFINED_MICROSECONDS()}},Ud=class{constructor(Z=0,m=null,h=null,n=null,i=null,A=null,t=9,W=null,e=11,G=0,F=null,d=null,J=0,k=0,r=0,Q=0,p=0,T=0,I=0,f=0,b=0,O=0,v=0,hZ=0,K=0,tZ=1,NZ=null,Y=0,ZZ=0,oZ=0,RZ=0,EZ=0,z=0,nZ=0,XZ=0,wZ=0,DZ=0,TZ=0,LZ=0,Cm=0,pm=0,Om=0,Xm=0,wm=0,Lm=0,Zh=0,mh=0,vm=0,Tm=0,Gm=0,ym=0,Em=0,g=0,s=0,N=0,c=0,x=null,$=null,L=0,IZ=0){this.CCSDS_OMM_VERS=Z,this.CREATION_DATE=m,this.ORIGINATOR=h,this.OBJECT_NAME=n,this.OBJECT_ID=i,this.CENTER_NAME=A,this.REF_FRAME=t,this.REF_FRAME_EPOCH=W,this.TIME_SYSTEM=e,this.MEAN_ELEMENT_THEORY=G,this.COMMENT=F,this.EPOCH=d,this.SEMI_MAJOR_AXIS=J,this.MEAN_MOTION=k,this.ECCENTRICITY=r,this.INCLINATION=Q,this.RA_OF_ASC_NODE=p,this.ARG_OF_PERICENTER=T,this.MEAN_ANOMALY=I,this.GM=f,this.MASS=b,this.SOLAR_RAD_AREA=O,this.SOLAR_RAD_COEFF=v,this.DRAG_AREA=hZ,this.DRAG_COEFF=K,this.EPHEMERIS_TYPE=tZ,this.CLASSIFICATION_TYPE=NZ,this.NORAD_CAT_ID=Y,this.ELEMENT_SET_NO=ZZ,this.REV_AT_EPOCH=oZ,this.BSTAR=RZ,this.MEAN_MOTION_DOT=EZ,this.MEAN_MOTION_DDOT=z,this.COV_REF_FRAME=nZ,this.CX_X=XZ,this.CY_X=wZ,this.CY_Y=DZ,this.CZ_X=TZ,this.CZ_Y=LZ,this.CZ_Z=Cm,this.CX_DOT_X=pm,this.CX_DOT_Y=Om,this.CX_DOT_Z=Xm,this.CX_DOT_X_DOT=wm,this.CY_DOT_X=Lm,this.CY_DOT_Y=Zh,this.CY_DOT_Z=mh,this.CY_DOT_X_DOT=vm,this.CY_DOT_Y_DOT=Tm,this.CZ_DOT_X=Gm,this.CZ_DOT_Y=ym,this.CZ_DOT_Z=Em,this.CZ_DOT_X_DOT=g,this.CZ_DOT_Y_DOT=s,this.CZ_DOT_Z_DOT=N,this.USER_DEFINED_BIP_0044_TYPE=c,this.USER_DEFINED_OBJECT_DESIGNATOR=x,this.USER_DEFINED_EARTH_MODEL=$,this.USER_DEFINED_EPOCH_TIMESTAMP=L,this.USER_DEFINED_MICROSECONDS=IZ}pack(Z){let m=this.CREATION_DATE!==null?Z.createString(this.CREATION_DATE):0,h=this.ORIGINATOR!==null?Z.createString(this.ORIGINATOR):0,n=this.OBJECT_NAME!==null?Z.createString(this.OBJECT_NAME):0,i=this.OBJECT_ID!==null?Z.createString(this.OBJECT_ID):0,A=this.CENTER_NAME!==null?Z.createString(this.CENTER_NAME):0,t=this.REF_FRAME_EPOCH!==null?Z.createString(this.REF_FRAME_EPOCH):0,W=this.COMMENT!==null?Z.createString(this.COMMENT):0,e=this.EPOCH!==null?Z.createString(this.EPOCH):0,G=this.CLASSIFICATION_TYPE!==null?Z.createString(this.CLASSIFICATION_TYPE):0,F=this.USER_DEFINED_OBJECT_DESIGNATOR!==null?Z.createString(this.USER_DEFINED_OBJECT_DESIGNATOR):0,d=this.USER_DEFINED_EARTH_MODEL!==null?Z.createString(this.USER_DEFINED_EARTH_MODEL):0;return dZ.createOMM(Z,this.CCSDS_OMM_VERS,m,h,n,i,A,this.REF_FRAME,t,this.TIME_SYSTEM,this.MEAN_ELEMENT_THEORY,W,e,this.SEMI_MAJOR_AXIS,this.MEAN_MOTION,this.ECCENTRICITY,this.INCLINATION,this.RA_OF_ASC_NODE,this.ARG_OF_PERICENTER,this.MEAN_ANOMALY,this.GM,this.MASS,this.SOLAR_RAD_AREA,this.SOLAR_RAD_COEFF,this.DRAG_AREA,this.DRAG_COEFF,this.EPHEMERIS_TYPE,G,this.NORAD_CAT_ID,this.ELEMENT_SET_NO,this.REV_AT_EPOCH,this.BSTAR,this.MEAN_MOTION_DOT,this.MEAN_MOTION_DDOT,this.COV_REF_FRAME,this.CX_X,this.CY_X,this.CY_Y,this.CZ_X,this.CZ_Y,this.CZ_Z,this.CX_DOT_X,this.CX_DOT_Y,this.CX_DOT_Z,this.CX_DOT_X_DOT,this.CY_DOT_X,this.CY_DOT_Y,this.CY_DOT_Z,this.CY_DOT_X_DOT,this.CY_DOT_Y_DOT,this.CZ_DOT_X,this.CZ_DOT_Y,this.CZ_DOT_Z,this.CZ_DOT_X_DOT,this.CZ_DOT_Y_DOT,this.CZ_DOT_Z_DOT,this.USER_DEFINED_BIP_0044_TYPE,F,d,this.USER_DEFINED_EPOCH_TIMESTAMP,this.USER_DEFINED_MICROSECONDS)}},nn=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsOMMCOLLECTION(Z,m){return(m||new nn).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsOMMCOLLECTION(Z,m){return Z.setPosition(Z.position()+Nm),(m||new nn).__init(Z.readInt32(Z.position())+Z.position(),Z)}RECORDS(Z,m){let h=this.bb.__offset(this.bb_pos,4);return h?(m||new dZ).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}recordsLength(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startOMMCOLLECTION(Z){Z.startObject(1)}static addRecords(Z,m){Z.addFieldOffset(0,m,0)}static createRecordsVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startRecordsVector(Z,m){Z.startVector(4,m,4)}static endOMMCOLLECTION(Z){return Z.endObject()}static createOMMCOLLECTION(Z,m){return nn.startOMMCOLLECTION(Z),nn.addRecords(Z,m),nn.endOMMCOLLECTION(Z)}unpack(){return new Jd(this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength()))}unpackTo(Z){Z.RECORDS=this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength())}},Jd=class{constructor(Z=[]){this.RECORDS=Z}pack(Z){let m=nn.createRecordsVector(Z,Z.createObjectOffsetList(this.RECORDS));return nn.createOMMCOLLECTION(Z,m)}},XJ={};Vn(XJ,{CDM:()=>PZ,CDMCOLLECTION:()=>An,CDMCOLLECTIONT:()=>Md,CDMObject:()=>YZ,CDMObjectT:()=>pd,CDMT:()=>Td,covarianceMethod:()=>Qd,maneuverableType:()=>Cd,objectCenteredReferenceFrame:()=>jd,objectNumber:()=>Bd,objectType:()=>gd,referenceFrame:()=>Id,screeningVolumeShape:()=>cd});var Qd=(Z=>(Z[Z.CALCULATED=0]="CALCULATED",Z[Z.DEFAULT=1]="DEFAULT",Z))(Qd||{}),Cd=(Z=>(Z[Z.YES=0]="YES",Z[Z.NO=1]="NO",Z[Z.NA=2]="NA",Z))(Cd||{}),Bd=(Z=>(Z[Z.OBJECT1=0]="OBJECT1",Z[Z.OBJECT2=1]="OBJECT2",Z))(Bd||{}),gd=(Z=>(Z[Z.PAYLOAD=0]="PAYLOAD",Z[Z.ROCKET_BODY=1]="ROCKET_BODY",Z[Z.DEBRIS=2]="DEBRIS",Z[Z.UNKNOWN=3]="UNKNOWN",Z[Z.OTHER=4]="OTHER",Z))(gd||{}),Id=(Z=>(Z[Z.EME2000=0]="EME2000",Z[Z.GCRF=1]="GCRF",Z[Z.ITRF=2]="ITRF",Z))(Id||{}),YZ=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsCDMObject(Z,m){return(m||new YZ).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsCDMObject(Z,m){return Z.setPosition(Z.position()+Nm),(m||new YZ).__init(Z.readInt32(Z.position())+Z.position(),Z)}COMMENT(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT(){let Z=this.bb.__offset(this.bb_pos,6);return Z?this.bb.readInt8(this.bb_pos+Z):0}OBJECT_DESIGNATOR(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}CATALOG_NAME(Z){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_NAME(Z){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.__string(this.bb_pos+m,Z):null}INTERNATIONAL_DESIGNATOR(Z){let m=this.bb.__offset(this.bb_pos,14);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_TYPE(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readInt8(this.bb_pos+Z):0}OPERATOR_CONTACT_POSITION(Z){let m=this.bb.__offset(this.bb_pos,18);return m?this.bb.__string(this.bb_pos+m,Z):null}OPERATOR_ORGANIZATION(Z){let m=this.bb.__offset(this.bb_pos,20);return m?this.bb.__string(this.bb_pos+m,Z):null}EPHEMERIS_NAME(Z){let m=this.bb.__offset(this.bb_pos,22);return m?this.bb.__string(this.bb_pos+m,Z):null}COVARIANCE_METHOD(){let Z=this.bb.__offset(this.bb_pos,24);return Z?this.bb.readInt8(this.bb_pos+Z):0}MANEUVERABLE(){let Z=this.bb.__offset(this.bb_pos,26);return Z?this.bb.readInt8(this.bb_pos+Z):0}ORBIT_CENTER(Z){let m=this.bb.__offset(this.bb_pos,28);return m?this.bb.__string(this.bb_pos+m,Z):null}REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,30);return Z?this.bb.readInt8(this.bb_pos+Z):0}GRAVITY_MODEL(Z){let m=this.bb.__offset(this.bb_pos,32);return m?this.bb.__string(this.bb_pos+m,Z):null}ATMOSPHERIC_MODEL(Z){let m=this.bb.__offset(this.bb_pos,34);return m?this.bb.__string(this.bb_pos+m,Z):null}N_BODY_PERTURBATIONS(Z){let m=this.bb.__offset(this.bb_pos,36);return m?this.bb.__string(this.bb_pos+m,Z):null}SOLAR_RAD_PRESSURE(){let Z=this.bb.__offset(this.bb_pos,38);return Z?!!this.bb.readInt8(this.bb_pos+Z):!1}EARTH_TIDES(){let Z=this.bb.__offset(this.bb_pos,40);return Z?!!this.bb.readInt8(this.bb_pos+Z):!1}INTRACK_THRUST(){let Z=this.bb.__offset(this.bb_pos,42);return Z?!!this.bb.readInt8(this.bb_pos+Z):!1}TIME_LASTOB_START(Z){let m=this.bb.__offset(this.bb_pos,44);return m?this.bb.__string(this.bb_pos+m,Z):null}TIME_LASTOB_END(Z){let m=this.bb.__offset(this.bb_pos,46);return m?this.bb.__string(this.bb_pos+m,Z):null}RECOMMENDED_OD_SPAN(){let Z=this.bb.__offset(this.bb_pos,48);return Z?this.bb.readFloat64(this.bb_pos+Z):0}ACTUAL_OD_SPAN(){let Z=this.bb.__offset(this.bb_pos,50);return Z?this.bb.readFloat64(this.bb_pos+Z):0}OBS_AVAILABLE(){let Z=this.bb.__offset(this.bb_pos,52);return Z?this.bb.readUint32(this.bb_pos+Z):0}OBS_USED(){let Z=this.bb.__offset(this.bb_pos,54);return Z?this.bb.readUint32(this.bb_pos+Z):0}TRACKS_AVAILABLE(){let Z=this.bb.__offset(this.bb_pos,56);return Z?this.bb.readUint32(this.bb_pos+Z):0}TRACKS_USED(){let Z=this.bb.__offset(this.bb_pos,58);return Z?this.bb.readUint32(this.bb_pos+Z):0}RESIDUALS_ACCEPTED(){let Z=this.bb.__offset(this.bb_pos,60);return Z?this.bb.readFloat64(this.bb_pos+Z):0}WEIGHTED_RMS(){let Z=this.bb.__offset(this.bb_pos,62);return Z?this.bb.readFloat64(this.bb_pos+Z):0}AREA_PC(){let Z=this.bb.__offset(this.bb_pos,64);return Z?this.bb.readFloat64(this.bb_pos+Z):0}AREA_DRG(){let Z=this.bb.__offset(this.bb_pos,66);return Z?this.bb.readFloat64(this.bb_pos+Z):0}AREA_SRP(){let Z=this.bb.__offset(this.bb_pos,68);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MASS(){let Z=this.bb.__offset(this.bb_pos,70);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CR_AREA_OVER_MASS(){let Z=this.bb.__offset(this.bb_pos,72);return Z?this.bb.readFloat64(this.bb_pos+Z):0}THRUST_ACCELERATION(){let Z=this.bb.__offset(this.bb_pos,74);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SEDR(){let Z=this.bb.__offset(this.bb_pos,76);return Z?this.bb.readFloat64(this.bb_pos+Z):0}X(){let Z=this.bb.__offset(this.bb_pos,78);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Y(){let Z=this.bb.__offset(this.bb_pos,80);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Z(){let Z=this.bb.__offset(this.bb_pos,82);return Z?this.bb.readFloat64(this.bb_pos+Z):0}X_DOT(){let Z=this.bb.__offset(this.bb_pos,84);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Y_DOT(){let Z=this.bb.__offset(this.bb_pos,86);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Z_DOT(){let Z=this.bb.__offset(this.bb_pos,88);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CR_R(){let Z=this.bb.__offset(this.bb_pos,90);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CT_R(){let Z=this.bb.__offset(this.bb_pos,92);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CT_T(){let Z=this.bb.__offset(this.bb_pos,94);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CN_R(){let Z=this.bb.__offset(this.bb_pos,96);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CN_T(){let Z=this.bb.__offset(this.bb_pos,98);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CN_N(){let Z=this.bb.__offset(this.bb_pos,100);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CRDOT_R(){let Z=this.bb.__offset(this.bb_pos,102);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CRDOT_T(){let Z=this.bb.__offset(this.bb_pos,104);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CRDOT_N(){let Z=this.bb.__offset(this.bb_pos,106);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CRDOT_RDOT(){let Z=this.bb.__offset(this.bb_pos,108);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTDOT_R(){let Z=this.bb.__offset(this.bb_pos,110);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTDOT_T(){let Z=this.bb.__offset(this.bb_pos,112);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTDOT_N(){let Z=this.bb.__offset(this.bb_pos,114);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTDOT_RDOT(){let Z=this.bb.__offset(this.bb_pos,116);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTDOT_TDOT(){let Z=this.bb.__offset(this.bb_pos,118);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CNDOT_R(){let Z=this.bb.__offset(this.bb_pos,120);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CNDOT_T(){let Z=this.bb.__offset(this.bb_pos,122);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CNDOT_N(){let Z=this.bb.__offset(this.bb_pos,124);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CNDOT_RDOT(){let Z=this.bb.__offset(this.bb_pos,126);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CNDOT_TDOT(){let Z=this.bb.__offset(this.bb_pos,128);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CNDOT_NDOT(){let Z=this.bb.__offset(this.bb_pos,130);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CDRG_R(){let Z=this.bb.__offset(this.bb_pos,132);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CDRG_T(){let Z=this.bb.__offset(this.bb_pos,134);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CDRG_N(){let Z=this.bb.__offset(this.bb_pos,136);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CDRG_RDOT(){let Z=this.bb.__offset(this.bb_pos,138);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CDRG_TDOT(){let Z=this.bb.__offset(this.bb_pos,140);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CDRG_NDOT(){let Z=this.bb.__offset(this.bb_pos,142);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CDRG_DRG(){let Z=this.bb.__offset(this.bb_pos,144);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CSRP_R(){let Z=this.bb.__offset(this.bb_pos,146);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CSRP_T(){let Z=this.bb.__offset(this.bb_pos,148);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CSRP_N(){let Z=this.bb.__offset(this.bb_pos,150);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CSRP_RDOT(){let Z=this.bb.__offset(this.bb_pos,152);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CSRP_TDOT(){let Z=this.bb.__offset(this.bb_pos,154);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CSRP_NDOT(){let Z=this.bb.__offset(this.bb_pos,156);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CSRP_DRG(){let Z=this.bb.__offset(this.bb_pos,158);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CSRP_SRP(){let Z=this.bb.__offset(this.bb_pos,160);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_R(){let Z=this.bb.__offset(this.bb_pos,162);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_T(){let Z=this.bb.__offset(this.bb_pos,164);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_N(){let Z=this.bb.__offset(this.bb_pos,166);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_RDOT(){let Z=this.bb.__offset(this.bb_pos,168);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_TDOT(){let Z=this.bb.__offset(this.bb_pos,170);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_NDOT(){let Z=this.bb.__offset(this.bb_pos,172);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_DRG(){let Z=this.bb.__offset(this.bb_pos,174);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_SRP(){let Z=this.bb.__offset(this.bb_pos,176);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CTHR_THR(){let Z=this.bb.__offset(this.bb_pos,178);return Z?this.bb.readFloat64(this.bb_pos+Z):0}static startCDMObject(Z){Z.startObject(88)}static addComment(Z,m){Z.addFieldOffset(0,m,0)}static addObject(Z,m){Z.addFieldInt8(1,m,0)}static addObjectDesignator(Z,m){Z.addFieldOffset(2,m,0)}static addCatalogName(Z,m){Z.addFieldOffset(3,m,0)}static addObjectName(Z,m){Z.addFieldOffset(4,m,0)}static addInternationalDesignator(Z,m){Z.addFieldOffset(5,m,0)}static addObjectType(Z,m){Z.addFieldInt8(6,m,0)}static addOperatorContactPosition(Z,m){Z.addFieldOffset(7,m,0)}static addOperatorOrganization(Z,m){Z.addFieldOffset(8,m,0)}static addEphemerisName(Z,m){Z.addFieldOffset(9,m,0)}static addCovarianceMethod(Z,m){Z.addFieldInt8(10,m,0)}static addManeuverable(Z,m){Z.addFieldInt8(11,m,0)}static addOrbitCenter(Z,m){Z.addFieldOffset(12,m,0)}static addRefFrame(Z,m){Z.addFieldInt8(13,m,0)}static addGravityModel(Z,m){Z.addFieldOffset(14,m,0)}static addAtmosphericModel(Z,m){Z.addFieldOffset(15,m,0)}static addNBodyPerturbations(Z,m){Z.addFieldOffset(16,m,0)}static addSolarRadPressure(Z,m){Z.addFieldInt8(17,+m,0)}static addEarthTides(Z,m){Z.addFieldInt8(18,+m,0)}static addIntrackThrust(Z,m){Z.addFieldInt8(19,+m,0)}static addTimeLastobStart(Z,m){Z.addFieldOffset(20,m,0)}static addTimeLastobEnd(Z,m){Z.addFieldOffset(21,m,0)}static addRecommendedOdSpan(Z,m){Z.addFieldFloat64(22,m,0)}static addActualOdSpan(Z,m){Z.addFieldFloat64(23,m,0)}static addObsAvailable(Z,m){Z.addFieldInt32(24,m,0)}static addObsUsed(Z,m){Z.addFieldInt32(25,m,0)}static addTracksAvailable(Z,m){Z.addFieldInt32(26,m,0)}static addTracksUsed(Z,m){Z.addFieldInt32(27,m,0)}static addResidualsAccepted(Z,m){Z.addFieldFloat64(28,m,0)}static addWeightedRms(Z,m){Z.addFieldFloat64(29,m,0)}static addAreaPc(Z,m){Z.addFieldFloat64(30,m,0)}static addAreaDrg(Z,m){Z.addFieldFloat64(31,m,0)}static addAreaSrp(Z,m){Z.addFieldFloat64(32,m,0)}static addMass(Z,m){Z.addFieldFloat64(33,m,0)}static addCrAreaOverMass(Z,m){Z.addFieldFloat64(34,m,0)}static addThrustAcceleration(Z,m){Z.addFieldFloat64(35,m,0)}static addSedr(Z,m){Z.addFieldFloat64(36,m,0)}static addX(Z,m){Z.addFieldFloat64(37,m,0)}static addY(Z,m){Z.addFieldFloat64(38,m,0)}static addZ(Z,m){Z.addFieldFloat64(39,m,0)}static addXDot(Z,m){Z.addFieldFloat64(40,m,0)}static addYDot(Z,m){Z.addFieldFloat64(41,m,0)}static addZDot(Z,m){Z.addFieldFloat64(42,m,0)}static addCrR(Z,m){Z.addFieldFloat64(43,m,0)}static addCtR(Z,m){Z.addFieldFloat64(44,m,0)}static addCtT(Z,m){Z.addFieldFloat64(45,m,0)}static addCnR(Z,m){Z.addFieldFloat64(46,m,0)}static addCnT(Z,m){Z.addFieldFloat64(47,m,0)}static addCnN(Z,m){Z.addFieldFloat64(48,m,0)}static addCrdotR(Z,m){Z.addFieldFloat64(49,m,0)}static addCrdotT(Z,m){Z.addFieldFloat64(50,m,0)}static addCrdotN(Z,m){Z.addFieldFloat64(51,m,0)}static addCrdotRdot(Z,m){Z.addFieldFloat64(52,m,0)}static addCtdotR(Z,m){Z.addFieldFloat64(53,m,0)}static addCtdotT(Z,m){Z.addFieldFloat64(54,m,0)}static addCtdotN(Z,m){Z.addFieldFloat64(55,m,0)}static addCtdotRdot(Z,m){Z.addFieldFloat64(56,m,0)}static addCtdotTdot(Z,m){Z.addFieldFloat64(57,m,0)}static addCndotR(Z,m){Z.addFieldFloat64(58,m,0)}static addCndotT(Z,m){Z.addFieldFloat64(59,m,0)}static addCndotN(Z,m){Z.addFieldFloat64(60,m,0)}static addCndotRdot(Z,m){Z.addFieldFloat64(61,m,0)}static addCndotTdot(Z,m){Z.addFieldFloat64(62,m,0)}static addCndotNdot(Z,m){Z.addFieldFloat64(63,m,0)}static addCdrgR(Z,m){Z.addFieldFloat64(64,m,0)}static addCdrgT(Z,m){Z.addFieldFloat64(65,m,0)}static addCdrgN(Z,m){Z.addFieldFloat64(66,m,0)}static addCdrgRdot(Z,m){Z.addFieldFloat64(67,m,0)}static addCdrgTdot(Z,m){Z.addFieldFloat64(68,m,0)}static addCdrgNdot(Z,m){Z.addFieldFloat64(69,m,0)}static addCdrgDrg(Z,m){Z.addFieldFloat64(70,m,0)}static addCsrpR(Z,m){Z.addFieldFloat64(71,m,0)}static addCsrpT(Z,m){Z.addFieldFloat64(72,m,0)}static addCsrpN(Z,m){Z.addFieldFloat64(73,m,0)}static addCsrpRdot(Z,m){Z.addFieldFloat64(74,m,0)}static addCsrpTdot(Z,m){Z.addFieldFloat64(75,m,0)}static addCsrpNdot(Z,m){Z.addFieldFloat64(76,m,0)}static addCsrpDrg(Z,m){Z.addFieldFloat64(77,m,0)}static addCsrpSrp(Z,m){Z.addFieldFloat64(78,m,0)}static addCthrR(Z,m){Z.addFieldFloat64(79,m,0)}static addCthrT(Z,m){Z.addFieldFloat64(80,m,0)}static addCthrN(Z,m){Z.addFieldFloat64(81,m,0)}static addCthrRdot(Z,m){Z.addFieldFloat64(82,m,0)}static addCthrTdot(Z,m){Z.addFieldFloat64(83,m,0)}static addCthrNdot(Z,m){Z.addFieldFloat64(84,m,0)}static addCthrDrg(Z,m){Z.addFieldFloat64(85,m,0)}static addCthrSrp(Z,m){Z.addFieldFloat64(86,m,0)}static addCthrThr(Z,m){Z.addFieldFloat64(87,m,0)}static endCDMObject(Z){return Z.endObject()}static createCDMObject(Z,m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q,p,T,I,f,b,O,v,hZ,K,tZ,NZ,Y,ZZ,oZ,RZ,EZ,z,nZ,XZ,wZ,DZ,TZ,LZ,Cm,pm,Om,Xm,wm,Lm,Zh,mh,vm,Tm,Gm,ym,Em,g,s,N,c,x,$,L,IZ,uZ,KZ,fZ,HZ,eY,wY,yY,Ai,ai,pZ,jm,rh,ti,Tn,Wi,ei,Mn,Sn,oi,Rn,oY,Qh,Dn,VY,Ch,Vi,li,Ri,Ua){return YZ.startCDMObject(Z),YZ.addComment(Z,m),YZ.addObject(Z,h),YZ.addObjectDesignator(Z,n),YZ.addCatalogName(Z,i),YZ.addObjectName(Z,A),YZ.addInternationalDesignator(Z,t),YZ.addObjectType(Z,W),YZ.addOperatorContactPosition(Z,e),YZ.addOperatorOrganization(Z,G),YZ.addEphemerisName(Z,F),YZ.addCovarianceMethod(Z,d),YZ.addManeuverable(Z,J),YZ.addOrbitCenter(Z,k),YZ.addRefFrame(Z,r),YZ.addGravityModel(Z,Q),YZ.addAtmosphericModel(Z,p),YZ.addNBodyPerturbations(Z,T),YZ.addSolarRadPressure(Z,I),YZ.addEarthTides(Z,f),YZ.addIntrackThrust(Z,b),YZ.addTimeLastobStart(Z,O),YZ.addTimeLastobEnd(Z,v),YZ.addRecommendedOdSpan(Z,hZ),YZ.addActualOdSpan(Z,K),YZ.addObsAvailable(Z,tZ),YZ.addObsUsed(Z,NZ),YZ.addTracksAvailable(Z,Y),YZ.addTracksUsed(Z,ZZ),YZ.addResidualsAccepted(Z,oZ),YZ.addWeightedRms(Z,RZ),YZ.addAreaPc(Z,EZ),YZ.addAreaDrg(Z,z),YZ.addAreaSrp(Z,nZ),YZ.addMass(Z,XZ),YZ.addCrAreaOverMass(Z,wZ),YZ.addThrustAcceleration(Z,DZ),YZ.addSedr(Z,TZ),YZ.addX(Z,LZ),YZ.addY(Z,Cm),YZ.addZ(Z,pm),YZ.addXDot(Z,Om),YZ.addYDot(Z,Xm),YZ.addZDot(Z,wm),YZ.addCrR(Z,Lm),YZ.addCtR(Z,Zh),YZ.addCtT(Z,mh),YZ.addCnR(Z,vm),YZ.addCnT(Z,Tm),YZ.addCnN(Z,Gm),YZ.addCrdotR(Z,ym),YZ.addCrdotT(Z,Em),YZ.addCrdotN(Z,g),YZ.addCrdotRdot(Z,s),YZ.addCtdotR(Z,N),YZ.addCtdotT(Z,c),YZ.addCtdotN(Z,x),YZ.addCtdotRdot(Z,$),YZ.addCtdotTdot(Z,L),YZ.addCndotR(Z,IZ),YZ.addCndotT(Z,uZ),YZ.addCndotN(Z,KZ),YZ.addCndotRdot(Z,fZ),YZ.addCndotTdot(Z,HZ),YZ.addCndotNdot(Z,eY),YZ.addCdrgR(Z,wY),YZ.addCdrgT(Z,yY),YZ.addCdrgN(Z,Ai),YZ.addCdrgRdot(Z,ai),YZ.addCdrgTdot(Z,pZ),YZ.addCdrgNdot(Z,jm),YZ.addCdrgDrg(Z,rh),YZ.addCsrpR(Z,ti),YZ.addCsrpT(Z,Tn),YZ.addCsrpN(Z,Wi),YZ.addCsrpRdot(Z,ei),YZ.addCsrpTdot(Z,Mn),YZ.addCsrpNdot(Z,Sn),YZ.addCsrpDrg(Z,oi),YZ.addCsrpSrp(Z,Rn),YZ.addCthrR(Z,oY),YZ.addCthrT(Z,Qh),YZ.addCthrN(Z,Dn),YZ.addCthrRdot(Z,VY),YZ.addCthrTdot(Z,Ch),YZ.addCthrNdot(Z,Vi),YZ.addCthrDrg(Z,li),YZ.addCthrSrp(Z,Ri),YZ.addCthrThr(Z,Ua),YZ.endCDMObject(Z)}unpack(){return new pd(this.COMMENT(),this.OBJECT(),this.OBJECT_DESIGNATOR(),this.CATALOG_NAME(),this.OBJECT_NAME(),this.INTERNATIONAL_DESIGNATOR(),this.OBJECT_TYPE(),this.OPERATOR_CONTACT_POSITION(),this.OPERATOR_ORGANIZATION(),this.EPHEMERIS_NAME(),this.COVARIANCE_METHOD(),this.MANEUVERABLE(),this.ORBIT_CENTER(),this.REF_FRAME(),this.GRAVITY_MODEL(),this.ATMOSPHERIC_MODEL(),this.N_BODY_PERTURBATIONS(),this.SOLAR_RAD_PRESSURE(),this.EARTH_TIDES(),this.INTRACK_THRUST(),this.TIME_LASTOB_START(),this.TIME_LASTOB_END(),this.RECOMMENDED_OD_SPAN(),this.ACTUAL_OD_SPAN(),this.OBS_AVAILABLE(),this.OBS_USED(),this.TRACKS_AVAILABLE(),this.TRACKS_USED(),this.RESIDUALS_ACCEPTED(),this.WEIGHTED_RMS(),this.AREA_PC(),this.AREA_DRG(),this.AREA_SRP(),this.MASS(),this.CR_AREA_OVER_MASS(),this.THRUST_ACCELERATION(),this.SEDR(),this.X(),this.Y(),this.Z(),this.X_DOT(),this.Y_DOT(),this.Z_DOT(),this.CR_R(),this.CT_R(),this.CT_T(),this.CN_R(),this.CN_T(),this.CN_N(),this.CRDOT_R(),this.CRDOT_T(),this.CRDOT_N(),this.CRDOT_RDOT(),this.CTDOT_R(),this.CTDOT_T(),this.CTDOT_N(),this.CTDOT_RDOT(),this.CTDOT_TDOT(),this.CNDOT_R(),this.CNDOT_T(),this.CNDOT_N(),this.CNDOT_RDOT(),this.CNDOT_TDOT(),this.CNDOT_NDOT(),this.CDRG_R(),this.CDRG_T(),this.CDRG_N(),this.CDRG_RDOT(),this.CDRG_TDOT(),this.CDRG_NDOT(),this.CDRG_DRG(),this.CSRP_R(),this.CSRP_T(),this.CSRP_N(),this.CSRP_RDOT(),this.CSRP_TDOT(),this.CSRP_NDOT(),this.CSRP_DRG(),this.CSRP_SRP(),this.CTHR_R(),this.CTHR_T(),this.CTHR_N(),this.CTHR_RDOT(),this.CTHR_TDOT(),this.CTHR_NDOT(),this.CTHR_DRG(),this.CTHR_SRP(),this.CTHR_THR())}unpackTo(Z){Z.COMMENT=this.COMMENT(),Z.OBJECT=this.OBJECT(),Z.OBJECT_DESIGNATOR=this.OBJECT_DESIGNATOR(),Z.CATALOG_NAME=this.CATALOG_NAME(),Z.OBJECT_NAME=this.OBJECT_NAME(),Z.INTERNATIONAL_DESIGNATOR=this.INTERNATIONAL_DESIGNATOR(),Z.OBJECT_TYPE=this.OBJECT_TYPE(),Z.OPERATOR_CONTACT_POSITION=this.OPERATOR_CONTACT_POSITION(),Z.OPERATOR_ORGANIZATION=this.OPERATOR_ORGANIZATION(),Z.EPHEMERIS_NAME=this.EPHEMERIS_NAME(),Z.COVARIANCE_METHOD=this.COVARIANCE_METHOD(),Z.MANEUVERABLE=this.MANEUVERABLE(),Z.ORBIT_CENTER=this.ORBIT_CENTER(),Z.REF_FRAME=this.REF_FRAME(),Z.GRAVITY_MODEL=this.GRAVITY_MODEL(),Z.ATMOSPHERIC_MODEL=this.ATMOSPHERIC_MODEL(),Z.N_BODY_PERTURBATIONS=this.N_BODY_PERTURBATIONS(),Z.SOLAR_RAD_PRESSURE=this.SOLAR_RAD_PRESSURE(),Z.EARTH_TIDES=this.EARTH_TIDES(),Z.INTRACK_THRUST=this.INTRACK_THRUST(),Z.TIME_LASTOB_START=this.TIME_LASTOB_START(),Z.TIME_LASTOB_END=this.TIME_LASTOB_END(),Z.RECOMMENDED_OD_SPAN=this.RECOMMENDED_OD_SPAN(),Z.ACTUAL_OD_SPAN=this.ACTUAL_OD_SPAN(),Z.OBS_AVAILABLE=this.OBS_AVAILABLE(),Z.OBS_USED=this.OBS_USED(),Z.TRACKS_AVAILABLE=this.TRACKS_AVAILABLE(),Z.TRACKS_USED=this.TRACKS_USED(),Z.RESIDUALS_ACCEPTED=this.RESIDUALS_ACCEPTED(),Z.WEIGHTED_RMS=this.WEIGHTED_RMS(),Z.AREA_PC=this.AREA_PC(),Z.AREA_DRG=this.AREA_DRG(),Z.AREA_SRP=this.AREA_SRP(),Z.MASS=this.MASS(),Z.CR_AREA_OVER_MASS=this.CR_AREA_OVER_MASS(),Z.THRUST_ACCELERATION=this.THRUST_ACCELERATION(),Z.SEDR=this.SEDR(),Z.X=this.X(),Z.Y=this.Y(),Z.Z=this.Z(),Z.X_DOT=this.X_DOT(),Z.Y_DOT=this.Y_DOT(),Z.Z_DOT=this.Z_DOT(),Z.CR_R=this.CR_R(),Z.CT_R=this.CT_R(),Z.CT_T=this.CT_T(),Z.CN_R=this.CN_R(),Z.CN_T=this.CN_T(),Z.CN_N=this.CN_N(),Z.CRDOT_R=this.CRDOT_R(),Z.CRDOT_T=this.CRDOT_T(),Z.CRDOT_N=this.CRDOT_N(),Z.CRDOT_RDOT=this.CRDOT_RDOT(),Z.CTDOT_R=this.CTDOT_R(),Z.CTDOT_T=this.CTDOT_T(),Z.CTDOT_N=this.CTDOT_N(),Z.CTDOT_RDOT=this.CTDOT_RDOT(),Z.CTDOT_TDOT=this.CTDOT_TDOT(),Z.CNDOT_R=this.CNDOT_R(),Z.CNDOT_T=this.CNDOT_T(),Z.CNDOT_N=this.CNDOT_N(),Z.CNDOT_RDOT=this.CNDOT_RDOT(),Z.CNDOT_TDOT=this.CNDOT_TDOT(),Z.CNDOT_NDOT=this.CNDOT_NDOT(),Z.CDRG_R=this.CDRG_R(),Z.CDRG_T=this.CDRG_T(),Z.CDRG_N=this.CDRG_N(),Z.CDRG_RDOT=this.CDRG_RDOT(),Z.CDRG_TDOT=this.CDRG_TDOT(),Z.CDRG_NDOT=this.CDRG_NDOT(),Z.CDRG_DRG=this.CDRG_DRG(),Z.CSRP_R=this.CSRP_R(),Z.CSRP_T=this.CSRP_T(),Z.CSRP_N=this.CSRP_N(),Z.CSRP_RDOT=this.CSRP_RDOT(),Z.CSRP_TDOT=this.CSRP_TDOT(),Z.CSRP_NDOT=this.CSRP_NDOT(),Z.CSRP_DRG=this.CSRP_DRG(),Z.CSRP_SRP=this.CSRP_SRP(),Z.CTHR_R=this.CTHR_R(),Z.CTHR_T=this.CTHR_T(),Z.CTHR_N=this.CTHR_N(),Z.CTHR_RDOT=this.CTHR_RDOT(),Z.CTHR_TDOT=this.CTHR_TDOT(),Z.CTHR_NDOT=this.CTHR_NDOT(),Z.CTHR_DRG=this.CTHR_DRG(),Z.CTHR_SRP=this.CTHR_SRP(),Z.CTHR_THR=this.CTHR_THR()}},pd=class{constructor(Z=null,m=0,h=null,n=null,i=null,A=null,t=0,W=null,e=null,G=null,F=0,d=0,J=null,k=0,r=null,Q=null,p=null,T=!1,I=!1,f=!1,b=null,O=null,v=0,hZ=0,K=0,tZ=0,NZ=0,Y=0,ZZ=0,oZ=0,RZ=0,EZ=0,z=0,nZ=0,XZ=0,wZ=0,DZ=0,TZ=0,LZ=0,Cm=0,pm=0,Om=0,Xm=0,wm=0,Lm=0,Zh=0,mh=0,vm=0,Tm=0,Gm=0,ym=0,Em=0,g=0,s=0,N=0,c=0,x=0,$=0,L=0,IZ=0,uZ=0,KZ=0,fZ=0,HZ=0,eY=0,wY=0,yY=0,Ai=0,ai=0,pZ=0,jm=0,rh=0,ti=0,Tn=0,Wi=0,ei=0,Mn=0,Sn=0,oi=0,Rn=0,oY=0,Qh=0,Dn=0,VY=0,Ch=0,Vi=0,li=0,Ri=0){this.COMMENT=Z,this.OBJECT=m,this.OBJECT_DESIGNATOR=h,this.CATALOG_NAME=n,this.OBJECT_NAME=i,this.INTERNATIONAL_DESIGNATOR=A,this.OBJECT_TYPE=t,this.OPERATOR_CONTACT_POSITION=W,this.OPERATOR_ORGANIZATION=e,this.EPHEMERIS_NAME=G,this.COVARIANCE_METHOD=F,this.MANEUVERABLE=d,this.ORBIT_CENTER=J,this.REF_FRAME=k,this.GRAVITY_MODEL=r,this.ATMOSPHERIC_MODEL=Q,this.N_BODY_PERTURBATIONS=p,this.SOLAR_RAD_PRESSURE=T,this.EARTH_TIDES=I,this.INTRACK_THRUST=f,this.TIME_LASTOB_START=b,this.TIME_LASTOB_END=O,this.RECOMMENDED_OD_SPAN=v,this.ACTUAL_OD_SPAN=hZ,this.OBS_AVAILABLE=K,this.OBS_USED=tZ,this.TRACKS_AVAILABLE=NZ,this.TRACKS_USED=Y,this.RESIDUALS_ACCEPTED=ZZ,this.WEIGHTED_RMS=oZ,this.AREA_PC=RZ,this.AREA_DRG=EZ,this.AREA_SRP=z,this.MASS=nZ,this.CR_AREA_OVER_MASS=XZ,this.THRUST_ACCELERATION=wZ,this.SEDR=DZ,this.X=TZ,this.Y=LZ,this.Z=Cm,this.X_DOT=pm,this.Y_DOT=Om,this.Z_DOT=Xm,this.CR_R=wm,this.CT_R=Lm,this.CT_T=Zh,this.CN_R=mh,this.CN_T=vm,this.CN_N=Tm,this.CRDOT_R=Gm,this.CRDOT_T=ym,this.CRDOT_N=Em,this.CRDOT_RDOT=g,this.CTDOT_R=s,this.CTDOT_T=N,this.CTDOT_N=c,this.CTDOT_RDOT=x,this.CTDOT_TDOT=$,this.CNDOT_R=L,this.CNDOT_T=IZ,this.CNDOT_N=uZ,this.CNDOT_RDOT=KZ,this.CNDOT_TDOT=fZ,this.CNDOT_NDOT=HZ,this.CDRG_R=eY,this.CDRG_T=wY,this.CDRG_N=yY,this.CDRG_RDOT=Ai,this.CDRG_TDOT=ai,this.CDRG_NDOT=pZ,this.CDRG_DRG=jm,this.CSRP_R=rh,this.CSRP_T=ti,this.CSRP_N=Tn,this.CSRP_RDOT=Wi,this.CSRP_TDOT=ei,this.CSRP_NDOT=Mn,this.CSRP_DRG=Sn,this.CSRP_SRP=oi,this.CTHR_R=Rn,this.CTHR_T=oY,this.CTHR_N=Qh,this.CTHR_RDOT=Dn,this.CTHR_TDOT=VY,this.CTHR_NDOT=Ch,this.CTHR_DRG=Vi,this.CTHR_SRP=li,this.CTHR_THR=Ri}pack(Z){let m=this.COMMENT!==null?Z.createString(this.COMMENT):0,h=this.OBJECT_DESIGNATOR!==null?Z.createString(this.OBJECT_DESIGNATOR):0,n=this.CATALOG_NAME!==null?Z.createString(this.CATALOG_NAME):0,i=this.OBJECT_NAME!==null?Z.createString(this.OBJECT_NAME):0,A=this.INTERNATIONAL_DESIGNATOR!==null?Z.createString(this.INTERNATIONAL_DESIGNATOR):0,t=this.OPERATOR_CONTACT_POSITION!==null?Z.createString(this.OPERATOR_CONTACT_POSITION):0,W=this.OPERATOR_ORGANIZATION!==null?Z.createString(this.OPERATOR_ORGANIZATION):0,e=this.EPHEMERIS_NAME!==null?Z.createString(this.EPHEMERIS_NAME):0,G=this.ORBIT_CENTER!==null?Z.createString(this.ORBIT_CENTER):0,F=this.GRAVITY_MODEL!==null?Z.createString(this.GRAVITY_MODEL):0,d=this.ATMOSPHERIC_MODEL!==null?Z.createString(this.ATMOSPHERIC_MODEL):0,J=this.N_BODY_PERTURBATIONS!==null?Z.createString(this.N_BODY_PERTURBATIONS):0,k=this.TIME_LASTOB_START!==null?Z.createString(this.TIME_LASTOB_START):0,r=this.TIME_LASTOB_END!==null?Z.createString(this.TIME_LASTOB_END):0;return YZ.createCDMObject(Z,m,this.OBJECT,h,n,i,A,this.OBJECT_TYPE,t,W,e,this.COVARIANCE_METHOD,this.MANEUVERABLE,G,this.REF_FRAME,F,d,J,this.SOLAR_RAD_PRESSURE,this.EARTH_TIDES,this.INTRACK_THRUST,k,r,this.RECOMMENDED_OD_SPAN,this.ACTUAL_OD_SPAN,this.OBS_AVAILABLE,this.OBS_USED,this.TRACKS_AVAILABLE,this.TRACKS_USED,this.RESIDUALS_ACCEPTED,this.WEIGHTED_RMS,this.AREA_PC,this.AREA_DRG,this.AREA_SRP,this.MASS,this.CR_AREA_OVER_MASS,this.THRUST_ACCELERATION,this.SEDR,this.X,this.Y,this.Z,this.X_DOT,this.Y_DOT,this.Z_DOT,this.CR_R,this.CT_R,this.CT_T,this.CN_R,this.CN_T,this.CN_N,this.CRDOT_R,this.CRDOT_T,this.CRDOT_N,this.CRDOT_RDOT,this.CTDOT_R,this.CTDOT_T,this.CTDOT_N,this.CTDOT_RDOT,this.CTDOT_TDOT,this.CNDOT_R,this.CNDOT_T,this.CNDOT_N,this.CNDOT_RDOT,this.CNDOT_TDOT,this.CNDOT_NDOT,this.CDRG_R,this.CDRG_T,this.CDRG_N,this.CDRG_RDOT,this.CDRG_TDOT,this.CDRG_NDOT,this.CDRG_DRG,this.CSRP_R,this.CSRP_T,this.CSRP_N,this.CSRP_RDOT,this.CSRP_TDOT,this.CSRP_NDOT,this.CSRP_DRG,this.CSRP_SRP,this.CTHR_R,this.CTHR_T,this.CTHR_N,this.CTHR_RDOT,this.CTHR_TDOT,this.CTHR_NDOT,this.CTHR_DRG,this.CTHR_SRP,this.CTHR_THR)}},jd=(Z=>(Z[Z.RTN=0]="RTN",Z[Z.TVN=1]="TVN",Z))(jd||{}),cd=(Z=>(Z[Z.ELLIPSOID=0]="ELLIPSOID",Z[Z.BOX=1]="BOX",Z))(cd||{}),PZ=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsCDM(Z,m){return(m||new PZ).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsCDM(Z,m){return Z.setPosition(Z.position()+Nm),(m||new PZ).__init(Z.readInt32(Z.position())+Z.position(),Z)}static bufferHasIdentifier(Z){return Z.__has_identifier("$CDM")}CCSDS_CDM_VERS(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CREATION_DATE(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}ORIGINATOR(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}MESSAGE_FOR(Z){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.__string(this.bb_pos+m,Z):null}MESSAGE_ID(Z){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.__string(this.bb_pos+m,Z):null}TCA(Z){let m=this.bb.__offset(this.bb_pos,14);return m?this.bb.__string(this.bb_pos+m,Z):null}MISS_DISTANCE(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RELATIVE_SPEED(){let Z=this.bb.__offset(this.bb_pos,18);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RELATIVE_POSITION_R(){let Z=this.bb.__offset(this.bb_pos,20);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RELATIVE_POSITION_T(){let Z=this.bb.__offset(this.bb_pos,22);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RELATIVE_POSITION_N(){let Z=this.bb.__offset(this.bb_pos,24);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RELATIVE_VELOCITY_R(){let Z=this.bb.__offset(this.bb_pos,26);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RELATIVE_VELOCITY_T(){let Z=this.bb.__offset(this.bb_pos,28);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RELATIVE_VELOCITY_N(){let Z=this.bb.__offset(this.bb_pos,30);return Z?this.bb.readFloat64(this.bb_pos+Z):0}START_SCREEN_PERIOD(Z){let m=this.bb.__offset(this.bb_pos,32);return m?this.bb.__string(this.bb_pos+m,Z):null}STOP_SCREEN_PERIOD(Z){let m=this.bb.__offset(this.bb_pos,34);return m?this.bb.__string(this.bb_pos+m,Z):null}SCREEN_VOLUME_FRAME(){let Z=this.bb.__offset(this.bb_pos,36);return Z?this.bb.readInt8(this.bb_pos+Z):0}SCREEN_VOLUME_SHAPE(){let Z=this.bb.__offset(this.bb_pos,38);return Z?this.bb.readInt8(this.bb_pos+Z):0}SCREEN_VOLUME_X(){let Z=this.bb.__offset(this.bb_pos,40);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SCREEN_VOLUME_Y(){let Z=this.bb.__offset(this.bb_pos,42);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SCREEN_VOLUME_Z(){let Z=this.bb.__offset(this.bb_pos,44);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SCREEN_ENTRY_TIME(Z){let m=this.bb.__offset(this.bb_pos,46);return m?this.bb.__string(this.bb_pos+m,Z):null}SCREEN_EXIT_TIME(Z){let m=this.bb.__offset(this.bb_pos,48);return m?this.bb.__string(this.bb_pos+m,Z):null}COLLISION_PROBABILITY(){let Z=this.bb.__offset(this.bb_pos,50);return Z?this.bb.readFloat64(this.bb_pos+Z):0}COLLISION_PROBABILITY_METHOD(Z){let m=this.bb.__offset(this.bb_pos,52);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT1(Z){let m=this.bb.__offset(this.bb_pos,54);return m?(Z||new YZ).__init(this.bb.__indirect(this.bb_pos+m),this.bb):null}OBJECT2(Z){let m=this.bb.__offset(this.bb_pos,56);return m?(Z||new YZ).__init(this.bb.__indirect(this.bb_pos+m),this.bb):null}static startCDM(Z){Z.startObject(27)}static addCcsdsCdmVers(Z,m){Z.addFieldFloat64(0,m,0)}static addCreationDate(Z,m){Z.addFieldOffset(1,m,0)}static addOriginator(Z,m){Z.addFieldOffset(2,m,0)}static addMessageFor(Z,m){Z.addFieldOffset(3,m,0)}static addMessageId(Z,m){Z.addFieldOffset(4,m,0)}static addTca(Z,m){Z.addFieldOffset(5,m,0)}static addMissDistance(Z,m){Z.addFieldFloat64(6,m,0)}static addRelativeSpeed(Z,m){Z.addFieldFloat64(7,m,0)}static addRelativePositionR(Z,m){Z.addFieldFloat64(8,m,0)}static addRelativePositionT(Z,m){Z.addFieldFloat64(9,m,0)}static addRelativePositionN(Z,m){Z.addFieldFloat64(10,m,0)}static addRelativeVelocityR(Z,m){Z.addFieldFloat64(11,m,0)}static addRelativeVelocityT(Z,m){Z.addFieldFloat64(12,m,0)}static addRelativeVelocityN(Z,m){Z.addFieldFloat64(13,m,0)}static addStartScreenPeriod(Z,m){Z.addFieldOffset(14,m,0)}static addStopScreenPeriod(Z,m){Z.addFieldOffset(15,m,0)}static addScreenVolumeFrame(Z,m){Z.addFieldInt8(16,m,0)}static addScreenVolumeShape(Z,m){Z.addFieldInt8(17,m,0)}static addScreenVolumeX(Z,m){Z.addFieldFloat64(18,m,0)}static addScreenVolumeY(Z,m){Z.addFieldFloat64(19,m,0)}static addScreenVolumeZ(Z,m){Z.addFieldFloat64(20,m,0)}static addScreenEntryTime(Z,m){Z.addFieldOffset(21,m,0)}static addScreenExitTime(Z,m){Z.addFieldOffset(22,m,0)}static addCollisionProbability(Z,m){Z.addFieldFloat64(23,m,0)}static addCollisionProbabilityMethod(Z,m){Z.addFieldOffset(24,m,0)}static addObject1(Z,m){Z.addFieldOffset(25,m,0)}static addObject2(Z,m){Z.addFieldOffset(26,m,0)}static endCDM(Z){return Z.endObject()}static finishCDMBuffer(Z,m){Z.finish(m,"$CDM")}static finishSizePrefixedCDMBuffer(Z,m){Z.finish(m,"$CDM",!0)}unpack(){return new Td(this.CCSDS_CDM_VERS(),this.CREATION_DATE(),this.ORIGINATOR(),this.MESSAGE_FOR(),this.MESSAGE_ID(),this.TCA(),this.MISS_DISTANCE(),this.RELATIVE_SPEED(),this.RELATIVE_POSITION_R(),this.RELATIVE_POSITION_T(),this.RELATIVE_POSITION_N(),this.RELATIVE_VELOCITY_R(),this.RELATIVE_VELOCITY_T(),this.RELATIVE_VELOCITY_N(),this.START_SCREEN_PERIOD(),this.STOP_SCREEN_PERIOD(),this.SCREEN_VOLUME_FRAME(),this.SCREEN_VOLUME_SHAPE(),this.SCREEN_VOLUME_X(),this.SCREEN_VOLUME_Y(),this.SCREEN_VOLUME_Z(),this.SCREEN_ENTRY_TIME(),this.SCREEN_EXIT_TIME(),this.COLLISION_PROBABILITY(),this.COLLISION_PROBABILITY_METHOD(),this.OBJECT1()!==null?this.OBJECT1().unpack():null,this.OBJECT2()!==null?this.OBJECT2().unpack():null)}unpackTo(Z){Z.CCSDS_CDM_VERS=this.CCSDS_CDM_VERS(),Z.CREATION_DATE=this.CREATION_DATE(),Z.ORIGINATOR=this.ORIGINATOR(),Z.MESSAGE_FOR=this.MESSAGE_FOR(),Z.MESSAGE_ID=this.MESSAGE_ID(),Z.TCA=this.TCA(),Z.MISS_DISTANCE=this.MISS_DISTANCE(),Z.RELATIVE_SPEED=this.RELATIVE_SPEED(),Z.RELATIVE_POSITION_R=this.RELATIVE_POSITION_R(),Z.RELATIVE_POSITION_T=this.RELATIVE_POSITION_T(),Z.RELATIVE_POSITION_N=this.RELATIVE_POSITION_N(),Z.RELATIVE_VELOCITY_R=this.RELATIVE_VELOCITY_R(),Z.RELATIVE_VELOCITY_T=this.RELATIVE_VELOCITY_T(),Z.RELATIVE_VELOCITY_N=this.RELATIVE_VELOCITY_N(),Z.START_SCREEN_PERIOD=this.START_SCREEN_PERIOD(),Z.STOP_SCREEN_PERIOD=this.STOP_SCREEN_PERIOD(),Z.SCREEN_VOLUME_FRAME=this.SCREEN_VOLUME_FRAME(),Z.SCREEN_VOLUME_SHAPE=this.SCREEN_VOLUME_SHAPE(),Z.SCREEN_VOLUME_X=this.SCREEN_VOLUME_X(),Z.SCREEN_VOLUME_Y=this.SCREEN_VOLUME_Y(),Z.SCREEN_VOLUME_Z=this.SCREEN_VOLUME_Z(),Z.SCREEN_ENTRY_TIME=this.SCREEN_ENTRY_TIME(),Z.SCREEN_EXIT_TIME=this.SCREEN_EXIT_TIME(),Z.COLLISION_PROBABILITY=this.COLLISION_PROBABILITY(),Z.COLLISION_PROBABILITY_METHOD=this.COLLISION_PROBABILITY_METHOD(),Z.OBJECT1=this.OBJECT1()!==null?this.OBJECT1().unpack():null,Z.OBJECT2=this.OBJECT2()!==null?this.OBJECT2().unpack():null}},Td=class{constructor(Z=0,m=null,h=null,n=null,i=null,A=null,t=0,W=0,e=0,G=0,F=0,d=0,J=0,k=0,r=null,Q=null,p=0,T=0,I=0,f=0,b=0,O=null,v=null,hZ=0,K=null,tZ=null,NZ=null){this.CCSDS_CDM_VERS=Z,this.CREATION_DATE=m,this.ORIGINATOR=h,this.MESSAGE_FOR=n,this.MESSAGE_ID=i,this.TCA=A,this.MISS_DISTANCE=t,this.RELATIVE_SPEED=W,this.RELATIVE_POSITION_R=e,this.RELATIVE_POSITION_T=G,this.RELATIVE_POSITION_N=F,this.RELATIVE_VELOCITY_R=d,this.RELATIVE_VELOCITY_T=J,this.RELATIVE_VELOCITY_N=k,this.START_SCREEN_PERIOD=r,this.STOP_SCREEN_PERIOD=Q,this.SCREEN_VOLUME_FRAME=p,this.SCREEN_VOLUME_SHAPE=T,this.SCREEN_VOLUME_X=I,this.SCREEN_VOLUME_Y=f,this.SCREEN_VOLUME_Z=b,this.SCREEN_ENTRY_TIME=O,this.SCREEN_EXIT_TIME=v,this.COLLISION_PROBABILITY=hZ,this.COLLISION_PROBABILITY_METHOD=K,this.OBJECT1=tZ,this.OBJECT2=NZ}pack(Z){let m=this.CREATION_DATE!==null?Z.createString(this.CREATION_DATE):0,h=this.ORIGINATOR!==null?Z.createString(this.ORIGINATOR):0,n=this.MESSAGE_FOR!==null?Z.createString(this.MESSAGE_FOR):0,i=this.MESSAGE_ID!==null?Z.createString(this.MESSAGE_ID):0,A=this.TCA!==null?Z.createString(this.TCA):0,t=this.START_SCREEN_PERIOD!==null?Z.createString(this.START_SCREEN_PERIOD):0,W=this.STOP_SCREEN_PERIOD!==null?Z.createString(this.STOP_SCREEN_PERIOD):0,e=this.SCREEN_ENTRY_TIME!==null?Z.createString(this.SCREEN_ENTRY_TIME):0,G=this.SCREEN_EXIT_TIME!==null?Z.createString(this.SCREEN_EXIT_TIME):0,F=this.COLLISION_PROBABILITY_METHOD!==null?Z.createString(this.COLLISION_PROBABILITY_METHOD):0,d=this.OBJECT1!==null?this.OBJECT1.pack(Z):0,J=this.OBJECT2!==null?this.OBJECT2.pack(Z):0;return PZ.startCDM(Z),PZ.addCcsdsCdmVers(Z,this.CCSDS_CDM_VERS),PZ.addCreationDate(Z,m),PZ.addOriginator(Z,h),PZ.addMessageFor(Z,n),PZ.addMessageId(Z,i),PZ.addTca(Z,A),PZ.addMissDistance(Z,this.MISS_DISTANCE),PZ.addRelativeSpeed(Z,this.RELATIVE_SPEED),PZ.addRelativePositionR(Z,this.RELATIVE_POSITION_R),PZ.addRelativePositionT(Z,this.RELATIVE_POSITION_T),PZ.addRelativePositionN(Z,this.RELATIVE_POSITION_N),PZ.addRelativeVelocityR(Z,this.RELATIVE_VELOCITY_R),PZ.addRelativeVelocityT(Z,this.RELATIVE_VELOCITY_T),PZ.addRelativeVelocityN(Z,this.RELATIVE_VELOCITY_N),PZ.addStartScreenPeriod(Z,t),PZ.addStopScreenPeriod(Z,W),PZ.addScreenVolumeFrame(Z,this.SCREEN_VOLUME_FRAME),PZ.addScreenVolumeShape(Z,this.SCREEN_VOLUME_SHAPE),PZ.addScreenVolumeX(Z,this.SCREEN_VOLUME_X),PZ.addScreenVolumeY(Z,this.SCREEN_VOLUME_Y),PZ.addScreenVolumeZ(Z,this.SCREEN_VOLUME_Z),PZ.addScreenEntryTime(Z,e),PZ.addScreenExitTime(Z,G),PZ.addCollisionProbability(Z,this.COLLISION_PROBABILITY),PZ.addCollisionProbabilityMethod(Z,F),PZ.addObject1(Z,d),PZ.addObject2(Z,J),PZ.endCDM(Z)}},An=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsCDMCOLLECTION(Z,m){return(m||new An).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsCDMCOLLECTION(Z,m){return Z.setPosition(Z.position()+Nm),(m||new An).__init(Z.readInt32(Z.position())+Z.position(),Z)}RECORDS(Z,m){let h=this.bb.__offset(this.bb_pos,4);return h?(m||new PZ).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}recordsLength(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startCDMCOLLECTION(Z){Z.startObject(1)}static addRecords(Z,m){Z.addFieldOffset(0,m,0)}static createRecordsVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startRecordsVector(Z,m){Z.startVector(4,m,4)}static endCDMCOLLECTION(Z){return Z.endObject()}static createCDMCOLLECTION(Z,m){return An.startCDMCOLLECTION(Z),An.addRecords(Z,m),An.endCDMCOLLECTION(Z)}unpack(){return new Md(this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength()))}unpackTo(Z){Z.RECORDS=this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength())}},Md=class{constructor(Z=[]){this.RECORDS=Z}pack(Z){let m=An.createRecordsVector(Z,Z.createObjectOffsetList(this.RECORDS));return An.createCDMCOLLECTION(Z,m)}},LJ={};Vn(LJ,{OPM:()=>rZ,OPMCOLLECTION:()=>an,OPMCOLLECTIONT:()=>xd,OPMT:()=>bd,manCovRefFrame:()=>Sd,maneuverParameters:()=>Jh,maneuverParametersT:()=>Dd,referenceFrame:()=>fd,timeSystem:()=>ud});var Sd=(Z=>(Z[Z.RSW=0]="RSW",Z[Z.RTN=1]="RTN",Z[Z.TNW=2]="TNW",Z))(Sd||{}),Jh=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsmaneuverParameters(Z,m){return(m||new Jh).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsmaneuverParameters(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Jh).__init(Z.readInt32(Z.position())+Z.position(),Z)}MAN_EPOCH_IGNITION(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}MAN_DURATION(){let Z=this.bb.__offset(this.bb_pos,6);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MAN_DELTA_MASS(){let Z=this.bb.__offset(this.bb_pos,8);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MAN_REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,10);return Z?this.bb.readInt8(this.bb_pos+Z):0}MAN_DV_1(){let Z=this.bb.__offset(this.bb_pos,12);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MAN_DV_2(){let Z=this.bb.__offset(this.bb_pos,14);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MAN_DV_3(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readFloat64(this.bb_pos+Z):0}static startmaneuverParameters(Z){Z.startObject(7)}static addManEpochIgnition(Z,m){Z.addFieldOffset(0,m,0)}static addManDuration(Z,m){Z.addFieldFloat64(1,m,0)}static addManDeltaMass(Z,m){Z.addFieldFloat64(2,m,0)}static addManRefFrame(Z,m){Z.addFieldInt8(3,m,0)}static addManDv1(Z,m){Z.addFieldFloat64(4,m,0)}static addManDv2(Z,m){Z.addFieldFloat64(5,m,0)}static addManDv3(Z,m){Z.addFieldFloat64(6,m,0)}static endmaneuverParameters(Z){return Z.endObject()}static createmaneuverParameters(Z,m,h,n,i,A,t,W){return Jh.startmaneuverParameters(Z),Jh.addManEpochIgnition(Z,m),Jh.addManDuration(Z,h),Jh.addManDeltaMass(Z,n),Jh.addManRefFrame(Z,i),Jh.addManDv1(Z,A),Jh.addManDv2(Z,t),Jh.addManDv3(Z,W),Jh.endmaneuverParameters(Z)}unpack(){return new Dd(this.MAN_EPOCH_IGNITION(),this.MAN_DURATION(),this.MAN_DELTA_MASS(),this.MAN_REF_FRAME(),this.MAN_DV_1(),this.MAN_DV_2(),this.MAN_DV_3())}unpackTo(Z){Z.MAN_EPOCH_IGNITION=this.MAN_EPOCH_IGNITION(),Z.MAN_DURATION=this.MAN_DURATION(),Z.MAN_DELTA_MASS=this.MAN_DELTA_MASS(),Z.MAN_REF_FRAME=this.MAN_REF_FRAME(),Z.MAN_DV_1=this.MAN_DV_1(),Z.MAN_DV_2=this.MAN_DV_2(),Z.MAN_DV_3=this.MAN_DV_3()}},Dd=class{constructor(Z=null,m=0,h=0,n=0,i=0,A=0,t=0){this.MAN_EPOCH_IGNITION=Z,this.MAN_DURATION=m,this.MAN_DELTA_MASS=h,this.MAN_REF_FRAME=n,this.MAN_DV_1=i,this.MAN_DV_2=A,this.MAN_DV_3=t}pack(Z){let m=this.MAN_EPOCH_IGNITION!==null?Z.createString(this.MAN_EPOCH_IGNITION):0;return Jh.createmaneuverParameters(Z,m,this.MAN_DURATION,this.MAN_DELTA_MASS,this.MAN_REF_FRAME,this.MAN_DV_1,this.MAN_DV_2,this.MAN_DV_3)}},fd=(Z=>(Z[Z.EME2000=0]="EME2000",Z[Z.GCRF=1]="GCRF",Z[Z.GRC=2]="GRC",Z[Z.ICRF=3]="ICRF",Z[Z.ITRF2000=4]="ITRF2000",Z[Z.ITRF93=5]="ITRF93",Z[Z.ITRF97=6]="ITRF97",Z[Z.MCI=7]="MCI",Z[Z.TDR=8]="TDR",Z[Z.TEME=9]="TEME",Z[Z.TOD=10]="TOD",Z))(fd||{}),ud=(Z=>(Z[Z.GMST=0]="GMST",Z[Z.GPS=1]="GPS",Z[Z.MET=2]="MET",Z[Z.MRT=3]="MRT",Z[Z.SCLK=4]="SCLK",Z[Z.TAI=5]="TAI",Z[Z.TCB=6]="TCB",Z[Z.TDB=7]="TDB",Z[Z.TCG=8]="TCG",Z[Z.TT=9]="TT",Z[Z.UT1=10]="UT1",Z[Z.UTC=11]="UTC",Z))(ud||{}),rZ=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsOPM(Z,m){return(m||new rZ).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsOPM(Z,m){return Z.setPosition(Z.position()+Nm),(m||new rZ).__init(Z.readInt32(Z.position())+Z.position(),Z)}static bufferHasIdentifier(Z){return Z.__has_identifier("$OPM")}CCSDS_OPM_VERS(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CREATION_DATE(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}ORIGINATOR(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_NAME(Z){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_ID(Z){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.__string(this.bb_pos+m,Z):null}CENTER_NAME(Z){let m=this.bb.__offset(this.bb_pos,14);return m?this.bb.__string(this.bb_pos+m,Z):null}REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readInt8(this.bb_pos+Z):0}REF_FRAME_EPOCH(Z){let m=this.bb.__offset(this.bb_pos,18);return m?this.bb.__string(this.bb_pos+m,Z):null}TIME_SYSTEM(){let Z=this.bb.__offset(this.bb_pos,20);return Z?this.bb.readInt8(this.bb_pos+Z):0}COMMENT(Z){let m=this.bb.__offset(this.bb_pos,22);return m?this.bb.__string(this.bb_pos+m,Z):null}EPOCH(Z){let m=this.bb.__offset(this.bb_pos,24);return m?this.bb.__string(this.bb_pos+m,Z):null}X(){let Z=this.bb.__offset(this.bb_pos,26);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Y(){let Z=this.bb.__offset(this.bb_pos,28);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Z(){let Z=this.bb.__offset(this.bb_pos,30);return Z?this.bb.readFloat64(this.bb_pos+Z):0}X_DOT(){let Z=this.bb.__offset(this.bb_pos,32);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Y_DOT(){let Z=this.bb.__offset(this.bb_pos,34);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Z_DOT(){let Z=this.bb.__offset(this.bb_pos,36);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SEMI_MAJOR_AXIS(){let Z=this.bb.__offset(this.bb_pos,38);return Z?this.bb.readFloat64(this.bb_pos+Z):0}ECCENTRICITY(){let Z=this.bb.__offset(this.bb_pos,40);return Z?this.bb.readFloat64(this.bb_pos+Z):0}INCLINATION(){let Z=this.bb.__offset(this.bb_pos,42);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RA_OF_ASC_NODE(){let Z=this.bb.__offset(this.bb_pos,44);return Z?this.bb.readFloat64(this.bb_pos+Z):0}ARG_OF_PERICENTER(){let Z=this.bb.__offset(this.bb_pos,46);return Z?this.bb.readFloat64(this.bb_pos+Z):0}TRUE_ANOMALY(){let Z=this.bb.__offset(this.bb_pos,48);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MEAN_ANOMALY(){let Z=this.bb.__offset(this.bb_pos,50);return Z?this.bb.readFloat64(this.bb_pos+Z):0}GM(){let Z=this.bb.__offset(this.bb_pos,52);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MASS(){let Z=this.bb.__offset(this.bb_pos,54);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SOLAR_RAD_AREA(){let Z=this.bb.__offset(this.bb_pos,56);return Z?this.bb.readFloat64(this.bb_pos+Z):0}SOLAR_RAD_COEFF(){let Z=this.bb.__offset(this.bb_pos,58);return Z?this.bb.readFloat64(this.bb_pos+Z):0}DRAG_AREA(){let Z=this.bb.__offset(this.bb_pos,60);return Z?this.bb.readFloat64(this.bb_pos+Z):0}DRAG_COEFF(){let Z=this.bb.__offset(this.bb_pos,62);return Z?this.bb.readFloat64(this.bb_pos+Z):0}COV_REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,64);return Z?this.bb.readInt8(this.bb_pos+Z):0}CX_X(){let Z=this.bb.__offset(this.bb_pos,66);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_X(){let Z=this.bb.__offset(this.bb_pos,68);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_Y(){let Z=this.bb.__offset(this.bb_pos,70);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_X(){let Z=this.bb.__offset(this.bb_pos,72);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_Y(){let Z=this.bb.__offset(this.bb_pos,74);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_Z(){let Z=this.bb.__offset(this.bb_pos,76);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_X(){let Z=this.bb.__offset(this.bb_pos,78);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,80);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,82);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,84);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_X(){let Z=this.bb.__offset(this.bb_pos,86);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,88);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,90);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,92);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Y_DOT(){let Z=this.bb.__offset(this.bb_pos,94);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_X(){let Z=this.bb.__offset(this.bb_pos,96);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,98);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,100);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,102);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Y_DOT(){let Z=this.bb.__offset(this.bb_pos,104);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Z_DOT(){let Z=this.bb.__offset(this.bb_pos,106);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MANEUVERS(Z,m){let h=this.bb.__offset(this.bb_pos,108);return h?(m||new Jh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}maneuversLength(){let Z=this.bb.__offset(this.bb_pos,108);return Z?this.bb.__vector_len(this.bb_pos+Z):0}USER_DEFINED_BIP_0044_TYPE(){let Z=this.bb.__offset(this.bb_pos,110);return Z?this.bb.readUint32(this.bb_pos+Z):0}USER_DEFINED_OBJECT_DESIGNATOR(Z){let m=this.bb.__offset(this.bb_pos,112);return m?this.bb.__string(this.bb_pos+m,Z):null}USER_DEFINED_EARTH_MODEL(Z){let m=this.bb.__offset(this.bb_pos,114);return m?this.bb.__string(this.bb_pos+m,Z):null}USER_DEFINED_EPOCH_TIMESTAMP(){let Z=this.bb.__offset(this.bb_pos,116);return Z?this.bb.readFloat64(this.bb_pos+Z):0}USER_DEFINED_EPOCH_MICROSECONDS(){let Z=this.bb.__offset(this.bb_pos,118);return Z?this.bb.readFloat64(this.bb_pos+Z):0}static startOPM(Z){Z.startObject(58)}static addCcsdsOpmVers(Z,m){Z.addFieldFloat64(0,m,0)}static addCreationDate(Z,m){Z.addFieldOffset(1,m,0)}static addOriginator(Z,m){Z.addFieldOffset(2,m,0)}static addObjectName(Z,m){Z.addFieldOffset(3,m,0)}static addObjectId(Z,m){Z.addFieldOffset(4,m,0)}static addCenterName(Z,m){Z.addFieldOffset(5,m,0)}static addRefFrame(Z,m){Z.addFieldInt8(6,m,0)}static addRefFrameEpoch(Z,m){Z.addFieldOffset(7,m,0)}static addTimeSystem(Z,m){Z.addFieldInt8(8,m,0)}static addComment(Z,m){Z.addFieldOffset(9,m,0)}static addEpoch(Z,m){Z.addFieldOffset(10,m,0)}static addX(Z,m){Z.addFieldFloat64(11,m,0)}static addY(Z,m){Z.addFieldFloat64(12,m,0)}static addZ(Z,m){Z.addFieldFloat64(13,m,0)}static addXDot(Z,m){Z.addFieldFloat64(14,m,0)}static addYDot(Z,m){Z.addFieldFloat64(15,m,0)}static addZDot(Z,m){Z.addFieldFloat64(16,m,0)}static addSemiMajorAxis(Z,m){Z.addFieldFloat64(17,m,0)}static addEccentricity(Z,m){Z.addFieldFloat64(18,m,0)}static addInclination(Z,m){Z.addFieldFloat64(19,m,0)}static addRaOfAscNode(Z,m){Z.addFieldFloat64(20,m,0)}static addArgOfPericenter(Z,m){Z.addFieldFloat64(21,m,0)}static addTrueAnomaly(Z,m){Z.addFieldFloat64(22,m,0)}static addMeanAnomaly(Z,m){Z.addFieldFloat64(23,m,0)}static addGm(Z,m){Z.addFieldFloat64(24,m,0)}static addMass(Z,m){Z.addFieldFloat64(25,m,0)}static addSolarRadArea(Z,m){Z.addFieldFloat64(26,m,0)}static addSolarRadCoeff(Z,m){Z.addFieldFloat64(27,m,0)}static addDragArea(Z,m){Z.addFieldFloat64(28,m,0)}static addDragCoeff(Z,m){Z.addFieldFloat64(29,m,0)}static addCovRefFrame(Z,m){Z.addFieldInt8(30,m,0)}static addCxX(Z,m){Z.addFieldFloat64(31,m,0)}static addCyX(Z,m){Z.addFieldFloat64(32,m,0)}static addCyY(Z,m){Z.addFieldFloat64(33,m,0)}static addCzX(Z,m){Z.addFieldFloat64(34,m,0)}static addCzY(Z,m){Z.addFieldFloat64(35,m,0)}static addCzZ(Z,m){Z.addFieldFloat64(36,m,0)}static addCxDotX(Z,m){Z.addFieldFloat64(37,m,0)}static addCxDotY(Z,m){Z.addFieldFloat64(38,m,0)}static addCxDotZ(Z,m){Z.addFieldFloat64(39,m,0)}static addCxDotXDot(Z,m){Z.addFieldFloat64(40,m,0)}static addCyDotX(Z,m){Z.addFieldFloat64(41,m,0)}static addCyDotY(Z,m){Z.addFieldFloat64(42,m,0)}static addCyDotZ(Z,m){Z.addFieldFloat64(43,m,0)}static addCyDotXDot(Z,m){Z.addFieldFloat64(44,m,0)}static addCyDotYDot(Z,m){Z.addFieldFloat64(45,m,0)}static addCzDotX(Z,m){Z.addFieldFloat64(46,m,0)}static addCzDotY(Z,m){Z.addFieldFloat64(47,m,0)}static addCzDotZ(Z,m){Z.addFieldFloat64(48,m,0)}static addCzDotXDot(Z,m){Z.addFieldFloat64(49,m,0)}static addCzDotYDot(Z,m){Z.addFieldFloat64(50,m,0)}static addCzDotZDot(Z,m){Z.addFieldFloat64(51,m,0)}static addManeuvers(Z,m){Z.addFieldOffset(52,m,0)}static createManeuversVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startManeuversVector(Z,m){Z.startVector(4,m,4)}static addUserDefinedBip0044Type(Z,m){Z.addFieldInt32(53,m,0)}static addUserDefinedObjectDesignator(Z,m){Z.addFieldOffset(54,m,0)}static addUserDefinedEarthModel(Z,m){Z.addFieldOffset(55,m,0)}static addUserDefinedEpochTimestamp(Z,m){Z.addFieldFloat64(56,m,0)}static addUserDefinedEpochMicroseconds(Z,m){Z.addFieldFloat64(57,m,0)}static endOPM(Z){return Z.endObject()}static finishOPMBuffer(Z,m){Z.finish(m,"$OPM")}static finishSizePrefixedOPMBuffer(Z,m){Z.finish(m,"$OPM",!0)}static createOPM(Z,m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q,p,T,I,f,b,O,v,hZ,K,tZ,NZ,Y,ZZ,oZ,RZ,EZ,z,nZ,XZ,wZ,DZ,TZ,LZ,Cm,pm,Om,Xm,wm,Lm,Zh,mh,vm,Tm,Gm,ym,Em,g,s,N,c,x,$,L){return rZ.startOPM(Z),rZ.addCcsdsOpmVers(Z,m),rZ.addCreationDate(Z,h),rZ.addOriginator(Z,n),rZ.addObjectName(Z,i),rZ.addObjectId(Z,A),rZ.addCenterName(Z,t),rZ.addRefFrame(Z,W),rZ.addRefFrameEpoch(Z,e),rZ.addTimeSystem(Z,G),rZ.addComment(Z,F),rZ.addEpoch(Z,d),rZ.addX(Z,J),rZ.addY(Z,k),rZ.addZ(Z,r),rZ.addXDot(Z,Q),rZ.addYDot(Z,p),rZ.addZDot(Z,T),rZ.addSemiMajorAxis(Z,I),rZ.addEccentricity(Z,f),rZ.addInclination(Z,b),rZ.addRaOfAscNode(Z,O),rZ.addArgOfPericenter(Z,v),rZ.addTrueAnomaly(Z,hZ),rZ.addMeanAnomaly(Z,K),rZ.addGm(Z,tZ),rZ.addMass(Z,NZ),rZ.addSolarRadArea(Z,Y),rZ.addSolarRadCoeff(Z,ZZ),rZ.addDragArea(Z,oZ),rZ.addDragCoeff(Z,RZ),rZ.addCovRefFrame(Z,EZ),rZ.addCxX(Z,z),rZ.addCyX(Z,nZ),rZ.addCyY(Z,XZ),rZ.addCzX(Z,wZ),rZ.addCzY(Z,DZ),rZ.addCzZ(Z,TZ),rZ.addCxDotX(Z,LZ),rZ.addCxDotY(Z,Cm),rZ.addCxDotZ(Z,pm),rZ.addCxDotXDot(Z,Om),rZ.addCyDotX(Z,Xm),rZ.addCyDotY(Z,wm),rZ.addCyDotZ(Z,Lm),rZ.addCyDotXDot(Z,Zh),rZ.addCyDotYDot(Z,mh),rZ.addCzDotX(Z,vm),rZ.addCzDotY(Z,Tm),rZ.addCzDotZ(Z,Gm),rZ.addCzDotXDot(Z,ym),rZ.addCzDotYDot(Z,Em),rZ.addCzDotZDot(Z,g),rZ.addManeuvers(Z,s),rZ.addUserDefinedBip0044Type(Z,N),rZ.addUserDefinedObjectDesignator(Z,c),rZ.addUserDefinedEarthModel(Z,x),rZ.addUserDefinedEpochTimestamp(Z,$),rZ.addUserDefinedEpochMicroseconds(Z,L),rZ.endOPM(Z)}unpack(){return new bd(this.CCSDS_OPM_VERS(),this.CREATION_DATE(),this.ORIGINATOR(),this.OBJECT_NAME(),this.OBJECT_ID(),this.CENTER_NAME(),this.REF_FRAME(),this.REF_FRAME_EPOCH(),this.TIME_SYSTEM(),this.COMMENT(),this.EPOCH(),this.X(),this.Y(),this.Z(),this.X_DOT(),this.Y_DOT(),this.Z_DOT(),this.SEMI_MAJOR_AXIS(),this.ECCENTRICITY(),this.INCLINATION(),this.RA_OF_ASC_NODE(),this.ARG_OF_PERICENTER(),this.TRUE_ANOMALY(),this.MEAN_ANOMALY(),this.GM(),this.MASS(),this.SOLAR_RAD_AREA(),this.SOLAR_RAD_COEFF(),this.DRAG_AREA(),this.DRAG_COEFF(),this.COV_REF_FRAME(),this.CX_X(),this.CY_X(),this.CY_Y(),this.CZ_X(),this.CZ_Y(),this.CZ_Z(),this.CX_DOT_X(),this.CX_DOT_Y(),this.CX_DOT_Z(),this.CX_DOT_X_DOT(),this.CY_DOT_X(),this.CY_DOT_Y(),this.CY_DOT_Z(),this.CY_DOT_X_DOT(),this.CY_DOT_Y_DOT(),this.CZ_DOT_X(),this.CZ_DOT_Y(),this.CZ_DOT_Z(),this.CZ_DOT_X_DOT(),this.CZ_DOT_Y_DOT(),this.CZ_DOT_Z_DOT(),this.bb.createObjList(this.MANEUVERS.bind(this),this.maneuversLength()),this.USER_DEFINED_BIP_0044_TYPE(),this.USER_DEFINED_OBJECT_DESIGNATOR(),this.USER_DEFINED_EARTH_MODEL(),this.USER_DEFINED_EPOCH_TIMESTAMP(),this.USER_DEFINED_EPOCH_MICROSECONDS())}unpackTo(Z){Z.CCSDS_OPM_VERS=this.CCSDS_OPM_VERS(),Z.CREATION_DATE=this.CREATION_DATE(),Z.ORIGINATOR=this.ORIGINATOR(),Z.OBJECT_NAME=this.OBJECT_NAME(),Z.OBJECT_ID=this.OBJECT_ID(),Z.CENTER_NAME=this.CENTER_NAME(),Z.REF_FRAME=this.REF_FRAME(),Z.REF_FRAME_EPOCH=this.REF_FRAME_EPOCH(),Z.TIME_SYSTEM=this.TIME_SYSTEM(),Z.COMMENT=this.COMMENT(),Z.EPOCH=this.EPOCH(),Z.X=this.X(),Z.Y=this.Y(),Z.Z=this.Z(),Z.X_DOT=this.X_DOT(),Z.Y_DOT=this.Y_DOT(),Z.Z_DOT=this.Z_DOT(),Z.SEMI_MAJOR_AXIS=this.SEMI_MAJOR_AXIS(),Z.ECCENTRICITY=this.ECCENTRICITY(),Z.INCLINATION=this.INCLINATION(),Z.RA_OF_ASC_NODE=this.RA_OF_ASC_NODE(),Z.ARG_OF_PERICENTER=this.ARG_OF_PERICENTER(),Z.TRUE_ANOMALY=this.TRUE_ANOMALY(),Z.MEAN_ANOMALY=this.MEAN_ANOMALY(),Z.GM=this.GM(),Z.MASS=this.MASS(),Z.SOLAR_RAD_AREA=this.SOLAR_RAD_AREA(),Z.SOLAR_RAD_COEFF=this.SOLAR_RAD_COEFF(),Z.DRAG_AREA=this.DRAG_AREA(),Z.DRAG_COEFF=this.DRAG_COEFF(),Z.COV_REF_FRAME=this.COV_REF_FRAME(),Z.CX_X=this.CX_X(),Z.CY_X=this.CY_X(),Z.CY_Y=this.CY_Y(),Z.CZ_X=this.CZ_X(),Z.CZ_Y=this.CZ_Y(),Z.CZ_Z=this.CZ_Z(),Z.CX_DOT_X=this.CX_DOT_X(),Z.CX_DOT_Y=this.CX_DOT_Y(),Z.CX_DOT_Z=this.CX_DOT_Z(),Z.CX_DOT_X_DOT=this.CX_DOT_X_DOT(),Z.CY_DOT_X=this.CY_DOT_X(),Z.CY_DOT_Y=this.CY_DOT_Y(),Z.CY_DOT_Z=this.CY_DOT_Z(),Z.CY_DOT_X_DOT=this.CY_DOT_X_DOT(),Z.CY_DOT_Y_DOT=this.CY_DOT_Y_DOT(),Z.CZ_DOT_X=this.CZ_DOT_X(),Z.CZ_DOT_Y=this.CZ_DOT_Y(),Z.CZ_DOT_Z=this.CZ_DOT_Z(),Z.CZ_DOT_X_DOT=this.CZ_DOT_X_DOT(),Z.CZ_DOT_Y_DOT=this.CZ_DOT_Y_DOT(),Z.CZ_DOT_Z_DOT=this.CZ_DOT_Z_DOT(),Z.MANEUVERS=this.bb.createObjList(this.MANEUVERS.bind(this),this.maneuversLength()),Z.USER_DEFINED_BIP_0044_TYPE=this.USER_DEFINED_BIP_0044_TYPE(),Z.USER_DEFINED_OBJECT_DESIGNATOR=this.USER_DEFINED_OBJECT_DESIGNATOR(),Z.USER_DEFINED_EARTH_MODEL=this.USER_DEFINED_EARTH_MODEL(),Z.USER_DEFINED_EPOCH_TIMESTAMP=this.USER_DEFINED_EPOCH_TIMESTAMP(),Z.USER_DEFINED_EPOCH_MICROSECONDS=this.USER_DEFINED_EPOCH_MICROSECONDS()}},bd=class{constructor(Z=0,m=null,h=null,n=null,i=null,A=null,t=0,W=null,e=0,G=null,F=null,d=0,J=0,k=0,r=0,Q=0,p=0,T=0,I=0,f=0,b=0,O=0,v=0,hZ=0,K=0,tZ=0,NZ=0,Y=0,ZZ=0,oZ=0,RZ=0,EZ=0,z=0,nZ=0,XZ=0,wZ=0,DZ=0,TZ=0,LZ=0,Cm=0,pm=0,Om=0,Xm=0,wm=0,Lm=0,Zh=0,mh=0,vm=0,Tm=0,Gm=0,ym=0,Em=0,g=[],s=0,N=null,c=null,x=0,$=0){this.CCSDS_OPM_VERS=Z,this.CREATION_DATE=m,this.ORIGINATOR=h,this.OBJECT_NAME=n,this.OBJECT_ID=i,this.CENTER_NAME=A,this.REF_FRAME=t,this.REF_FRAME_EPOCH=W,this.TIME_SYSTEM=e,this.COMMENT=G,this.EPOCH=F,this.X=d,this.Y=J,this.Z=k,this.X_DOT=r,this.Y_DOT=Q,this.Z_DOT=p,this.SEMI_MAJOR_AXIS=T,this.ECCENTRICITY=I,this.INCLINATION=f,this.RA_OF_ASC_NODE=b,this.ARG_OF_PERICENTER=O,this.TRUE_ANOMALY=v,this.MEAN_ANOMALY=hZ,this.GM=K,this.MASS=tZ,this.SOLAR_RAD_AREA=NZ,this.SOLAR_RAD_COEFF=Y,this.DRAG_AREA=ZZ,this.DRAG_COEFF=oZ,this.COV_REF_FRAME=RZ,this.CX_X=EZ,this.CY_X=z,this.CY_Y=nZ,this.CZ_X=XZ,this.CZ_Y=wZ,this.CZ_Z=DZ,this.CX_DOT_X=TZ,this.CX_DOT_Y=LZ,this.CX_DOT_Z=Cm,this.CX_DOT_X_DOT=pm,this.CY_DOT_X=Om,this.CY_DOT_Y=Xm,this.CY_DOT_Z=wm,this.CY_DOT_X_DOT=Lm,this.CY_DOT_Y_DOT=Zh,this.CZ_DOT_X=mh,this.CZ_DOT_Y=vm,this.CZ_DOT_Z=Tm,this.CZ_DOT_X_DOT=Gm,this.CZ_DOT_Y_DOT=ym,this.CZ_DOT_Z_DOT=Em,this.MANEUVERS=g,this.USER_DEFINED_BIP_0044_TYPE=s,this.USER_DEFINED_OBJECT_DESIGNATOR=N,this.USER_DEFINED_EARTH_MODEL=c,this.USER_DEFINED_EPOCH_TIMESTAMP=x,this.USER_DEFINED_EPOCH_MICROSECONDS=$}pack(Z){let m=this.CREATION_DATE!==null?Z.createString(this.CREATION_DATE):0,h=this.ORIGINATOR!==null?Z.createString(this.ORIGINATOR):0,n=this.OBJECT_NAME!==null?Z.createString(this.OBJECT_NAME):0,i=this.OBJECT_ID!==null?Z.createString(this.OBJECT_ID):0,A=this.CENTER_NAME!==null?Z.createString(this.CENTER_NAME):0,t=this.REF_FRAME_EPOCH!==null?Z.createString(this.REF_FRAME_EPOCH):0,W=this.COMMENT!==null?Z.createString(this.COMMENT):0,e=this.EPOCH!==null?Z.createString(this.EPOCH):0,G=rZ.createManeuversVector(Z,Z.createObjectOffsetList(this.MANEUVERS)),F=this.USER_DEFINED_OBJECT_DESIGNATOR!==null?Z.createString(this.USER_DEFINED_OBJECT_DESIGNATOR):0,d=this.USER_DEFINED_EARTH_MODEL!==null?Z.createString(this.USER_DEFINED_EARTH_MODEL):0;return rZ.createOPM(Z,this.CCSDS_OPM_VERS,m,h,n,i,A,this.REF_FRAME,t,this.TIME_SYSTEM,W,e,this.X,this.Y,this.Z,this.X_DOT,this.Y_DOT,this.Z_DOT,this.SEMI_MAJOR_AXIS,this.ECCENTRICITY,this.INCLINATION,this.RA_OF_ASC_NODE,this.ARG_OF_PERICENTER,this.TRUE_ANOMALY,this.MEAN_ANOMALY,this.GM,this.MASS,this.SOLAR_RAD_AREA,this.SOLAR_RAD_COEFF,this.DRAG_AREA,this.DRAG_COEFF,this.COV_REF_FRAME,this.CX_X,this.CY_X,this.CY_Y,this.CZ_X,this.CZ_Y,this.CZ_Z,this.CX_DOT_X,this.CX_DOT_Y,this.CX_DOT_Z,this.CX_DOT_X_DOT,this.CY_DOT_X,this.CY_DOT_Y,this.CY_DOT_Z,this.CY_DOT_X_DOT,this.CY_DOT_Y_DOT,this.CZ_DOT_X,this.CZ_DOT_Y,this.CZ_DOT_Z,this.CZ_DOT_X_DOT,this.CZ_DOT_Y_DOT,this.CZ_DOT_Z_DOT,G,this.USER_DEFINED_BIP_0044_TYPE,F,d,this.USER_DEFINED_EPOCH_TIMESTAMP,this.USER_DEFINED_EPOCH_MICROSECONDS)}},an=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsOPMCOLLECTION(Z,m){return(m||new an).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsOPMCOLLECTION(Z,m){return Z.setPosition(Z.position()+Nm),(m||new an).__init(Z.readInt32(Z.position())+Z.position(),Z)}RECORDS(Z,m){let h=this.bb.__offset(this.bb_pos,4);return h?(m||new rZ).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}recordsLength(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startOPMCOLLECTION(Z){Z.startObject(1)}static addRecords(Z,m){Z.addFieldOffset(0,m,0)}static createRecordsVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startRecordsVector(Z,m){Z.startVector(4,m,4)}static endOPMCOLLECTION(Z){return Z.endObject()}static createOPMCOLLECTION(Z,m){return an.startOPMCOLLECTION(Z),an.addRecords(Z,m),an.endOPMCOLLECTION(Z)}unpack(){return new xd(this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength()))}unpackTo(Z){Z.RECORDS=this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength())}},xd=class{constructor(Z=[]){this.RECORDS=Z}pack(Z){let m=an.createRecordsVector(Z,Z.createObjectOffsetList(this.RECORDS));return an.createOPMCOLLECTION(Z,m)}},vJ={};Vn(vJ,{OEM:()=>Lh,OEMCOLLECTION:()=>tn,OEMCOLLECTIONT:()=>Ld,OEMT:()=>Xd,covarianceMatrixLine:()=>mm,covarianceMatrixLineT:()=>Od,ephemerisDataBlock:()=>Qm,ephemerisDataBlockT:()=>zd,ephemerisDataLine:()=>eh,ephemerisDataLineT:()=>wd,manCovRefFrame:()=>_d,referenceFrame:()=>yd,timeSystem:()=>Hd});var _d=(Z=>(Z[Z.RSW=0]="RSW",Z[Z.RTN=1]="RTN",Z[Z.TNW=2]="TNW",Z))(_d||{}),mm=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAscovarianceMatrixLine(Z,m){return(m||new mm).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAscovarianceMatrixLine(Z,m){return Z.setPosition(Z.position()+Nm),(m||new mm).__init(Z.readInt32(Z.position())+Z.position(),Z)}EPOCH(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}COV_REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,6);return Z?this.bb.readInt8(this.bb_pos+Z):0}CX_X(){let Z=this.bb.__offset(this.bb_pos,8);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_X(){let Z=this.bb.__offset(this.bb_pos,10);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_Y(){let Z=this.bb.__offset(this.bb_pos,12);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_X(){let Z=this.bb.__offset(this.bb_pos,14);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_Y(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_Z(){let Z=this.bb.__offset(this.bb_pos,18);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_X(){let Z=this.bb.__offset(this.bb_pos,20);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,22);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,24);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CX_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,26);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_X(){let Z=this.bb.__offset(this.bb_pos,28);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,30);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,32);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,34);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CY_DOT_Y_DOT(){let Z=this.bb.__offset(this.bb_pos,36);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_X(){let Z=this.bb.__offset(this.bb_pos,38);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Y(){let Z=this.bb.__offset(this.bb_pos,40);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Z(){let Z=this.bb.__offset(this.bb_pos,42);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_X_DOT(){let Z=this.bb.__offset(this.bb_pos,44);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Y_DOT(){let Z=this.bb.__offset(this.bb_pos,46);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CZ_DOT_Z_DOT(){let Z=this.bb.__offset(this.bb_pos,48);return Z?this.bb.readFloat64(this.bb_pos+Z):0}static startcovarianceMatrixLine(Z){Z.startObject(23)}static addEpoch(Z,m){Z.addFieldOffset(0,m,0)}static addCovRefFrame(Z,m){Z.addFieldInt8(1,m,0)}static addCxX(Z,m){Z.addFieldFloat64(2,m,0)}static addCyX(Z,m){Z.addFieldFloat64(3,m,0)}static addCyY(Z,m){Z.addFieldFloat64(4,m,0)}static addCzX(Z,m){Z.addFieldFloat64(5,m,0)}static addCzY(Z,m){Z.addFieldFloat64(6,m,0)}static addCzZ(Z,m){Z.addFieldFloat64(7,m,0)}static addCxDotX(Z,m){Z.addFieldFloat64(8,m,0)}static addCxDotY(Z,m){Z.addFieldFloat64(9,m,0)}static addCxDotZ(Z,m){Z.addFieldFloat64(10,m,0)}static addCxDotXDot(Z,m){Z.addFieldFloat64(11,m,0)}static addCyDotX(Z,m){Z.addFieldFloat64(12,m,0)}static addCyDotY(Z,m){Z.addFieldFloat64(13,m,0)}static addCyDotZ(Z,m){Z.addFieldFloat64(14,m,0)}static addCyDotXDot(Z,m){Z.addFieldFloat64(15,m,0)}static addCyDotYDot(Z,m){Z.addFieldFloat64(16,m,0)}static addCzDotX(Z,m){Z.addFieldFloat64(17,m,0)}static addCzDotY(Z,m){Z.addFieldFloat64(18,m,0)}static addCzDotZ(Z,m){Z.addFieldFloat64(19,m,0)}static addCzDotXDot(Z,m){Z.addFieldFloat64(20,m,0)}static addCzDotYDot(Z,m){Z.addFieldFloat64(21,m,0)}static addCzDotZDot(Z,m){Z.addFieldFloat64(22,m,0)}static endcovarianceMatrixLine(Z){return Z.endObject()}static createcovarianceMatrixLine(Z,m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q,p,T,I,f,b,O,v,hZ){return mm.startcovarianceMatrixLine(Z),mm.addEpoch(Z,m),mm.addCovRefFrame(Z,h),mm.addCxX(Z,n),mm.addCyX(Z,i),mm.addCyY(Z,A),mm.addCzX(Z,t),mm.addCzY(Z,W),mm.addCzZ(Z,e),mm.addCxDotX(Z,G),mm.addCxDotY(Z,F),mm.addCxDotZ(Z,d),mm.addCxDotXDot(Z,J),mm.addCyDotX(Z,k),mm.addCyDotY(Z,r),mm.addCyDotZ(Z,Q),mm.addCyDotXDot(Z,p),mm.addCyDotYDot(Z,T),mm.addCzDotX(Z,I),mm.addCzDotY(Z,f),mm.addCzDotZ(Z,b),mm.addCzDotXDot(Z,O),mm.addCzDotYDot(Z,v),mm.addCzDotZDot(Z,hZ),mm.endcovarianceMatrixLine(Z)}unpack(){return new Od(this.EPOCH(),this.COV_REF_FRAME(),this.CX_X(),this.CY_X(),this.CY_Y(),this.CZ_X(),this.CZ_Y(),this.CZ_Z(),this.CX_DOT_X(),this.CX_DOT_Y(),this.CX_DOT_Z(),this.CX_DOT_X_DOT(),this.CY_DOT_X(),this.CY_DOT_Y(),this.CY_DOT_Z(),this.CY_DOT_X_DOT(),this.CY_DOT_Y_DOT(),this.CZ_DOT_X(),this.CZ_DOT_Y(),this.CZ_DOT_Z(),this.CZ_DOT_X_DOT(),this.CZ_DOT_Y_DOT(),this.CZ_DOT_Z_DOT())}unpackTo(Z){Z.EPOCH=this.EPOCH(),Z.COV_REF_FRAME=this.COV_REF_FRAME(),Z.CX_X=this.CX_X(),Z.CY_X=this.CY_X(),Z.CY_Y=this.CY_Y(),Z.CZ_X=this.CZ_X(),Z.CZ_Y=this.CZ_Y(),Z.CZ_Z=this.CZ_Z(),Z.CX_DOT_X=this.CX_DOT_X(),Z.CX_DOT_Y=this.CX_DOT_Y(),Z.CX_DOT_Z=this.CX_DOT_Z(),Z.CX_DOT_X_DOT=this.CX_DOT_X_DOT(),Z.CY_DOT_X=this.CY_DOT_X(),Z.CY_DOT_Y=this.CY_DOT_Y(),Z.CY_DOT_Z=this.CY_DOT_Z(),Z.CY_DOT_X_DOT=this.CY_DOT_X_DOT(),Z.CY_DOT_Y_DOT=this.CY_DOT_Y_DOT(),Z.CZ_DOT_X=this.CZ_DOT_X(),Z.CZ_DOT_Y=this.CZ_DOT_Y(),Z.CZ_DOT_Z=this.CZ_DOT_Z(),Z.CZ_DOT_X_DOT=this.CZ_DOT_X_DOT(),Z.CZ_DOT_Y_DOT=this.CZ_DOT_Y_DOT(),Z.CZ_DOT_Z_DOT=this.CZ_DOT_Z_DOT()}},Od=class{constructor(Z=null,m=0,h=0,n=0,i=0,A=0,t=0,W=0,e=0,G=0,F=0,d=0,J=0,k=0,r=0,Q=0,p=0,T=0,I=0,f=0,b=0,O=0,v=0){this.EPOCH=Z,this.COV_REF_FRAME=m,this.CX_X=h,this.CY_X=n,this.CY_Y=i,this.CZ_X=A,this.CZ_Y=t,this.CZ_Z=W,this.CX_DOT_X=e,this.CX_DOT_Y=G,this.CX_DOT_Z=F,this.CX_DOT_X_DOT=d,this.CY_DOT_X=J,this.CY_DOT_Y=k,this.CY_DOT_Z=r,this.CY_DOT_X_DOT=Q,this.CY_DOT_Y_DOT=p,this.CZ_DOT_X=T,this.CZ_DOT_Y=I,this.CZ_DOT_Z=f,this.CZ_DOT_X_DOT=b,this.CZ_DOT_Y_DOT=O,this.CZ_DOT_Z_DOT=v}pack(Z){let m=this.EPOCH!==null?Z.createString(this.EPOCH):0;return mm.createcovarianceMatrixLine(Z,m,this.COV_REF_FRAME,this.CX_X,this.CY_X,this.CY_Y,this.CZ_X,this.CZ_Y,this.CZ_Z,this.CX_DOT_X,this.CX_DOT_Y,this.CX_DOT_Z,this.CX_DOT_X_DOT,this.CY_DOT_X,this.CY_DOT_Y,this.CY_DOT_Z,this.CY_DOT_X_DOT,this.CY_DOT_Y_DOT,this.CZ_DOT_X,this.CZ_DOT_Y,this.CZ_DOT_Z,this.CZ_DOT_X_DOT,this.CZ_DOT_Y_DOT,this.CZ_DOT_Z_DOT)}},eh=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsephemerisDataLine(Z,m){return(m||new eh).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsephemerisDataLine(Z,m){return Z.setPosition(Z.position()+Nm),(m||new eh).__init(Z.readInt32(Z.position())+Z.position(),Z)}EPOCH(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}X(){let Z=this.bb.__offset(this.bb_pos,6);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Y(){let Z=this.bb.__offset(this.bb_pos,8);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Z(){let Z=this.bb.__offset(this.bb_pos,10);return Z?this.bb.readFloat64(this.bb_pos+Z):0}X_DOT(){let Z=this.bb.__offset(this.bb_pos,12);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Y_DOT(){let Z=this.bb.__offset(this.bb_pos,14);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Z_DOT(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readFloat64(this.bb_pos+Z):0}X_DDOT(){let Z=this.bb.__offset(this.bb_pos,18);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Y_DDOT(){let Z=this.bb.__offset(this.bb_pos,20);return Z?this.bb.readFloat64(this.bb_pos+Z):0}Z_DDOT(){let Z=this.bb.__offset(this.bb_pos,22);return Z?this.bb.readFloat64(this.bb_pos+Z):0}static startephemerisDataLine(Z){Z.startObject(10)}static addEpoch(Z,m){Z.addFieldOffset(0,m,0)}static addX(Z,m){Z.addFieldFloat64(1,m,0)}static addY(Z,m){Z.addFieldFloat64(2,m,0)}static addZ(Z,m){Z.addFieldFloat64(3,m,0)}static addXDot(Z,m){Z.addFieldFloat64(4,m,0)}static addYDot(Z,m){Z.addFieldFloat64(5,m,0)}static addZDot(Z,m){Z.addFieldFloat64(6,m,0)}static addXDdot(Z,m){Z.addFieldFloat64(7,m,0)}static addYDdot(Z,m){Z.addFieldFloat64(8,m,0)}static addZDdot(Z,m){Z.addFieldFloat64(9,m,0)}static endephemerisDataLine(Z){return Z.endObject()}static createephemerisDataLine(Z,m,h,n,i,A,t,W,e,G,F){return eh.startephemerisDataLine(Z),eh.addEpoch(Z,m),eh.addX(Z,h),eh.addY(Z,n),eh.addZ(Z,i),eh.addXDot(Z,A),eh.addYDot(Z,t),eh.addZDot(Z,W),eh.addXDdot(Z,e),eh.addYDdot(Z,G),eh.addZDdot(Z,F),eh.endephemerisDataLine(Z)}unpack(){return new wd(this.EPOCH(),this.X(),this.Y(),this.Z(),this.X_DOT(),this.Y_DOT(),this.Z_DOT(),this.X_DDOT(),this.Y_DDOT(),this.Z_DDOT())}unpackTo(Z){Z.EPOCH=this.EPOCH(),Z.X=this.X(),Z.Y=this.Y(),Z.Z=this.Z(),Z.X_DOT=this.X_DOT(),Z.Y_DOT=this.Y_DOT(),Z.Z_DOT=this.Z_DOT(),Z.X_DDOT=this.X_DDOT(),Z.Y_DDOT=this.Y_DDOT(),Z.Z_DDOT=this.Z_DDOT()}},wd=class{constructor(Z=null,m=0,h=0,n=0,i=0,A=0,t=0,W=0,e=0,G=0){this.EPOCH=Z,this.X=m,this.Y=h,this.Z=n,this.X_DOT=i,this.Y_DOT=A,this.Z_DOT=t,this.X_DDOT=W,this.Y_DDOT=e,this.Z_DDOT=G}pack(Z){let m=this.EPOCH!==null?Z.createString(this.EPOCH):0;return eh.createephemerisDataLine(Z,m,this.X,this.Y,this.Z,this.X_DOT,this.Y_DOT,this.Z_DOT,this.X_DDOT,this.Y_DDOT,this.Z_DDOT)}},yd=(Z=>(Z[Z.EME2000=0]="EME2000",Z[Z.GCRF=1]="GCRF",Z[Z.GRC=2]="GRC",Z[Z.ICRF=3]="ICRF",Z[Z.ITRF2000=4]="ITRF2000",Z[Z.ITRF93=5]="ITRF93",Z[Z.ITRF97=6]="ITRF97",Z[Z.MCI=7]="MCI",Z[Z.TDR=8]="TDR",Z[Z.TEME=9]="TEME",Z[Z.TOD=10]="TOD",Z))(yd||{}),Hd=(Z=>(Z[Z.GMST=0]="GMST",Z[Z.GPS=1]="GPS",Z[Z.MET=2]="MET",Z[Z.MRT=3]="MRT",Z[Z.SCLK=4]="SCLK",Z[Z.TAI=5]="TAI",Z[Z.TCB=6]="TCB",Z[Z.TDB=7]="TDB",Z[Z.TCG=8]="TCG",Z[Z.TT=9]="TT",Z[Z.UT1=10]="UT1",Z[Z.UTC=11]="UTC",Z))(Hd||{}),Qm=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsephemerisDataBlock(Z,m){return(m||new Qm).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsephemerisDataBlock(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Qm).__init(Z.readInt32(Z.position())+Z.position(),Z)}COMMENT(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_NAME(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}OBJECT_ID(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}CENTER_NAME(Z){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.__string(this.bb_pos+m,Z):null}REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,12);return Z?this.bb.readInt8(this.bb_pos+Z):0}REF_FRAME_EPOCH(Z){let m=this.bb.__offset(this.bb_pos,14);return m?this.bb.__string(this.bb_pos+m,Z):null}TIME_SYSTEM(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readInt8(this.bb_pos+Z):0}START_TIME(Z){let m=this.bb.__offset(this.bb_pos,18);return m?this.bb.__string(this.bb_pos+m,Z):null}USEABLE_START_TIME(Z){let m=this.bb.__offset(this.bb_pos,20);return m?this.bb.__string(this.bb_pos+m,Z):null}USEABLE_STOP_TIME(Z){let m=this.bb.__offset(this.bb_pos,22);return m?this.bb.__string(this.bb_pos+m,Z):null}STOP_TIME(Z){let m=this.bb.__offset(this.bb_pos,24);return m?this.bb.__string(this.bb_pos+m,Z):null}INTERPOLATION(Z){let m=this.bb.__offset(this.bb_pos,26);return m?this.bb.__string(this.bb_pos+m,Z):null}INTERPOLATION_DEGREE(){let Z=this.bb.__offset(this.bb_pos,28);return Z?this.bb.readUint32(this.bb_pos+Z):0}EPHEMERIS_DATA_LINES(Z,m){let h=this.bb.__offset(this.bb_pos,30);return h?(m||new eh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}ephemerisDataLinesLength(){let Z=this.bb.__offset(this.bb_pos,30);return Z?this.bb.__vector_len(this.bb_pos+Z):0}COVARIANCE_MATRIX_LINES(Z,m){let h=this.bb.__offset(this.bb_pos,32);return h?(m||new mm).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}covarianceMatrixLinesLength(){let Z=this.bb.__offset(this.bb_pos,32);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startephemerisDataBlock(Z){Z.startObject(15)}static addComment(Z,m){Z.addFieldOffset(0,m,0)}static addObjectName(Z,m){Z.addFieldOffset(1,m,0)}static addObjectId(Z,m){Z.addFieldOffset(2,m,0)}static addCenterName(Z,m){Z.addFieldOffset(3,m,0)}static addRefFrame(Z,m){Z.addFieldInt8(4,m,0)}static addRefFrameEpoch(Z,m){Z.addFieldOffset(5,m,0)}static addTimeSystem(Z,m){Z.addFieldInt8(6,m,0)}static addStartTime(Z,m){Z.addFieldOffset(7,m,0)}static addUseableStartTime(Z,m){Z.addFieldOffset(8,m,0)}static addUseableStopTime(Z,m){Z.addFieldOffset(9,m,0)}static addStopTime(Z,m){Z.addFieldOffset(10,m,0)}static addInterpolation(Z,m){Z.addFieldOffset(11,m,0)}static addInterpolationDegree(Z,m){Z.addFieldInt32(12,m,0)}static addEphemerisDataLines(Z,m){Z.addFieldOffset(13,m,0)}static createEphemerisDataLinesVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startEphemerisDataLinesVector(Z,m){Z.startVector(4,m,4)}static addCovarianceMatrixLines(Z,m){Z.addFieldOffset(14,m,0)}static createCovarianceMatrixLinesVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startCovarianceMatrixLinesVector(Z,m){Z.startVector(4,m,4)}static endephemerisDataBlock(Z){return Z.endObject()}static createephemerisDataBlock(Z,m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q){return Qm.startephemerisDataBlock(Z),Qm.addComment(Z,m),Qm.addObjectName(Z,h),Qm.addObjectId(Z,n),Qm.addCenterName(Z,i),Qm.addRefFrame(Z,A),Qm.addRefFrameEpoch(Z,t),Qm.addTimeSystem(Z,W),Qm.addStartTime(Z,e),Qm.addUseableStartTime(Z,G),Qm.addUseableStopTime(Z,F),Qm.addStopTime(Z,d),Qm.addInterpolation(Z,J),Qm.addInterpolationDegree(Z,k),Qm.addEphemerisDataLines(Z,r),Qm.addCovarianceMatrixLines(Z,Q),Qm.endephemerisDataBlock(Z)}unpack(){return new zd(this.COMMENT(),this.OBJECT_NAME(),this.OBJECT_ID(),this.CENTER_NAME(),this.REF_FRAME(),this.REF_FRAME_EPOCH(),this.TIME_SYSTEM(),this.START_TIME(),this.USEABLE_START_TIME(),this.USEABLE_STOP_TIME(),this.STOP_TIME(),this.INTERPOLATION(),this.INTERPOLATION_DEGREE(),this.bb.createObjList(this.EPHEMERIS_DATA_LINES.bind(this),this.ephemerisDataLinesLength()),this.bb.createObjList(this.COVARIANCE_MATRIX_LINES.bind(this),this.covarianceMatrixLinesLength()))}unpackTo(Z){Z.COMMENT=this.COMMENT(),Z.OBJECT_NAME=this.OBJECT_NAME(),Z.OBJECT_ID=this.OBJECT_ID(),Z.CENTER_NAME=this.CENTER_NAME(),Z.REF_FRAME=this.REF_FRAME(),Z.REF_FRAME_EPOCH=this.REF_FRAME_EPOCH(),Z.TIME_SYSTEM=this.TIME_SYSTEM(),Z.START_TIME=this.START_TIME(),Z.USEABLE_START_TIME=this.USEABLE_START_TIME(),Z.USEABLE_STOP_TIME=this.USEABLE_STOP_TIME(),Z.STOP_TIME=this.STOP_TIME(),Z.INTERPOLATION=this.INTERPOLATION(),Z.INTERPOLATION_DEGREE=this.INTERPOLATION_DEGREE(),Z.EPHEMERIS_DATA_LINES=this.bb.createObjList(this.EPHEMERIS_DATA_LINES.bind(this),this.ephemerisDataLinesLength()),Z.COVARIANCE_MATRIX_LINES=this.bb.createObjList(this.COVARIANCE_MATRIX_LINES.bind(this),this.covarianceMatrixLinesLength())}},zd=class{constructor(Z=null,m=null,h=null,n=null,i=0,A=null,t=0,W=null,e=null,G=null,F=null,d=null,J=0,k=[],r=[]){this.COMMENT=Z,this.OBJECT_NAME=m,this.OBJECT_ID=h,this.CENTER_NAME=n,this.REF_FRAME=i,this.REF_FRAME_EPOCH=A,this.TIME_SYSTEM=t,this.START_TIME=W,this.USEABLE_START_TIME=e,this.USEABLE_STOP_TIME=G,this.STOP_TIME=F,this.INTERPOLATION=d,this.INTERPOLATION_DEGREE=J,this.EPHEMERIS_DATA_LINES=k,this.COVARIANCE_MATRIX_LINES=r}pack(Z){let m=this.COMMENT!==null?Z.createString(this.COMMENT):0,h=this.OBJECT_NAME!==null?Z.createString(this.OBJECT_NAME):0,n=this.OBJECT_ID!==null?Z.createString(this.OBJECT_ID):0,i=this.CENTER_NAME!==null?Z.createString(this.CENTER_NAME):0,A=this.REF_FRAME_EPOCH!==null?Z.createString(this.REF_FRAME_EPOCH):0,t=this.START_TIME!==null?Z.createString(this.START_TIME):0,W=this.USEABLE_START_TIME!==null?Z.createString(this.USEABLE_START_TIME):0,e=this.USEABLE_STOP_TIME!==null?Z.createString(this.USEABLE_STOP_TIME):0,G=this.STOP_TIME!==null?Z.createString(this.STOP_TIME):0,F=this.INTERPOLATION!==null?Z.createString(this.INTERPOLATION):0,d=Qm.createEphemerisDataLinesVector(Z,Z.createObjectOffsetList(this.EPHEMERIS_DATA_LINES)),J=Qm.createCovarianceMatrixLinesVector(Z,Z.createObjectOffsetList(this.COVARIANCE_MATRIX_LINES));return Qm.createephemerisDataBlock(Z,m,h,n,i,this.REF_FRAME,A,this.TIME_SYSTEM,t,W,e,G,F,this.INTERPOLATION_DEGREE,d,J)}},Lh=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsOEM(Z,m){return(m||new Lh).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsOEM(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Lh).__init(Z.readInt32(Z.position())+Z.position(),Z)}static bufferHasIdentifier(Z){return Z.__has_identifier("$OEM")}CCSDS_OEM_VERS(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.readFloat64(this.bb_pos+Z):0}CREATION_DATE(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}ORIGINATOR(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}EPHEMERIS_DATA_BLOCK(Z,m){let h=this.bb.__offset(this.bb_pos,10);return h?(m||new Qm).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}ephemerisDataBlockLength(){let Z=this.bb.__offset(this.bb_pos,10);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startOEM(Z){Z.startObject(4)}static addCcsdsOemVers(Z,m){Z.addFieldFloat64(0,m,0)}static addCreationDate(Z,m){Z.addFieldOffset(1,m,0)}static addOriginator(Z,m){Z.addFieldOffset(2,m,0)}static addEphemerisDataBlock(Z,m){Z.addFieldOffset(3,m,0)}static createEphemerisDataBlockVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startEphemerisDataBlockVector(Z,m){Z.startVector(4,m,4)}static endOEM(Z){return Z.endObject()}static finishOEMBuffer(Z,m){Z.finish(m,"$OEM")}static finishSizePrefixedOEMBuffer(Z,m){Z.finish(m,"$OEM",!0)}static createOEM(Z,m,h,n,i){return Lh.startOEM(Z),Lh.addCcsdsOemVers(Z,m),Lh.addCreationDate(Z,h),Lh.addOriginator(Z,n),Lh.addEphemerisDataBlock(Z,i),Lh.endOEM(Z)}unpack(){return new Xd(this.CCSDS_OEM_VERS(),this.CREATION_DATE(),this.ORIGINATOR(),this.bb.createObjList(this.EPHEMERIS_DATA_BLOCK.bind(this),this.ephemerisDataBlockLength()))}unpackTo(Z){Z.CCSDS_OEM_VERS=this.CCSDS_OEM_VERS(),Z.CREATION_DATE=this.CREATION_DATE(),Z.ORIGINATOR=this.ORIGINATOR(),Z.EPHEMERIS_DATA_BLOCK=this.bb.createObjList(this.EPHEMERIS_DATA_BLOCK.bind(this),this.ephemerisDataBlockLength())}},Xd=class{constructor(Z=0,m=null,h=null,n=[]){this.CCSDS_OEM_VERS=Z,this.CREATION_DATE=m,this.ORIGINATOR=h,this.EPHEMERIS_DATA_BLOCK=n}pack(Z){let m=this.CREATION_DATE!==null?Z.createString(this.CREATION_DATE):0,h=this.ORIGINATOR!==null?Z.createString(this.ORIGINATOR):0,n=Lh.createEphemerisDataBlockVector(Z,Z.createObjectOffsetList(this.EPHEMERIS_DATA_BLOCK));return Lh.createOEM(Z,this.CCSDS_OEM_VERS,m,h,n)}},tn=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsOEMCOLLECTION(Z,m){return(m||new tn).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsOEMCOLLECTION(Z,m){return Z.setPosition(Z.position()+Nm),(m||new tn).__init(Z.readInt32(Z.position())+Z.position(),Z)}RECORDS(Z,m){let h=this.bb.__offset(this.bb_pos,4);return h?(m||new Lh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}recordsLength(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startOEMCOLLECTION(Z){Z.startObject(1)}static addRecords(Z,m){Z.addFieldOffset(0,m,0)}static createRecordsVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startRecordsVector(Z,m){Z.startVector(4,m,4)}static endOEMCOLLECTION(Z){return Z.endObject()}static createOEMCOLLECTION(Z,m){return tn.startOEMCOLLECTION(Z),tn.addRecords(Z,m),tn.endOEMCOLLECTION(Z)}unpack(){return new Ld(this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength()))}unpackTo(Z){Z.RECORDS=this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength())}},Ld=class{constructor(Z=[]){this.RECORDS=Z}pack(Z){let m=tn.createRecordsVector(Z,Z.createObjectOffsetList(this.RECORDS));return tn.createOEMCOLLECTION(Z,m)}},PJ={};Vn(PJ,{MPE:()=>Fh,MPECOLLECTION:()=>ch,MPECOLLECTIONT:()=>$d,MPET:()=>vd,meanElementTheory:()=>Pd,referenceFrame:()=>Kd,timeSystem:()=>qd});var Fh=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsMPE(Z,m){return(m||new Fh).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsMPE(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Fh).__init(Z.readInt32(Z.position())+Z.position(),Z)}static bufferHasIdentifier(Z){return Z.__has_identifier("$MPE")}ENTITY_ID(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}EPOCH(){let Z=this.bb.__offset(this.bb_pos,6);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MEAN_MOTION(){let Z=this.bb.__offset(this.bb_pos,8);return Z?this.bb.readFloat64(this.bb_pos+Z):0}ECCENTRICITY(){let Z=this.bb.__offset(this.bb_pos,10);return Z?this.bb.readFloat64(this.bb_pos+Z):0}INCLINATION(){let Z=this.bb.__offset(this.bb_pos,12);return Z?this.bb.readFloat64(this.bb_pos+Z):0}RA_OF_ASC_NODE(){let Z=this.bb.__offset(this.bb_pos,14);return Z?this.bb.readFloat64(this.bb_pos+Z):0}ARG_OF_PERICENTER(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MEAN_ANOMALY(){let Z=this.bb.__offset(this.bb_pos,18);return Z?this.bb.readFloat64(this.bb_pos+Z):0}BSTAR(){let Z=this.bb.__offset(this.bb_pos,20);return Z?this.bb.readFloat64(this.bb_pos+Z):0}static startMPE(Z){Z.startObject(9)}static addEntityId(Z,m){Z.addFieldOffset(0,m,0)}static addEpoch(Z,m){Z.addFieldFloat64(1,m,0)}static addMeanMotion(Z,m){Z.addFieldFloat64(2,m,0)}static addEccentricity(Z,m){Z.addFieldFloat64(3,m,0)}static addInclination(Z,m){Z.addFieldFloat64(4,m,0)}static addRaOfAscNode(Z,m){Z.addFieldFloat64(5,m,0)}static addArgOfPericenter(Z,m){Z.addFieldFloat64(6,m,0)}static addMeanAnomaly(Z,m){Z.addFieldFloat64(7,m,0)}static addBstar(Z,m){Z.addFieldFloat64(8,m,0)}static endMPE(Z){return Z.endObject()}static finishMPEBuffer(Z,m){Z.finish(m,"$MPE")}static finishSizePrefixedMPEBuffer(Z,m){Z.finish(m,"$MPE",!0)}static createMPE(Z,m,h,n,i,A,t,W,e,G){return Fh.startMPE(Z),Fh.addEntityId(Z,m),Fh.addEpoch(Z,h),Fh.addMeanMotion(Z,n),Fh.addEccentricity(Z,i),Fh.addInclination(Z,A),Fh.addRaOfAscNode(Z,t),Fh.addArgOfPericenter(Z,W),Fh.addMeanAnomaly(Z,e),Fh.addBstar(Z,G),Fh.endMPE(Z)}unpack(){return new vd(this.ENTITY_ID(),this.EPOCH(),this.MEAN_MOTION(),this.ECCENTRICITY(),this.INCLINATION(),this.RA_OF_ASC_NODE(),this.ARG_OF_PERICENTER(),this.MEAN_ANOMALY(),this.BSTAR())}unpackTo(Z){Z.ENTITY_ID=this.ENTITY_ID(),Z.EPOCH=this.EPOCH(),Z.MEAN_MOTION=this.MEAN_MOTION(),Z.ECCENTRICITY=this.ECCENTRICITY(),Z.INCLINATION=this.INCLINATION(),Z.RA_OF_ASC_NODE=this.RA_OF_ASC_NODE(),Z.ARG_OF_PERICENTER=this.ARG_OF_PERICENTER(),Z.MEAN_ANOMALY=this.MEAN_ANOMALY(),Z.BSTAR=this.BSTAR()}},vd=class{constructor(Z=null,m=0,h=0,n=0,i=0,A=0,t=0,W=0,e=0){this.ENTITY_ID=Z,this.EPOCH=m,this.MEAN_MOTION=h,this.ECCENTRICITY=n,this.INCLINATION=i,this.RA_OF_ASC_NODE=A,this.ARG_OF_PERICENTER=t,this.MEAN_ANOMALY=W,this.BSTAR=e}pack(Z){let m=this.ENTITY_ID!==null?Z.createString(this.ENTITY_ID):0;return Fh.createMPE(Z,m,this.EPOCH,this.MEAN_MOTION,this.ECCENTRICITY,this.INCLINATION,this.RA_OF_ASC_NODE,this.ARG_OF_PERICENTER,this.MEAN_ANOMALY,this.BSTAR)}},Pd=(Z=>(Z[Z.SGP4=0]="SGP4",Z[Z.DSST=1]="DSST",Z[Z.USM=2]="USM",Z))(Pd||{}),Kd=(Z=>(Z[Z.EME2000=0]="EME2000",Z[Z.GCRF=1]="GCRF",Z[Z.GRC=2]="GRC",Z[Z.ICRF=3]="ICRF",Z[Z.ITRF2000=4]="ITRF2000",Z[Z.ITRF93=5]="ITRF93",Z[Z.ITRF97=6]="ITRF97",Z[Z.MCI=7]="MCI",Z[Z.TDR=8]="TDR",Z[Z.TEME=9]="TEME",Z[Z.TOD=10]="TOD",Z))(Kd||{}),qd=(Z=>(Z[Z.GMST=0]="GMST",Z[Z.GPS=1]="GPS",Z[Z.MET=2]="MET",Z[Z.MRT=3]="MRT",Z[Z.SCLK=4]="SCLK",Z[Z.TAI=5]="TAI",Z[Z.TCB=6]="TCB",Z[Z.TDB=7]="TDB",Z[Z.TCG=8]="TCG",Z[Z.TT=9]="TT",Z[Z.UT1=10]="UT1",Z[Z.UTC=11]="UTC",Z))(qd||{}),ch=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsMPECOLLECTION(Z,m){return(m||new ch).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsMPECOLLECTION(Z,m){return Z.setPosition(Z.position()+Nm),(m||new ch).__init(Z.readInt32(Z.position())+Z.position(),Z)}CLASSIFICATION_TYPE(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}REF_FRAME(){let Z=this.bb.__offset(this.bb_pos,6);return Z?this.bb.readInt8(this.bb_pos+Z):9}REF_FRAME_EPOCH(){let Z=this.bb.__offset(this.bb_pos,8);return Z?this.bb.readFloat64(this.bb_pos+Z):0}TIME_SYSTEM(){let Z=this.bb.__offset(this.bb_pos,10);return Z?this.bb.readInt8(this.bb_pos+Z):11}MEAN_ELEMENT_THEORY(){let Z=this.bb.__offset(this.bb_pos,12);return Z?this.bb.readInt8(this.bb_pos+Z):0}RECORDS(Z,m){let h=this.bb.__offset(this.bb_pos,14);return h?(m||new Fh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}recordsLength(){let Z=this.bb.__offset(this.bb_pos,14);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startMPECOLLECTION(Z){Z.startObject(6)}static addClassificationType(Z,m){Z.addFieldOffset(0,m,0)}static addRefFrame(Z,m){Z.addFieldInt8(1,m,9)}static addRefFrameEpoch(Z,m){Z.addFieldFloat64(2,m,0)}static addTimeSystem(Z,m){Z.addFieldInt8(3,m,11)}static addMeanElementTheory(Z,m){Z.addFieldInt8(4,m,0)}static addRecords(Z,m){Z.addFieldOffset(5,m,0)}static createRecordsVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startRecordsVector(Z,m){Z.startVector(4,m,4)}static endMPECOLLECTION(Z){return Z.endObject()}static createMPECOLLECTION(Z,m,h,n,i,A,t){return ch.startMPECOLLECTION(Z),ch.addClassificationType(Z,m),ch.addRefFrame(Z,h),ch.addRefFrameEpoch(Z,n),ch.addTimeSystem(Z,i),ch.addMeanElementTheory(Z,A),ch.addRecords(Z,t),ch.endMPECOLLECTION(Z)}unpack(){return new $d(this.CLASSIFICATION_TYPE(),this.REF_FRAME(),this.REF_FRAME_EPOCH(),this.TIME_SYSTEM(),this.MEAN_ELEMENT_THEORY(),this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength()))}unpackTo(Z){Z.CLASSIFICATION_TYPE=this.CLASSIFICATION_TYPE(),Z.REF_FRAME=this.REF_FRAME(),Z.REF_FRAME_EPOCH=this.REF_FRAME_EPOCH(),Z.TIME_SYSTEM=this.TIME_SYSTEM(),Z.MEAN_ELEMENT_THEORY=this.MEAN_ELEMENT_THEORY(),Z.RECORDS=this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength())}},$d=class{constructor(Z=null,m=9,h=0,n=11,i=0,A=[]){this.CLASSIFICATION_TYPE=Z,this.REF_FRAME=m,this.REF_FRAME_EPOCH=h,this.TIME_SYSTEM=n,this.MEAN_ELEMENT_THEORY=i,this.RECORDS=A}pack(Z){let m=this.CLASSIFICATION_TYPE!==null?Z.createString(this.CLASSIFICATION_TYPE):0,h=ch.createRecordsVector(Z,Z.createObjectOffsetList(this.RECORDS));return ch.createMPECOLLECTION(Z,m,this.REF_FRAME,this.REF_FRAME_EPOCH,this.TIME_SYSTEM,this.MEAN_ELEMENT_THEORY,h)}},KJ={};Vn(KJ,{ContactPoint:()=>_m,ContactPointT:()=>Z2,CryptoKey:()=>Th,CryptoKeyT:()=>m2,Occupation:()=>Wn,OccupationT:()=>h2,Organization:()=>_Y,OrganizationT:()=>Y2,UPM:()=>Rm,UPMCOLLECTION:()=>en,UPMCOLLECTIONT:()=>i2,UPMT:()=>n2});var _m=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsContactPoint(Z,m){return(m||new _m).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsContactPoint(Z,m){return Z.setPosition(Z.position()+Nm),(m||new _m).__init(Z.readInt32(Z.position())+Z.position(),Z)}NAME(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}CONTACT_TYPE(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}EMAIL(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}TELEPHONE(Z){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.__string(this.bb_pos+m,Z):null}CONTACT_OPTION(Z){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.__string(this.bb_pos+m,Z):null}AREA_SERVED(Z){let m=this.bb.__offset(this.bb_pos,14);return m?this.bb.__string(this.bb_pos+m,Z):null}AVAILABLE_LANGUAGE(Z){let m=this.bb.__offset(this.bb_pos,16);return m?this.bb.__string(this.bb_pos+m,Z):null}ADDRESS_COUNTRY(Z){let m=this.bb.__offset(this.bb_pos,18);return m?this.bb.__string(this.bb_pos+m,Z):null}ADDRESS_REGION(Z){let m=this.bb.__offset(this.bb_pos,20);return m?this.bb.__string(this.bb_pos+m,Z):null}ADDRESS_LOCALITY(Z){let m=this.bb.__offset(this.bb_pos,22);return m?this.bb.__string(this.bb_pos+m,Z):null}POSTAL_CODE(Z){let m=this.bb.__offset(this.bb_pos,24);return m?this.bb.__string(this.bb_pos+m,Z):null}STREET_ADDRESS(Z){let m=this.bb.__offset(this.bb_pos,26);return m?this.bb.__string(this.bb_pos+m,Z):null}POST_OFFICE_BOX_NUMBER(Z){let m=this.bb.__offset(this.bb_pos,28);return m?this.bb.__string(this.bb_pos+m,Z):null}static startContactPoint(Z){Z.startObject(13)}static addName(Z,m){Z.addFieldOffset(0,m,0)}static addContactType(Z,m){Z.addFieldOffset(1,m,0)}static addEmail(Z,m){Z.addFieldOffset(2,m,0)}static addTelephone(Z,m){Z.addFieldOffset(3,m,0)}static addContactOption(Z,m){Z.addFieldOffset(4,m,0)}static addAreaServed(Z,m){Z.addFieldOffset(5,m,0)}static addAvailableLanguage(Z,m){Z.addFieldOffset(6,m,0)}static addAddressCountry(Z,m){Z.addFieldOffset(7,m,0)}static addAddressRegion(Z,m){Z.addFieldOffset(8,m,0)}static addAddressLocality(Z,m){Z.addFieldOffset(9,m,0)}static addPostalCode(Z,m){Z.addFieldOffset(10,m,0)}static addStreetAddress(Z,m){Z.addFieldOffset(11,m,0)}static addPostOfficeBoxNumber(Z,m){Z.addFieldOffset(12,m,0)}static endContactPoint(Z){return Z.endObject()}static createContactPoint(Z,m,h,n,i,A,t,W,e,G,F,d,J,k){return _m.startContactPoint(Z),_m.addName(Z,m),_m.addContactType(Z,h),_m.addEmail(Z,n),_m.addTelephone(Z,i),_m.addContactOption(Z,A),_m.addAreaServed(Z,t),_m.addAvailableLanguage(Z,W),_m.addAddressCountry(Z,e),_m.addAddressRegion(Z,G),_m.addAddressLocality(Z,F),_m.addPostalCode(Z,d),_m.addStreetAddress(Z,J),_m.addPostOfficeBoxNumber(Z,k),_m.endContactPoint(Z)}unpack(){return new Z2(this.NAME(),this.CONTACT_TYPE(),this.EMAIL(),this.TELEPHONE(),this.CONTACT_OPTION(),this.AREA_SERVED(),this.AVAILABLE_LANGUAGE(),this.ADDRESS_COUNTRY(),this.ADDRESS_REGION(),this.ADDRESS_LOCALITY(),this.POSTAL_CODE(),this.STREET_ADDRESS(),this.POST_OFFICE_BOX_NUMBER())}unpackTo(Z){Z.NAME=this.NAME(),Z.CONTACT_TYPE=this.CONTACT_TYPE(),Z.EMAIL=this.EMAIL(),Z.TELEPHONE=this.TELEPHONE(),Z.CONTACT_OPTION=this.CONTACT_OPTION(),Z.AREA_SERVED=this.AREA_SERVED(),Z.AVAILABLE_LANGUAGE=this.AVAILABLE_LANGUAGE(),Z.ADDRESS_COUNTRY=this.ADDRESS_COUNTRY(),Z.ADDRESS_REGION=this.ADDRESS_REGION(),Z.ADDRESS_LOCALITY=this.ADDRESS_LOCALITY(),Z.POSTAL_CODE=this.POSTAL_CODE(),Z.STREET_ADDRESS=this.STREET_ADDRESS(),Z.POST_OFFICE_BOX_NUMBER=this.POST_OFFICE_BOX_NUMBER()}},Z2=class{constructor(Z=null,m=null,h=null,n=null,i=null,A=null,t=null,W=null,e=null,G=null,F=null,d=null,J=null){this.NAME=Z,this.CONTACT_TYPE=m,this.EMAIL=h,this.TELEPHONE=n,this.CONTACT_OPTION=i,this.AREA_SERVED=A,this.AVAILABLE_LANGUAGE=t,this.ADDRESS_COUNTRY=W,this.ADDRESS_REGION=e,this.ADDRESS_LOCALITY=G,this.POSTAL_CODE=F,this.STREET_ADDRESS=d,this.POST_OFFICE_BOX_NUMBER=J}pack(Z){let m=this.NAME!==null?Z.createString(this.NAME):0,h=this.CONTACT_TYPE!==null?Z.createString(this.CONTACT_TYPE):0,n=this.EMAIL!==null?Z.createString(this.EMAIL):0,i=this.TELEPHONE!==null?Z.createString(this.TELEPHONE):0,A=this.CONTACT_OPTION!==null?Z.createString(this.CONTACT_OPTION):0,t=this.AREA_SERVED!==null?Z.createString(this.AREA_SERVED):0,W=this.AVAILABLE_LANGUAGE!==null?Z.createString(this.AVAILABLE_LANGUAGE):0,e=this.ADDRESS_COUNTRY!==null?Z.createString(this.ADDRESS_COUNTRY):0,G=this.ADDRESS_REGION!==null?Z.createString(this.ADDRESS_REGION):0,F=this.ADDRESS_LOCALITY!==null?Z.createString(this.ADDRESS_LOCALITY):0,d=this.POSTAL_CODE!==null?Z.createString(this.POSTAL_CODE):0,J=this.STREET_ADDRESS!==null?Z.createString(this.STREET_ADDRESS):0,k=this.POST_OFFICE_BOX_NUMBER!==null?Z.createString(this.POST_OFFICE_BOX_NUMBER):0;return _m.createContactPoint(Z,m,h,n,i,A,t,W,e,G,F,d,J,k)}},Th=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsCryptoKey(Z,m){return(m||new Th).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsCryptoKey(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Th).__init(Z.readInt32(Z.position())+Z.position(),Z)}PUBLIC_KEY(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}XPUB(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}PRIVATE_KEY(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}XPRIV(Z){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.__string(this.bb_pos+m,Z):null}KEY_ADDRESS(Z){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.__string(this.bb_pos+m,Z):null}ADDRESS_TYPE(){let Z=this.bb.__offset(this.bb_pos,14);return Z?this.bb.readInt32(this.bb_pos+Z):0}static startCryptoKey(Z){Z.startObject(6)}static addPublicKey(Z,m){Z.addFieldOffset(0,m,0)}static addXpub(Z,m){Z.addFieldOffset(1,m,0)}static addPrivateKey(Z,m){Z.addFieldOffset(2,m,0)}static addXpriv(Z,m){Z.addFieldOffset(3,m,0)}static addKeyAddress(Z,m){Z.addFieldOffset(4,m,0)}static addAddressType(Z,m){Z.addFieldInt32(5,m,0)}static endCryptoKey(Z){return Z.endObject()}static createCryptoKey(Z,m,h,n,i,A,t){return Th.startCryptoKey(Z),Th.addPublicKey(Z,m),Th.addXpub(Z,h),Th.addPrivateKey(Z,n),Th.addXpriv(Z,i),Th.addKeyAddress(Z,A),Th.addAddressType(Z,t),Th.endCryptoKey(Z)}unpack(){return new m2(this.PUBLIC_KEY(),this.XPUB(),this.PRIVATE_KEY(),this.XPRIV(),this.KEY_ADDRESS(),this.ADDRESS_TYPE())}unpackTo(Z){Z.PUBLIC_KEY=this.PUBLIC_KEY(),Z.XPUB=this.XPUB(),Z.PRIVATE_KEY=this.PRIVATE_KEY(),Z.XPRIV=this.XPRIV(),Z.KEY_ADDRESS=this.KEY_ADDRESS(),Z.ADDRESS_TYPE=this.ADDRESS_TYPE()}},m2=class{constructor(Z=null,m=null,h=null,n=null,i=null,A=0){this.PUBLIC_KEY=Z,this.XPUB=m,this.PRIVATE_KEY=h,this.XPRIV=n,this.KEY_ADDRESS=i,this.ADDRESS_TYPE=A}pack(Z){let m=this.PUBLIC_KEY!==null?Z.createString(this.PUBLIC_KEY):0,h=this.XPUB!==null?Z.createString(this.XPUB):0,n=this.PRIVATE_KEY!==null?Z.createString(this.PRIVATE_KEY):0,i=this.XPRIV!==null?Z.createString(this.XPRIV):0,A=this.KEY_ADDRESS!==null?Z.createString(this.KEY_ADDRESS):0;return Th.createCryptoKey(Z,m,h,n,i,A,this.ADDRESS_TYPE)}},Wn=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsOccupation(Z,m){return(m||new Wn).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsOccupation(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Wn).__init(Z.readInt32(Z.position())+Z.position(),Z)}NAME(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}static startOccupation(Z){Z.startObject(1)}static addName(Z,m){Z.addFieldOffset(0,m,0)}static endOccupation(Z){return Z.endObject()}static createOccupation(Z,m){return Wn.startOccupation(Z),Wn.addName(Z,m),Wn.endOccupation(Z)}unpack(){return new h2(this.NAME())}unpackTo(Z){Z.NAME=this.NAME()}},h2=class{constructor(Z=null){this.NAME=Z}pack(Z){let m=this.NAME!==null?Z.createString(this.NAME):0;return Wn.createOccupation(Z,m)}},_Y=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsOrganization(Z,m){return(m||new _Y).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsOrganization(Z,m){return Z.setPosition(Z.position()+Nm),(m||new _Y).__init(Z.readInt32(Z.position())+Z.position(),Z)}NAME(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}LEGAL_NAME(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}static startOrganization(Z){Z.startObject(2)}static addName(Z,m){Z.addFieldOffset(0,m,0)}static addLegalName(Z,m){Z.addFieldOffset(1,m,0)}static endOrganization(Z){return Z.endObject()}static createOrganization(Z,m,h){return _Y.startOrganization(Z),_Y.addName(Z,m),_Y.addLegalName(Z,h),_Y.endOrganization(Z)}unpack(){return new Y2(this.NAME(),this.LEGAL_NAME())}unpackTo(Z){Z.NAME=this.NAME(),Z.LEGAL_NAME=this.LEGAL_NAME()}},Y2=class{constructor(Z=null,m=null){this.NAME=Z,this.LEGAL_NAME=m}pack(Z){let m=this.NAME!==null?Z.createString(this.NAME):0,h=this.LEGAL_NAME!==null?Z.createString(this.LEGAL_NAME):0;return _Y.createOrganization(Z,m,h)}},Rm=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsUPM(Z,m){return(m||new Rm).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsUPM(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Rm).__init(Z.readInt32(Z.position())+Z.position(),Z)}static bufferHasIdentifier(Z){return Z.__has_identifier("$UPM")}NAME(Z){let m=this.bb.__offset(this.bb_pos,4);return m?this.bb.__string(this.bb_pos+m,Z):null}ALTERNATE_NAME(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}DESCRIPTION(Z){let m=this.bb.__offset(this.bb_pos,8);return m?this.bb.__string(this.bb_pos+m,Z):null}IMAGE(Z){let m=this.bb.__offset(this.bb_pos,10);return m?this.bb.__string(this.bb_pos+m,Z):null}SAME_AS(Z){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.__string(this.bb_pos+m,Z):null}URL(Z){let m=this.bb.__offset(this.bb_pos,14);return m?this.bb.__string(this.bb_pos+m,Z):null}TELEPHONE(Z){let m=this.bb.__offset(this.bb_pos,16);return m?this.bb.__string(this.bb_pos+m,Z):null}EMAIL(Z){let m=this.bb.__offset(this.bb_pos,18);return m?this.bb.__string(this.bb_pos+m,Z):null}KEY(Z,m){let h=this.bb.__offset(this.bb_pos,20);return h?(m||new Th).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}keyLength(){let Z=this.bb.__offset(this.bb_pos,20);return Z?this.bb.__vector_len(this.bb_pos+Z):0}CONTACT_POINT(Z,m){let h=this.bb.__offset(this.bb_pos,22);return h?(m||new _m).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}contactPointLength(){let Z=this.bb.__offset(this.bb_pos,22);return Z?this.bb.__vector_len(this.bb_pos+Z):0}ADDRESS(Z){let m=this.bb.__offset(this.bb_pos,24);return m?(Z||new _m).__init(this.bb.__indirect(this.bb_pos+m),this.bb):null}JOB_TITLE(Z){let m=this.bb.__offset(this.bb_pos,26);return m?this.bb.__string(this.bb_pos+m,Z):null}AFFILIATION(Z){let m=this.bb.__offset(this.bb_pos,28);return m?(Z||new _Y).__init(this.bb.__indirect(this.bb_pos+m),this.bb):null}HAS_OCCUPATION(Z){let m=this.bb.__offset(this.bb_pos,30);return m?(Z||new Wn).__init(this.bb.__indirect(this.bb_pos+m),this.bb):null}FAMILY_NAME(Z){let m=this.bb.__offset(this.bb_pos,32);return m?this.bb.__string(this.bb_pos+m,Z):null}GIVEN_NAME(Z){let m=this.bb.__offset(this.bb_pos,34);return m?this.bb.__string(this.bb_pos+m,Z):null}ADDITIONAL_NAME(Z){let m=this.bb.__offset(this.bb_pos,36);return m?this.bb.__string(this.bb_pos+m,Z):null}HONORIFIC_PREFIX(Z){let m=this.bb.__offset(this.bb_pos,38);return m?this.bb.__string(this.bb_pos+m,Z):null}HONORIFIC_SUFFIX(Z){let m=this.bb.__offset(this.bb_pos,40);return m?this.bb.__string(this.bb_pos+m,Z):null}static startUPM(Z){Z.startObject(19)}static addName(Z,m){Z.addFieldOffset(0,m,0)}static addAlternateName(Z,m){Z.addFieldOffset(1,m,0)}static addDescription(Z,m){Z.addFieldOffset(2,m,0)}static addImage(Z,m){Z.addFieldOffset(3,m,0)}static addSameAs(Z,m){Z.addFieldOffset(4,m,0)}static addUrl(Z,m){Z.addFieldOffset(5,m,0)}static addTelephone(Z,m){Z.addFieldOffset(6,m,0)}static addEmail(Z,m){Z.addFieldOffset(7,m,0)}static addKey(Z,m){Z.addFieldOffset(8,m,0)}static createKeyVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startKeyVector(Z,m){Z.startVector(4,m,4)}static addContactPoint(Z,m){Z.addFieldOffset(9,m,0)}static createContactPointVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startContactPointVector(Z,m){Z.startVector(4,m,4)}static addAddress(Z,m){Z.addFieldOffset(10,m,0)}static addJobTitle(Z,m){Z.addFieldOffset(11,m,0)}static addAffiliation(Z,m){Z.addFieldOffset(12,m,0)}static addHasOccupation(Z,m){Z.addFieldOffset(13,m,0)}static addFamilyName(Z,m){Z.addFieldOffset(14,m,0)}static addGivenName(Z,m){Z.addFieldOffset(15,m,0)}static addAdditionalName(Z,m){Z.addFieldOffset(16,m,0)}static addHonorificPrefix(Z,m){Z.addFieldOffset(17,m,0)}static addHonorificSuffix(Z,m){Z.addFieldOffset(18,m,0)}static endUPM(Z){return Z.endObject()}static finishUPMBuffer(Z,m){Z.finish(m,"$UPM")}static finishSizePrefixedUPMBuffer(Z,m){Z.finish(m,"$UPM",!0)}unpack(){return new n2(this.NAME(),this.ALTERNATE_NAME(),this.DESCRIPTION(),this.IMAGE(),this.SAME_AS(),this.URL(),this.TELEPHONE(),this.EMAIL(),this.bb.createObjList(this.KEY.bind(this),this.keyLength()),this.bb.createObjList(this.CONTACT_POINT.bind(this),this.contactPointLength()),this.ADDRESS()!==null?this.ADDRESS().unpack():null,this.JOB_TITLE(),this.AFFILIATION()!==null?this.AFFILIATION().unpack():null,this.HAS_OCCUPATION()!==null?this.HAS_OCCUPATION().unpack():null,this.FAMILY_NAME(),this.GIVEN_NAME(),this.ADDITIONAL_NAME(),this.HONORIFIC_PREFIX(),this.HONORIFIC_SUFFIX())}unpackTo(Z){Z.NAME=this.NAME(),Z.ALTERNATE_NAME=this.ALTERNATE_NAME(),Z.DESCRIPTION=this.DESCRIPTION(),Z.IMAGE=this.IMAGE(),Z.SAME_AS=this.SAME_AS(),Z.URL=this.URL(),Z.TELEPHONE=this.TELEPHONE(),Z.EMAIL=this.EMAIL(),Z.KEY=this.bb.createObjList(this.KEY.bind(this),this.keyLength()),Z.CONTACT_POINT=this.bb.createObjList(this.CONTACT_POINT.bind(this),this.contactPointLength()),Z.ADDRESS=this.ADDRESS()!==null?this.ADDRESS().unpack():null,Z.JOB_TITLE=this.JOB_TITLE(),Z.AFFILIATION=this.AFFILIATION()!==null?this.AFFILIATION().unpack():null,Z.HAS_OCCUPATION=this.HAS_OCCUPATION()!==null?this.HAS_OCCUPATION().unpack():null,Z.FAMILY_NAME=this.FAMILY_NAME(),Z.GIVEN_NAME=this.GIVEN_NAME(),Z.ADDITIONAL_NAME=this.ADDITIONAL_NAME(),Z.HONORIFIC_PREFIX=this.HONORIFIC_PREFIX(),Z.HONORIFIC_SUFFIX=this.HONORIFIC_SUFFIX()}},n2=class{constructor(Z=null,m=null,h=null,n=null,i=null,A=null,t=null,W=null,e=[],G=[],F=null,d=null,J=null,k=null,r=null,Q=null,p=null,T=null,I=null){this.NAME=Z,this.ALTERNATE_NAME=m,this.DESCRIPTION=h,this.IMAGE=n,this.SAME_AS=i,this.URL=A,this.TELEPHONE=t,this.EMAIL=W,this.KEY=e,this.CONTACT_POINT=G,this.ADDRESS=F,this.JOB_TITLE=d,this.AFFILIATION=J,this.HAS_OCCUPATION=k,this.FAMILY_NAME=r,this.GIVEN_NAME=Q,this.ADDITIONAL_NAME=p,this.HONORIFIC_PREFIX=T,this.HONORIFIC_SUFFIX=I}pack(Z){let m=this.NAME!==null?Z.createString(this.NAME):0,h=this.ALTERNATE_NAME!==null?Z.createString(this.ALTERNATE_NAME):0,n=this.DESCRIPTION!==null?Z.createString(this.DESCRIPTION):0,i=this.IMAGE!==null?Z.createString(this.IMAGE):0,A=this.SAME_AS!==null?Z.createString(this.SAME_AS):0,t=this.URL!==null?Z.createString(this.URL):0,W=this.TELEPHONE!==null?Z.createString(this.TELEPHONE):0,e=this.EMAIL!==null?Z.createString(this.EMAIL):0,G=Rm.createKeyVector(Z,Z.createObjectOffsetList(this.KEY)),F=Rm.createContactPointVector(Z,Z.createObjectOffsetList(this.CONTACT_POINT)),d=this.ADDRESS!==null?this.ADDRESS.pack(Z):0,J=this.JOB_TITLE!==null?Z.createString(this.JOB_TITLE):0,k=this.AFFILIATION!==null?this.AFFILIATION.pack(Z):0,r=this.HAS_OCCUPATION!==null?this.HAS_OCCUPATION.pack(Z):0,Q=this.FAMILY_NAME!==null?Z.createString(this.FAMILY_NAME):0,p=this.GIVEN_NAME!==null?Z.createString(this.GIVEN_NAME):0,T=this.ADDITIONAL_NAME!==null?Z.createString(this.ADDITIONAL_NAME):0,I=this.HONORIFIC_PREFIX!==null?Z.createString(this.HONORIFIC_PREFIX):0,f=this.HONORIFIC_SUFFIX!==null?Z.createString(this.HONORIFIC_SUFFIX):0;return Rm.startUPM(Z),Rm.addName(Z,m),Rm.addAlternateName(Z,h),Rm.addDescription(Z,n),Rm.addImage(Z,i),Rm.addSameAs(Z,A),Rm.addUrl(Z,t),Rm.addTelephone(Z,W),Rm.addEmail(Z,e),Rm.addKey(Z,G),Rm.addContactPoint(Z,F),Rm.addAddress(Z,d),Rm.addJobTitle(Z,J),Rm.addAffiliation(Z,k),Rm.addHasOccupation(Z,r),Rm.addFamilyName(Z,Q),Rm.addGivenName(Z,p),Rm.addAdditionalName(Z,T),Rm.addHonorificPrefix(Z,I),Rm.addHonorificSuffix(Z,f),Rm.endUPM(Z)}},en=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsUPMCOLLECTION(Z,m){return(m||new en).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsUPMCOLLECTION(Z,m){return Z.setPosition(Z.position()+Nm),(m||new en).__init(Z.readInt32(Z.position())+Z.position(),Z)}RECORDS(Z,m){let h=this.bb.__offset(this.bb_pos,4);return h?(m||new Rm).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}recordsLength(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startUPMCOLLECTION(Z){Z.startObject(1)}static addRecords(Z,m){Z.addFieldOffset(0,m,0)}static createRecordsVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startRecordsVector(Z,m){Z.startVector(4,m,4)}static endUPMCOLLECTION(Z){return Z.endObject()}static createUPMCOLLECTION(Z,m){return en.startUPMCOLLECTION(Z),en.addRecords(Z,m),en.endUPMCOLLECTION(Z)}unpack(){return new i2(this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength()))}unpackTo(Z){Z.RECORDS=this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength())}},i2=class{constructor(Z=[]){this.RECORDS=Z}pack(Z){let m=en.createRecordsVector(Z,Z.createObjectOffsetList(this.RECORDS));return en.createUPMCOLLECTION(Z,m)}},qJ={};Vn(qJ,{CSM:()=>Ah,CSMCOLLECTION:()=>on,CSMCOLLECTIONT:()=>a2,CSMT:()=>A2});var Ah=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsCSM(Z,m){return(m||new Ah).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsCSM(Z,m){return Z.setPosition(Z.position()+Nm),(m||new Ah).__init(Z.readInt32(Z.position())+Z.position(),Z)}static bufferHasIdentifier(Z){return Z.__has_identifier("$CSM")}NORAD_CAT_ID_1(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.readUint32(this.bb_pos+Z):0}OBJECT_NAME_1(Z){let m=this.bb.__offset(this.bb_pos,6);return m?this.bb.__string(this.bb_pos+m,Z):null}DSE_1(){let Z=this.bb.__offset(this.bb_pos,8);return Z?this.bb.readFloat64(this.bb_pos+Z):0}NORAD_CAT_ID_2(){let Z=this.bb.__offset(this.bb_pos,10);return Z?this.bb.readUint32(this.bb_pos+Z):0}OBJECT_NAME_2(Z){let m=this.bb.__offset(this.bb_pos,12);return m?this.bb.__string(this.bb_pos+m,Z):null}DSE_2(){let Z=this.bb.__offset(this.bb_pos,14);return Z?this.bb.readFloat64(this.bb_pos+Z):0}TCA(){let Z=this.bb.__offset(this.bb_pos,16);return Z?this.bb.readFloat64(this.bb_pos+Z):0}TCA_RANGE(){let Z=this.bb.__offset(this.bb_pos,18);return Z?this.bb.readFloat64(this.bb_pos+Z):0}TCA_RELATIVE_SPEED(){let Z=this.bb.__offset(this.bb_pos,20);return Z?this.bb.readFloat64(this.bb_pos+Z):0}MAX_PROB(){let Z=this.bb.__offset(this.bb_pos,22);return Z?this.bb.readFloat64(this.bb_pos+Z):0}DILUTION(){let Z=this.bb.__offset(this.bb_pos,24);return Z?this.bb.readFloat64(this.bb_pos+Z):0}static startCSM(Z){Z.startObject(11)}static addNoradCatId1(Z,m){Z.addFieldInt32(0,m,0)}static addObjectName1(Z,m){Z.addFieldOffset(1,m,0)}static addDse1(Z,m){Z.addFieldFloat64(2,m,0)}static addNoradCatId2(Z,m){Z.addFieldInt32(3,m,0)}static addObjectName2(Z,m){Z.addFieldOffset(4,m,0)}static addDse2(Z,m){Z.addFieldFloat64(5,m,0)}static addTca(Z,m){Z.addFieldFloat64(6,m,0)}static addTcaRange(Z,m){Z.addFieldFloat64(7,m,0)}static addTcaRelativeSpeed(Z,m){Z.addFieldFloat64(8,m,0)}static addMaxProb(Z,m){Z.addFieldFloat64(9,m,0)}static addDilution(Z,m){Z.addFieldFloat64(10,m,0)}static endCSM(Z){return Z.endObject()}static finishCSMBuffer(Z,m){Z.finish(m,"$CSM")}static finishSizePrefixedCSMBuffer(Z,m){Z.finish(m,"$CSM",!0)}static createCSM(Z,m,h,n,i,A,t,W,e,G,F,d){return Ah.startCSM(Z),Ah.addNoradCatId1(Z,m),Ah.addObjectName1(Z,h),Ah.addDse1(Z,n),Ah.addNoradCatId2(Z,i),Ah.addObjectName2(Z,A),Ah.addDse2(Z,t),Ah.addTca(Z,W),Ah.addTcaRange(Z,e),Ah.addTcaRelativeSpeed(Z,G),Ah.addMaxProb(Z,F),Ah.addDilution(Z,d),Ah.endCSM(Z)}unpack(){return new A2(this.NORAD_CAT_ID_1(),this.OBJECT_NAME_1(),this.DSE_1(),this.NORAD_CAT_ID_2(),this.OBJECT_NAME_2(),this.DSE_2(),this.TCA(),this.TCA_RANGE(),this.TCA_RELATIVE_SPEED(),this.MAX_PROB(),this.DILUTION())}unpackTo(Z){Z.NORAD_CAT_ID_1=this.NORAD_CAT_ID_1(),Z.OBJECT_NAME_1=this.OBJECT_NAME_1(),Z.DSE_1=this.DSE_1(),Z.NORAD_CAT_ID_2=this.NORAD_CAT_ID_2(),Z.OBJECT_NAME_2=this.OBJECT_NAME_2(),Z.DSE_2=this.DSE_2(),Z.TCA=this.TCA(),Z.TCA_RANGE=this.TCA_RANGE(),Z.TCA_RELATIVE_SPEED=this.TCA_RELATIVE_SPEED(),Z.MAX_PROB=this.MAX_PROB(),Z.DILUTION=this.DILUTION()}},A2=class{constructor(Z=0,m=null,h=0,n=0,i=null,A=0,t=0,W=0,e=0,G=0,F=0){this.NORAD_CAT_ID_1=Z,this.OBJECT_NAME_1=m,this.DSE_1=h,this.NORAD_CAT_ID_2=n,this.OBJECT_NAME_2=i,this.DSE_2=A,this.TCA=t,this.TCA_RANGE=W,this.TCA_RELATIVE_SPEED=e,this.MAX_PROB=G,this.DILUTION=F}pack(Z){let m=this.OBJECT_NAME_1!==null?Z.createString(this.OBJECT_NAME_1):0,h=this.OBJECT_NAME_2!==null?Z.createString(this.OBJECT_NAME_2):0;return Ah.createCSM(Z,this.NORAD_CAT_ID_1,m,this.DSE_1,this.NORAD_CAT_ID_2,h,this.DSE_2,this.TCA,this.TCA_RANGE,this.TCA_RELATIVE_SPEED,this.MAX_PROB,this.DILUTION)}},on=class{constructor(){this.bb=null,this.bb_pos=0}__init(Z,m){return this.bb_pos=Z,this.bb=m,this}static getRootAsCSMCOLLECTION(Z,m){return(m||new on).__init(Z.readInt32(Z.position())+Z.position(),Z)}static getSizePrefixedRootAsCSMCOLLECTION(Z,m){return Z.setPosition(Z.position()+Nm),(m||new on).__init(Z.readInt32(Z.position())+Z.position(),Z)}RECORDS(Z,m){let h=this.bb.__offset(this.bb_pos,4);return h?(m||new Ah).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+h)+Z*4),this.bb):null}recordsLength(){let Z=this.bb.__offset(this.bb_pos,4);return Z?this.bb.__vector_len(this.bb_pos+Z):0}static startCSMCOLLECTION(Z){Z.startObject(1)}static addRecords(Z,m){Z.addFieldOffset(0,m,0)}static createRecordsVector(Z,m){Z.startVector(4,m.length,4);for(let h=m.length-1;h>=0;h--)Z.addOffset(m[h]);return Z.endVector()}static startRecordsVector(Z,m){Z.startVector(4,m,4)}static endCSMCOLLECTION(Z){return Z.endObject()}static createCSMCOLLECTION(Z,m){return on.startCSMCOLLECTION(Z),on.addRecords(Z,m),on.endCSMCOLLECTION(Z)}unpack(){return new a2(this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength()))}unpackTo(Z){Z.RECORDS=this.bb.createObjList(this.RECORDS.bind(this),this.recordsLength())}},a2=class{constructor(Z=[]){this.RECORDS=Z}pack(Z){let m=on.createRecordsVector(Z,Z.createObjectOffsetList(this.RECORDS));return on.createCSMCOLLECTION(Z,m)}};var ZW=(Z,m,h)=>{Z=new Uint8Array(Z);let n=new h[`${m}COLLECTIONT`];return h[`${m}COLLECTION`][`getRootAs${m}COLLECTION`](new ed(Z)).unpackTo(n),n};/*! Bundled license information:

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)
*/var $J=(()=>{var Z=import.meta.url;return function(m={}){var h=m,n,i;h.ready=new Promise((a,o)=>{n=a,i=o}),["_getCoveragePositions","_inflateEllipsoid","_malloc","_free","_memory","_fflush","__embind_initialize_bindings","___indirect_function_table","___start_em_asm","___stop_em_asm","onRuntimeInitialized"].forEach(a=>{Object.getOwnPropertyDescriptor(h.ready,a)||Object.defineProperty(h.ready,a,{get:()=>L("You are getting "+a+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),set:()=>L("You are setting "+a+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")})}),globalThis.__dirname=globalThis.__dirname||"";var A=Object.assign({},h),t=[],W="./this.program",e=(a,o)=>{throw o},G=!0,F=!1,d=!1,J=!1;if(h.ENVIRONMENT)throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");var k="";function r(a){return h.locateFile?h.locateFile(a,k):k+a}var Q,p,T,I;if(J){if(typeof process=="object"&&typeof SW=="function"||typeof window=="object"||typeof importScripts=="function")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");typeof read<"u"&&(Q=read),T=a=>{if(typeof readbuffer=="function")return new Uint8Array(readbuffer(a));let o=read(a,"binary");return Y(typeof o=="object"),o},p=(a,o,R)=>{setTimeout(()=>o(T(a)))},typeof clearTimeout>"u"&&(globalThis.clearTimeout=a=>{}),typeof setTimeout>"u"&&(globalThis.setTimeout=a=>typeof a=="function"?a():L()),typeof scriptArgs<"u"?t=scriptArgs:typeof arguments<"u"&&(t=arguments),typeof quit=="function"&&(e=(a,o)=>{throw setTimeout(()=>{if(!(o instanceof oi)){let R=o;o&&typeof o=="object"&&o.stack&&(R=[o,o.stack]),b(`exiting due to exception: ${R}`)}quit(a)}),o}),typeof print<"u"&&(typeof console>"u"&&(console={}),console.log=print,console.warn=console.error=typeof printErr<"u"?printErr:print)}else if(G||F){if(F?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),Z&&(k=Z),k.indexOf("blob:")!==0?k=k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):k="",!(typeof window=="object"||typeof importScripts=="function"))throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");Q=a=>{var o=new XMLHttpRequest;return o.open("GET",a,!1),o.send(null),o.responseText},F&&(T=a=>{var o=new XMLHttpRequest;return o.open("GET",a,!1),o.responseType="arraybuffer",o.send(null),new Uint8Array(o.response)}),p=(a,o,R)=>{var E=new XMLHttpRequest;E.open("GET",a,!0),E.responseType="arraybuffer",E.onload=()=>{if(E.status==200||E.status==0&&E.response){o(E.response);return}R()},E.onerror=R,E.send(null)},I=a=>document.title=a}else throw new Error("environment detection error");var f=h.print||console.log.bind(console),b=h.printErr||console.error.bind(console);Object.assign(h,A),A=null,Nr(),h.arguments&&(t=h.arguments),rh("arguments","arguments_"),h.thisProgram&&(W=h.thisProgram),rh("thisProgram","thisProgram"),h.quit&&(e=h.quit),rh("quit","quit_"),Y(typeof h.memoryInitializerPrefixURL>"u","Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),Y(typeof h.pthreadMainPrefixURL>"u","Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),Y(typeof h.cdInitializerPrefixURL>"u","Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),Y(typeof h.filePackagePrefixURL>"u","Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),Y(typeof h.read>"u","Module.read option was removed (modify read_ in JS)"),Y(typeof h.readAsync>"u","Module.readAsync option was removed (modify readAsync in JS)"),Y(typeof h.readBinary>"u","Module.readBinary option was removed (modify readBinary in JS)"),Y(typeof h.setWindowTitle>"u","Module.setWindowTitle option was removed (modify setWindowTitle in JS)"),Y(typeof h.TOTAL_MEMORY>"u","Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),rh("asm","wasmExports"),rh("read","read_"),rh("readAsync","readAsync"),rh("readBinary","readBinary"),rh("setWindowTitle","setWindowTitle"),Y(!F,"worker environment detected but not enabled at build time.  Add 'worker' to `-sENVIRONMENT` to enable."),Y(!d,"node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable."),Y(!J,"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.");var O;h.wasmBinary&&(O=h.wasmBinary),rh("wasmBinary","wasmBinary");var v=h.noExitRuntime||!0;rh("noExitRuntime","noExitRuntime"),typeof WebAssembly!="object"&&L("no native wasm support detected");var hZ,K,tZ=!1,NZ;function Y(a,o){a||L("Assertion failed"+(o?": "+o:""))}var ZZ,oZ,RZ,EZ,z,nZ,XZ,wZ;function DZ(){var a=hZ.buffer;h.HEAP8=ZZ=new Int8Array(a),h.HEAP16=RZ=new Int16Array(a),h.HEAP32=z=new Int32Array(a),h.HEAPU8=oZ=new Uint8Array(a),h.HEAPU16=EZ=new Uint16Array(a),h.HEAPU32=nZ=new Uint32Array(a),h.HEAPF32=XZ=new Float32Array(a),h.HEAPF64=wZ=new Float64Array(a)}Y(!h.STACK_SIZE,"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time"),Y(typeof Int32Array<"u"&&typeof Float64Array<"u"&&Int32Array.prototype.subarray!=null&&Int32Array.prototype.set!=null,"JS engine does not provide full typed array support"),Y(!h.wasmMemory,"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally"),Y(!h.INITIAL_MEMORY,"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically");var TZ;function LZ(){var a=ua();Y((a&3)==0),a==0&&(a+=4),nZ[a>>2]=34821223,nZ[a+4>>2]=2310721022,nZ[0]=1668509029}function Cm(){if(!tZ){var a=ua();a==0&&(a+=4);var o=nZ[a>>2],R=nZ[a+4>>2];(o!=34821223||R!=2310721022)&&L(`Stack overflow! Stack cookie has been overwritten at ${oY(a)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${oY(R)} ${oY(o)}`),nZ[0]!=1668509029&&L("Runtime error: The application has corrupted its heap memory area (address zero)!")}}(function(){var a=new Int16Array(1),o=new Int8Array(a.buffer);if(a[0]=25459,o[0]!==115||o[1]!==99)throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"})();var pm=[],Om=[],Xm=[],wm=!1,Lm=0;function Zh(){if(h.preRun)for(typeof h.preRun=="function"&&(h.preRun=[h.preRun]);h.preRun.length;)Tm(h.preRun.shift());Rn(pm)}function mh(){Y(!wm),wm=!0,Cm(),!h.noFSInit&&!C.init.initialized&&C.init(),C.ignorePermissions=!1,XY.init(),Rn(Om)}function vm(){if(Cm(),h.postRun)for(typeof h.postRun=="function"&&(h.postRun=[h.postRun]);h.postRun.length;)ym(h.postRun.shift());Rn(Xm)}function Tm(a){pm.unshift(a)}function Gm(a){Om.unshift(a)}function ym(a){Xm.unshift(a)}Y(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),Y(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),Y(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),Y(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var Em=0,g=null,s=null,N={};function c(a){for(var o=a;;){if(!N[a])return a;a=o+Math.random()}}function x(a){Em++,h.monitorRunDependencies&&h.monitorRunDependencies(Em),a?(Y(!N[a]),N[a]=1,g===null&&typeof setInterval<"u"&&(g=setInterval(()=>{if(tZ){clearInterval(g),g=null;return}var o=!1;for(var R in N)o||(o=!0,b("still waiting on run dependencies:")),b("dependency: "+R);o&&b("(end of list)")},1e4))):b("warning: run dependency added without ID")}function $(a){if(Em--,h.monitorRunDependencies&&h.monitorRunDependencies(Em),a?(Y(N[a]),delete N[a]):b("warning: run dependency removed without ID"),Em==0&&(g!==null&&(clearInterval(g),g=null),s)){var o=s;s=null,o()}}function L(a){h.onAbort&&h.onAbort(a),a="Aborted("+a+")",b(a),tZ=!0,NZ=1;var o=new WebAssembly.RuntimeError(a);throw i(o),o}var IZ="data:application/octet-stream;base64,";function uZ(a){return a.startsWith(IZ)}function KZ(a){return a.startsWith("file://")}function fZ(a){return function(){Y(wm,`native function \`${a}\` called before runtime initialization`);var o=K[a];return Y(o,`exported native function \`${a}\` not found`),o.apply(null,arguments)}}var HZ;HZ="data:application/octet-stream;base64,",uZ(HZ)||(HZ=r(HZ));function eY(a){if(a==HZ&&O)return new Uint8Array(O);var o=jr(a);if(o)return o;if(T)return T(a);throw"both async and sync fetching of the wasm failed"}function wY(a){return Promise.resolve().then(()=>eY(a))}function yY(a,o,R){return wY(a).then(E=>WebAssembly.instantiate(E,o)).then(E=>E).then(R,E=>{b("failed to asynchronously prepare wasm: "+E),KZ(HZ)&&b("warning: Loading from a file URI ("+HZ+") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing"),L(E)})}function Ai(a,o,R,E){return yY(o,R,E)}function ai(){var a={env:jW,wasi_snapshot_preview1:jW};function o(B,M){var D=B.exports;return K=D,hZ=K.memory,Y(hZ,"memory not found in wasm exports"),DZ(),TZ=K.__indirect_function_table,Y(TZ,"table not found in wasm exports"),Gm(K.__wasm_call_ctors),$("wasm-instantiate"),D}x("wasm-instantiate");var R=h;function E(B){Y(h===R,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),R=null,o(B.instance)}if(h.instantiateWasm)try{return h.instantiateWasm(a,o)}catch(B){b("Module.instantiateWasm callback failed with error: "+B),i(B)}return Ai(O,HZ,a,E).catch(i),{}}var pZ,jm;function rh(a,o,R=!0){Object.getOwnPropertyDescriptor(h,a)||Object.defineProperty(h,a,{configurable:!0,get(){let E=R?" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)":"";L(`\`Module.${a}\` has been replaced by \`${o}\``+E)}})}function ti(a){Object.getOwnPropertyDescriptor(h,a)&&L(`\`Module.${a}\` was supplied but \`${a}\` not included in INCOMING_MODULE_JS_API`)}function Tn(a){return a==="FS_createPath"||a==="FS_createDataFile"||a==="FS_createPreloadedFile"||a==="FS_unlink"||a==="addRunDependency"||a==="FS_createLazyFile"||a==="FS_createDevice"||a==="removeRunDependency"}function Wi(a,o){typeof globalThis<"u"&&Object.defineProperty(globalThis,a,{configurable:!0,get(){Qh("`"+a+"` is not longer defined by emscripten. "+o)}})}Wi("buffer","Please use HEAP8.buffer or wasmMemory.buffer");function ei(a){typeof globalThis<"u"&&!Object.getOwnPropertyDescriptor(globalThis,a)&&Object.defineProperty(globalThis,a,{configurable:!0,get(){var o="`"+a+"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line",R=a;R.startsWith("_")||(R="$"+a),o+=" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='"+R+"')",Tn(a)&&(o+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),Qh(o)}}),Mn(a)}function Mn(a){Object.getOwnPropertyDescriptor(h,a)||Object.defineProperty(h,a,{configurable:!0,get(){var o="'"+a+"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)";Tn(a)&&(o+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),L(o)}})}var Sn={923728:a=>{console.error("Invalid compare_index ("+a+"), skipped.")}};function oi(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var Rn=a=>{for(;a.length>0;)a.shift()(h)},oY=a=>(Y(typeof a=="number"),a>>>=0,"0x"+a.toString(16).padStart(8,"0")),Qh=a=>{Qh.shown||(Qh.shown={}),Qh.shown[a]||(Qh.shown[a]=1,b(a))},Dn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,VY=(a,o,R)=>{for(var E=o+R,B=o;a[B]&&!(B>=E);)++B;if(B-o>16&&a.buffer&&Dn)return Dn.decode(a.subarray(o,B));for(var M="";o<B;){var D=a[o++];if(!(D&128)){M+=String.fromCharCode(D);continue}var u=a[o++]&63;if((D&224)==192){M+=String.fromCharCode((D&31)<<6|u);continue}var w=a[o++]&63;if((D&240)==224?D=(D&15)<<12|u<<6|w:((D&248)!=240&&Qh("Invalid UTF-8 leading byte "+oY(D)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),D=(D&7)<<18|u<<12|w<<6|a[o++]&63),D<65536)M+=String.fromCharCode(D);else{var P=D-65536;M+=String.fromCharCode(55296|P>>10,56320|P&1023)}}return M},Ch=(a,o)=>(Y(typeof a=="number"),a?VY(oZ,a,o):""),Vi=(a,o,R,E)=>{L(`Assertion failed: ${Ch(a)}, at: `+[o?Ch(o):"unknown filename",R,E?Ch(E):"unknown function"])};function li(a){this.excPtr=a,this.ptr=a-24,this.set_type=function(o){nZ[this.ptr+4>>2]=o},this.get_type=function(){return nZ[this.ptr+4>>2]},this.set_destructor=function(o){nZ[this.ptr+8>>2]=o},this.get_destructor=function(){return nZ[this.ptr+8>>2]},this.set_caught=function(o){o=o?1:0,ZZ[this.ptr+12>>0]=o},this.get_caught=function(){return ZZ[this.ptr+12>>0]!=0},this.set_rethrown=function(o){o=o?1:0,ZZ[this.ptr+13>>0]=o},this.get_rethrown=function(){return ZZ[this.ptr+13>>0]!=0},this.init=function(o,R){this.set_adjusted_ptr(0),this.set_type(o),this.set_destructor(R)},this.set_adjusted_ptr=function(o){nZ[this.ptr+16>>2]=o},this.get_adjusted_ptr=function(){return nZ[this.ptr+16>>2]},this.get_exception_ptr=function(){var o=Ir(this.get_type());if(o)return nZ[this.excPtr>>2];var R=this.get_adjusted_ptr();return R!==0?R:this.excPtr}}var Ri=0,Ua=0;function s2(a,o,R){var E=new li(a);E.init(o,R),Ri=a,Ua++,Y(!1,"Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.")}function r2(a,o,R,E,B){}function Ja(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(`Unknown type size: ${a}`)}}function N2(){for(var a=new Array(256),o=0;o<256;++o)a[o]=String.fromCharCode(o);nW=a}var nW=void 0;function Nh(a){for(var o="",R=a;oZ[R];)o+=nW[oZ[R++]];return o}var fn={},Gn={},dA={},un=void 0;function yZ(a){throw new un(a)}var iW=void 0;function sA(a){throw new iW(a)}function Fn(a,o,R){a.forEach(function(u){dA[u]=o});function E(u){var w=R(u);w.length!==a.length&&sA("Mismatched type converter count");for(var P=0;P<a.length;++P)EY(a[P],w[P])}var B=new Array(o.length),M=[],D=0;o.forEach((u,w)=>{Gn.hasOwnProperty(u)?B[w]=Gn[u]:(M.push(u),fn.hasOwnProperty(u)||(fn[u]=[]),fn[u].push(()=>{B[w]=Gn[u],++D,D===M.length&&E(B)}))}),M.length===0&&E(B)}function E2(a,o,R={}){var E=o.name;if(a||yZ(`type "${E}" must have a positive integer typeid pointer`),Gn.hasOwnProperty(a)){if(R.ignoreDuplicateRegistrations)return;yZ(`Cannot register type '${E}' twice`)}if(Gn[a]=o,delete dA[a],fn.hasOwnProperty(a)){var B=fn[a];delete fn[a],B.forEach(M=>M())}}function EY(a,o,R={}){if(!("argPackAdvance"in o))throw new TypeError("registerType registeredInstance requires argPackAdvance");return E2(a,o,R)}function k2(a,o,R,E,B){var M=Ja(R);o=Nh(o),EY(a,{name:o,fromWireType:function(D){return!!D},toWireType:function(D,u){return u?E:B},argPackAdvance:8,readValueFromPointer:function(D){var u;if(R===1)u=ZZ;else if(R===2)u=RZ;else if(R===4)u=z;else throw new TypeError("Unknown boolean type size: "+o);return this.fromWireType(u[D>>M])},destructorFunction:null})}function U2(a){if(!(this instanceof HY)||!(a instanceof HY))return!1;for(var o=this.$$.ptrType.registeredClass,R=this.$$.ptr,E=a.$$.ptrType.registeredClass,B=a.$$.ptr;o.baseClass;)R=o.upcast(R),o=o.baseClass;for(;E.baseClass;)B=E.upcast(B),E=E.baseClass;return o===E&&R===B}function J2(a){return{count:a.count,deleteScheduled:a.deleteScheduled,preservePointerOnDelete:a.preservePointerOnDelete,ptr:a.ptr,ptrType:a.ptrType,smartPtr:a.smartPtr,smartPtrType:a.smartPtrType}}function Qa(a){function o(R){return R.$$.ptrType.registeredClass.name}yZ(o(a)+" instance already deleted")}var Ca=!1;function AW(a){}function Q2(a){a.smartPtr?a.smartPtrType.rawDestructor(a.smartPtr):a.ptrType.registeredClass.rawDestructor(a.ptr)}function aW(a){a.count.value-=1;var o=a.count.value===0;o&&Q2(a)}function tW(a,o,R){if(o===R)return a;if(R.baseClass===void 0)return null;var E=tW(a,o,R.baseClass);return E===null?null:R.downcast(E)}var WW={};function C2(){return Object.keys(di).length}function B2(){var a=[];for(var o in di)di.hasOwnProperty(o)&&a.push(di[o]);return a}var Gi=[];function Ba(){for(;Gi.length;){var a=Gi.pop();a.$$.deleteScheduled=!1,a.delete()}}var Fi=void 0;function g2(a){Fi=a,Gi.length&&Fi&&Fi(Ba)}function I2(){h.getInheritedInstanceCount=C2,h.getLiveInheritedInstances=B2,h.flushPendingDeletes=Ba,h.setDelayFunction=g2}var di={};function p2(a,o){for(o===void 0&&yZ("ptr should not be undefined");a.baseClass;)o=a.upcast(o),a=a.baseClass;return o}function j2(a,o){return o=p2(a,o),di[o]}function rA(a,o){(!o.ptrType||!o.ptr)&&sA("makeClassHandle requires ptr and ptrType");var R=!!o.smartPtrType,E=!!o.smartPtr;return R!==E&&sA("Both smartPtrType and smartPtr must be specified"),o.count={value:1},si(Object.create(a,{$$:{value:o}}))}function eW(a){var o=this.getPointee(a);if(!o)return this.destructor(a),null;var R=j2(this.registeredClass,o);if(R!==void 0){if(R.$$.count.value===0)return R.$$.ptr=o,R.$$.smartPtr=a,R.clone();var E=R.clone();return this.destructor(a),E}function B(){return this.isSmartPointer?rA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:o,smartPtrType:this,smartPtr:a}):rA(this.registeredClass.instancePrototype,{ptrType:this,ptr:a})}var M=this.registeredClass.getActualType(o),D=WW[M];if(!D)return B.call(this);var u;this.isConst?u=D.constPointerType:u=D.pointerType;var w=tW(o,this.registeredClass,u.registeredClass);return w===null?B.call(this):this.isSmartPointer?rA(u.registeredClass.instancePrototype,{ptrType:u,ptr:w,smartPtrType:this,smartPtr:a}):rA(u.registeredClass.instancePrototype,{ptrType:u,ptr:w})}var si=function(a){return typeof FinalizationRegistry>"u"?(si=o=>o,a):(Ca=new FinalizationRegistry(o=>{console.warn(o.leakWarning.stack.replace(/^Error: /,"")),aW(o.$$)}),si=o=>{var R=o.$$,E=!!R.smartPtr;if(E){var B={$$:R},M=R.ptrType.registeredClass;B.leakWarning=new Error(`Embind found a leaked C++ instance ${M.name} <${oY(R.ptr)}>.
We'll free it automatically in this case, but this functionality is not reliable across various environments.
Make sure to invoke .delete() manually once you're done with the instance instead.
Originally allocated`),"captureStackTrace"in Error&&Error.captureStackTrace(B.leakWarning,eW),Ca.register(o,B,o)}return o},AW=o=>Ca.unregister(o),si(a))};function c2(){if(this.$$.ptr||Qa(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var a=si(Object.create(Object.getPrototypeOf(this),{$$:{value:J2(this.$$)}}));return a.$$.count.value+=1,a.$$.deleteScheduled=!1,a}function T2(){this.$$.ptr||Qa(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&yZ("Object already scheduled for deletion"),AW(this),aW(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function M2(){return!this.$$.ptr}function S2(){return this.$$.ptr||Qa(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&yZ("Object already scheduled for deletion"),Gi.push(this),Gi.length===1&&Fi&&Fi(Ba),this.$$.deleteScheduled=!0,this}function D2(){HY.prototype.isAliasOf=U2,HY.prototype.clone=c2,HY.prototype.delete=T2,HY.prototype.isDeleted=M2,HY.prototype.deleteLater=S2}function HY(){}var f2=48,u2=57;function ga(a){if(a===void 0)return"_unknown";a=a.replace(/[^a-zA-Z0-9_]/g,"$");var o=a.charCodeAt(0);return o>=f2&&o<=u2?`_${a}`:a}function Ia(a,o){return a=ga(a),{[a]:function(){return o.apply(this,arguments)}}[a]}function oW(a,o,R){if(a[o].overloadTable===void 0){var E=a[o];a[o]=function(){return a[o].overloadTable.hasOwnProperty(arguments.length)||yZ(`Function '${R}' called with an invalid number of arguments (${arguments.length}) - expects one of (${a[o].overloadTable})!`),a[o].overloadTable[arguments.length].apply(this,arguments)},a[o].overloadTable=[],a[o].overloadTable[E.argCount]=E}}function b2(a,o,R){h.hasOwnProperty(a)?((R===void 0||h[a].overloadTable!==void 0&&h[a].overloadTable[R]!==void 0)&&yZ(`Cannot register public name '${a}' twice`),oW(h,a,a),h.hasOwnProperty(R)&&yZ(`Cannot register multiple overloads of a function with the same number of arguments (${R})!`),h[a].overloadTable[R]=o):(h[a]=o,R!==void 0&&(h[a].numArguments=R))}function x2(a,o,R,E,B,M,D,u){this.name=a,this.constructor=o,this.instancePrototype=R,this.rawDestructor=E,this.baseClass=B,this.getActualType=M,this.upcast=D,this.downcast=u,this.pureVirtualFunctions=[]}function NA(a,o,R){for(;o!==R;)o.upcast||yZ(`Expected null or instance of ${R.name}, got an instance of ${o.name}`),a=o.upcast(a),o=o.baseClass;return a}function _2(a,o){if(o===null)return this.isReference&&yZ(`null is not a valid ${this.name}`),0;o.$$||yZ(`Cannot pass "${bn(o)}" as a ${this.name}`),o.$$.ptr||yZ(`Cannot pass deleted object as a pointer of type ${this.name}`);var R=o.$$.ptrType.registeredClass,E=NA(o.$$.ptr,R,this.registeredClass);return E}function O2(a,o){var R;if(o===null)return this.isReference&&yZ(`null is not a valid ${this.name}`),this.isSmartPointer?(R=this.rawConstructor(),a!==null&&a.push(this.rawDestructor,R),R):0;o.$$||yZ(`Cannot pass "${bn(o)}" as a ${this.name}`),o.$$.ptr||yZ(`Cannot pass deleted object as a pointer of type ${this.name}`),!this.isConst&&o.$$.ptrType.isConst&&yZ(`Cannot convert argument of type ${o.$$.smartPtrType?o.$$.smartPtrType.name:o.$$.ptrType.name} to parameter type ${this.name}`);var E=o.$$.ptrType.registeredClass;if(R=NA(o.$$.ptr,E,this.registeredClass),this.isSmartPointer)switch(o.$$.smartPtr===void 0&&yZ("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:o.$$.smartPtrType===this?R=o.$$.smartPtr:yZ(`Cannot convert argument of type ${o.$$.smartPtrType?o.$$.smartPtrType.name:o.$$.ptrType.name} to parameter type ${this.name}`);break;case 1:R=o.$$.smartPtr;break;case 2:if(o.$$.smartPtrType===this)R=o.$$.smartPtr;else{var B=o.clone();R=this.rawShare(R,vh.toHandle(function(){B.delete()})),a!==null&&a.push(this.rawDestructor,R)}break;default:yZ("Unsupporting sharing policy")}return R}function w2(a,o){if(o===null)return this.isReference&&yZ(`null is not a valid ${this.name}`),0;o.$$||yZ(`Cannot pass "${bn(o)}" as a ${this.name}`),o.$$.ptr||yZ(`Cannot pass deleted object as a pointer of type ${this.name}`),o.$$.ptrType.isConst&&yZ(`Cannot convert argument of type ${o.$$.ptrType.name} to parameter type ${this.name}`);var R=o.$$.ptrType.registeredClass,E=NA(o.$$.ptr,R,this.registeredClass);return E}function EA(a){return this.fromWireType(z[a>>2])}function y2(a){return this.rawGetPointee&&(a=this.rawGetPointee(a)),a}function H2(a){this.rawDestructor&&this.rawDestructor(a)}function z2(a){a!==null&&a.delete()}function X2(){kY.prototype.getPointee=y2,kY.prototype.destructor=H2,kY.prototype.argPackAdvance=8,kY.prototype.readValueFromPointer=EA,kY.prototype.deleteObject=z2,kY.prototype.fromWireType=eW}function kY(a,o,R,E,B,M,D,u,w,P,iZ){this.name=a,this.registeredClass=o,this.isReference=R,this.isConst=E,this.isSmartPointer=B,this.pointeeType=M,this.sharingPolicy=D,this.rawGetPointee=u,this.rawConstructor=w,this.rawShare=P,this.rawDestructor=iZ,!B&&o.baseClass===void 0?E?(this.toWireType=_2,this.destructorFunction=null):(this.toWireType=w2,this.destructorFunction=null):this.toWireType=O2}function L2(a,o,R){h.hasOwnProperty(a)||sA("Replacing nonexistant public symbol"),h[a].overloadTable!==void 0&&R!==void 0?h[a].overloadTable[R]=o:(h[a]=o,h[a].argCount=R)}var v2=(a,o,R)=>{Y("dynCall_"+a in h,`bad function pointer type - dynCall function not found for sig '${a}'`),R&&R.length?Y(R.length===a.substring(1).replace(/j/g,"--").length):Y(a.length==1);var E=h["dynCall_"+a];return R&&R.length?E.apply(null,[o].concat(R)):E.call(null,o)},kA=[],pa=a=>{var o=kA[a];return o||(a>=kA.length&&(kA.length=a+1),kA[a]=o=TZ.get(a)),Y(TZ.get(a)==o,"JavaScript-side Wasm function table mirror is out of date!"),o},P2=(a,o,R)=>{if(a.includes("j"))return v2(a,o,R);Y(pa(o),`missing table entry in dynCall: ${o}`);var E=pa(o).apply(null,R);return E},K2=(a,o)=>{Y(a.includes("j")||a.includes("p"),"getDynCaller should only be called with i64 sigs");var R=[];return function(){return R.length=0,Object.assign(R,arguments),P2(a,o,R)}};function zY(a,o){a=Nh(a);function R(){return a.includes("j")?K2(a,o):pa(o)}var E=R();return typeof E!="function"&&yZ(`unknown function pointer with signature ${a}: ${o}`),E}function q2(a,o){var R=Ia(o,function(E){this.name=o,this.message=E;var B=new Error(E).stack;B!==void 0&&(this.stack=this.toString()+`
`+B.replace(/^Error(:[^\n]*)?\n/,""))});return R.prototype=Object.create(a.prototype),R.prototype.constructor=R,R.prototype.toString=function(){return this.message===void 0?this.name:`${this.name}: ${this.message}`},R}var VW=void 0;function lW(a){var o=kr(a),R=Nh(o);return JY(o),R}function ri(a,o){var R=[],E={};function B(M){if(!E[M]&&!Gn[M]){if(dA[M]){dA[M].forEach(B);return}R.push(M),E[M]=!0}}throw o.forEach(B),new VW(`${a}: `+R.map(lW).join([", "]))}function $2(a,o,R,E,B,M,D,u,w,P,iZ,VZ,AZ){iZ=Nh(iZ),M=zY(B,M),u&&(u=zY(D,u)),P&&(P=zY(w,P)),AZ=zY(VZ,AZ);var aZ=ga(iZ);b2(aZ,function(){ri(`Cannot construct ${iZ} due to unbound types`,[E])}),Fn([a,o,R],E?[E]:[],function(FZ){FZ=FZ[0];var SZ,Ym;E?(SZ=FZ.registeredClass,Ym=SZ.instancePrototype):Ym=HY.prototype;var tm=Ia(aZ,function(){if(Object.getPrototypeOf(this)!==mZ)throw new un("Use 'new' to construct "+iZ);if(GZ.constructor_body===void 0)throw new un(iZ+" has no accessible constructor");var cm=GZ.constructor_body[arguments.length];if(cm===void 0)throw new un(`Tried to invoke ctor of ${iZ} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(GZ.constructor_body).toString()}) parameters instead!`);return cm.apply(this,arguments)}),mZ=Object.create(Ym,{constructor:{value:tm}});tm.prototype=mZ;var GZ=new x2(iZ,tm,mZ,AZ,SZ,M,u,P);GZ.baseClass&&(GZ.baseClass.__derivedClasses===void 0&&(GZ.baseClass.__derivedClasses=[]),GZ.baseClass.__derivedClasses.push(GZ));var Hm=new kY(iZ,GZ,!0,!1,!1),Wm=new kY(iZ+"*",GZ,!1,!1,!1),Eh=new kY(iZ+" const*",GZ,!1,!0,!1);return WW[a]={pointerType:Wm,constPointerType:Eh},L2(aZ,tm),[Hm,Wm,Eh]})}function RW(a,o){for(var R=[],E=0;E<a;E++)R.push(nZ[o+E*4>>2]);return R}function ja(a){for(;a.length;){var o=a.pop(),R=a.pop();R(o)}}function Zs(a,o){if(!(a instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof a} which is not a function`);var R=Ia(a.name||"unknownFunctionName",function(){});R.prototype=a.prototype;var E=new R,B=a.apply(E,o);return B instanceof Object?B:E}function GW(a,o,R,E,B,M){var D=o.length;D<2&&yZ("argTypes array size mismatch! Must at least get return value and 'this' types!"),Y(!M,"Async bindings are only supported with JSPI.");for(var u=o[1]!==null&&R!==null,w=!1,P=1;P<o.length;++P)if(o[P]!==null&&o[P].destructorFunction===void 0){w=!0;break}for(var iZ=o[0].name!=="void",VZ="",AZ="",P=0;P<D-2;++P)VZ+=(P!==0?", ":"")+"arg"+P,AZ+=(P!==0?", ":"")+"arg"+P+"Wired";var aZ=`
        return function ${ga(a)}(${VZ}) {
        if (arguments.length !== ${D-2}) {
          throwBindingError('function ${a} called with ${arguments.length} arguments, expected ${D-2} args!');
        }`;w&&(aZ+=`var destructors = [];
`);var FZ=w?"destructors":"null",SZ=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],Ym=[yZ,E,B,ja,o[0],o[1]];u&&(aZ+="var thisWired = classParam.toWireType("+FZ+`, this);
`);for(var P=0;P<D-2;++P)aZ+="var arg"+P+"Wired = argType"+P+".toWireType("+FZ+", arg"+P+"); // "+o[P+2].name+`
`,SZ.push("argType"+P),Ym.push(o[P+2]);if(u&&(AZ="thisWired"+(AZ.length>0?", ":"")+AZ),aZ+=(iZ||M?"var rv = ":"")+"invoker(fn"+(AZ.length>0?", ":"")+AZ+`);
`,w)aZ+=`runDestructors(destructors);
`;else for(var P=u?1:2;P<o.length;++P){var tm=P===1?"thisWired":"arg"+(P-2)+"Wired";o[P].destructorFunction!==null&&(aZ+=tm+"_dtor("+tm+"); // "+o[P].name+`
`,SZ.push(tm+"_dtor"),Ym.push(o[P].destructorFunction))}return iZ&&(aZ+=`var ret = retType.fromWireType(rv);
return ret;
`),aZ+=`}
`,SZ.push(aZ),Zs(Function,SZ).apply(null,Ym)}function ms(a,o,R,E,B,M){Y(o>0);var D=RW(o,R);B=zY(E,B),Fn([],[a],function(u){u=u[0];var w=`constructor ${u.name}`;if(u.registeredClass.constructor_body===void 0&&(u.registeredClass.constructor_body=[]),u.registeredClass.constructor_body[o-1]!==void 0)throw new un(`Cannot register multiple constructors with identical number of parameters (${o-1}) for class '${u.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return u.registeredClass.constructor_body[o-1]=()=>{ri(`Cannot construct ${u.name} due to unbound types`,D)},Fn([],D,function(P){return P.splice(1,0,null),u.registeredClass.constructor_body[o-1]=GW(w,P,null,B,M),[]}),[]})}function hs(a,o,R,E,B,M,D,u,w){var P=RW(R,E);o=Nh(o),M=zY(B,M),Fn([],[a],function(iZ){iZ=iZ[0];var VZ=`${iZ.name}.${o}`;o.startsWith("@@")&&(o=Symbol[o.substring(2)]),u&&iZ.registeredClass.pureVirtualFunctions.push(o);function AZ(){ri(`Cannot call ${VZ} due to unbound types`,P)}var aZ=iZ.registeredClass.instancePrototype,FZ=aZ[o];return FZ===void 0||FZ.overloadTable===void 0&&FZ.className!==iZ.name&&FZ.argCount===R-2?(AZ.argCount=R-2,AZ.className=iZ.name,aZ[o]=AZ):(oW(aZ,o,VZ),aZ[o].overloadTable[R-2]=AZ),Fn([],P,function(SZ){var Ym=GW(VZ,SZ,iZ,M,D,w);return aZ[o].overloadTable===void 0?(Ym.argCount=R-2,aZ[o]=Ym):aZ[o].overloadTable[R-2]=Ym,[]}),[]})}function FW(a,o,R){return a instanceof Object||yZ(`${R} with invalid "this": ${a}`),a instanceof o.registeredClass.constructor||yZ(`${R} incompatible with "this" of type ${a.constructor.name}`),a.$$.ptr||yZ(`cannot call emscripten binding method ${R} on deleted object`),NA(a.$$.ptr,a.$$.ptrType.registeredClass,o.registeredClass)}function Ys(a,o,R,E,B,M,D,u,w,P){o=Nh(o),B=zY(E,B),Fn([],[a],function(iZ){iZ=iZ[0];var VZ=`${iZ.name}.${o}`,AZ={get(){ri(`Cannot access ${VZ} due to unbound types`,[R,D])},enumerable:!0,configurable:!0};return w?AZ.set=()=>{ri(`Cannot access ${VZ} due to unbound types`,[R,D])}:AZ.set=aZ=>{yZ(VZ+" is a read-only property")},Object.defineProperty(iZ.registeredClass.instancePrototype,o,AZ),Fn([],w?[R,D]:[R],function(aZ){var FZ=aZ[0],SZ={get(){var tm=FW(this,iZ,VZ+" getter");return FZ.fromWireType(B(M,tm))},enumerable:!0};if(w){w=zY(u,w);var Ym=aZ[1];SZ.set=function(tm){var mZ=FW(this,iZ,VZ+" setter"),GZ=[];w(P,mZ,Ym.toWireType(GZ,tm)),ja(GZ)}}return Object.defineProperty(iZ.registeredClass.instancePrototype,o,SZ),[]}),[]})}function ns(){Object.assign(dW.prototype,{get(a){return Y(this.allocated[a]!==void 0,`invalid handle: ${a}`),this.allocated[a]},has(a){return this.allocated[a]!==void 0},allocate(a){var o=this.freelist.pop()||this.allocated.length;return this.allocated[o]=a,o},free(a){Y(this.allocated[a]!==void 0),this.allocated[a]=void 0,this.freelist.push(a)}})}function dW(){this.allocated=[void 0],this.freelist=[]}var Mh=new dW;function ca(a){a>=Mh.reserved&&--Mh.get(a).refcount===0&&Mh.free(a)}function is(){for(var a=0,o=Mh.reserved;o<Mh.allocated.length;++o)Mh.allocated[o]!==void 0&&++a;return a}function As(){Mh.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),Mh.reserved=Mh.allocated.length,h.count_emval_handles=is}var vh={toValue:a=>(a||yZ("Cannot use deleted val. handle = "+a),Mh.get(a).value),toHandle:a=>{switch(a){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Mh.allocate({refcount:1,value:a})}}};function as(a,o){o=Nh(o),EY(a,{name:o,fromWireType:function(R){var E=vh.toValue(R);return ca(R),E},toWireType:function(R,E){return vh.toHandle(E)},argPackAdvance:8,readValueFromPointer:EA,destructorFunction:null})}function bn(a){if(a===null)return"null";var o=typeof a;return o==="object"||o==="array"||o==="function"?a.toString():""+a}function ts(a,o){switch(o){case 2:return function(R){return this.fromWireType(XZ[R>>2])};case 3:return function(R){return this.fromWireType(wZ[R>>3])};default:throw new TypeError("Unknown float type: "+a)}}function Ws(a,o,R){var E=Ja(R);o=Nh(o),EY(a,{name:o,fromWireType:function(B){return B},toWireType:function(B,M){if(typeof M!="number"&&typeof M!="boolean")throw new TypeError(`Cannot convert ${bn(M)} to ${this.name}`);return M},argPackAdvance:8,readValueFromPointer:ts(o,E),destructorFunction:null})}function es(a,o,R){switch(o){case 0:return R?function(B){return ZZ[B]}:function(B){return oZ[B]};case 1:return R?function(B){return RZ[B>>1]}:function(B){return EZ[B>>1]};case 2:return R?function(B){return z[B>>2]}:function(B){return nZ[B>>2]};default:throw new TypeError("Unknown integer type: "+a)}}function os(a,o,R,E,B){o=Nh(o),B===-1&&(B=4294967295);var M=Ja(R),D=VZ=>VZ;if(E===0){var u=32-8*R;D=VZ=>VZ<<u>>>u}var w=o.includes("unsigned"),P=(VZ,AZ)=>{if(typeof VZ!="number"&&typeof VZ!="boolean")throw new TypeError(`Cannot convert "${bn(VZ)}" to ${AZ}`);if(VZ<E||VZ>B)throw new TypeError(`Passing a number "${bn(VZ)}" from JS side to C/C++ side to an argument of type "${o}", which is outside the valid range [${E}, ${B}]!`)},iZ;w?iZ=function(VZ,AZ){return P(AZ,this.name),AZ>>>0}:iZ=function(VZ,AZ){return P(AZ,this.name),AZ},EY(a,{name:o,fromWireType:D,toWireType:iZ,argPackAdvance:8,readValueFromPointer:es(o,M,E!==0),destructorFunction:null})}function Vs(a,o,R){var E=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],B=E[o];function M(D){D=D>>2;var u=nZ,w=u[D],P=u[D+1];return new B(u.buffer,P,w)}R=Nh(R),EY(a,{name:R,fromWireType:M,argPackAdvance:8,readValueFromPointer:M},{ignoreDuplicateRegistrations:!0})}var Ta=(a,o,R,E)=>{if(Y(typeof a=="string"),!(E>0))return 0;for(var B=R,M=R+E-1,D=0;D<a.length;++D){var u=a.charCodeAt(D);if(u>=55296&&u<=57343){var w=a.charCodeAt(++D);u=65536+((u&1023)<<10)|w&1023}if(u<=127){if(R>=M)break;o[R++]=u}else if(u<=2047){if(R+1>=M)break;o[R++]=192|u>>6,o[R++]=128|u&63}else if(u<=65535){if(R+2>=M)break;o[R++]=224|u>>12,o[R++]=128|u>>6&63,o[R++]=128|u&63}else{if(R+3>=M)break;u>1114111&&Qh("Invalid Unicode code point "+oY(u)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF)."),o[R++]=240|u>>18,o[R++]=128|u>>12&63,o[R++]=128|u>>6&63,o[R++]=128|u&63}}return o[R]=0,R-B},UA=(a,o,R)=>(Y(typeof R=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),Ta(a,oZ,o,R)),xn=a=>{for(var o=0,R=0;R<a.length;++R){var E=a.charCodeAt(R);E<=127?o++:E<=2047?o+=2:E>=55296&&E<=57343?(o+=4,++R):o+=3}return o};function ls(a,o){o=Nh(o);var R=o==="std::string";EY(a,{name:o,fromWireType:function(E){var B=nZ[E>>2],M=E+4,D;if(R)for(var u=M,w=0;w<=B;++w){var P=M+w;if(w==B||oZ[P]==0){var iZ=P-u,VZ=Ch(u,iZ);D===void 0?D=VZ:(D+=String.fromCharCode(0),D+=VZ),u=P+1}}else{for(var AZ=new Array(B),w=0;w<B;++w)AZ[w]=String.fromCharCode(oZ[M+w]);D=AZ.join("")}return JY(E),D},toWireType:function(E,B){B instanceof ArrayBuffer&&(B=new Uint8Array(B));var M,D=typeof B=="string";D||B instanceof Uint8Array||B instanceof Uint8ClampedArray||B instanceof Int8Array||yZ("Cannot pass non-string to std::string"),R&&D?M=xn(B):M=B.length;var u=gA(4+M+1),w=u+4;if(nZ[u>>2]=M,R&&D)UA(B,w,M+1);else if(D)for(var P=0;P<M;++P){var iZ=B.charCodeAt(P);iZ>255&&(JY(w),yZ("String has UTF-16 code units that do not fit in 8 bits")),oZ[w+P]=iZ}else for(var P=0;P<M;++P)oZ[w+P]=B[P];return E!==null&&E.push(JY,u),u},argPackAdvance:8,readValueFromPointer:EA,destructorFunction:function(E){JY(E)}})}var sW=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Rs=(a,o)=>{Y(a%2==0,"Pointer passed to UTF16ToString must be aligned to two bytes!");for(var R=a,E=R>>1,B=E+o/2;!(E>=B)&&EZ[E];)++E;if(R=E<<1,R-a>32&&sW)return sW.decode(oZ.subarray(a,R));for(var M="",D=0;!(D>=o/2);++D){var u=RZ[a+D*2>>1];if(u==0)break;M+=String.fromCharCode(u)}return M},Gs=(a,o,R)=>{if(Y(o%2==0,"Pointer passed to stringToUTF16 must be aligned to two bytes!"),Y(typeof R=="number","stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),R===void 0&&(R=2147483647),R<2)return 0;R-=2;for(var E=o,B=R<a.length*2?R/2:a.length,M=0;M<B;++M){var D=a.charCodeAt(M);RZ[o>>1]=D,o+=2}return RZ[o>>1]=0,o-E},Fs=a=>a.length*2,ds=(a,o)=>{Y(a%4==0,"Pointer passed to UTF32ToString must be aligned to four bytes!");for(var R=0,E="";!(R>=o/4);){var B=z[a+R*4>>2];if(B==0)break;if(++R,B>=65536){var M=B-65536;E+=String.fromCharCode(55296|M>>10,56320|M&1023)}else E+=String.fromCharCode(B)}return E},ss=(a,o,R)=>{if(Y(o%4==0,"Pointer passed to stringToUTF32 must be aligned to four bytes!"),Y(typeof R=="number","stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),R===void 0&&(R=2147483647),R<4)return 0;for(var E=o,B=E+R-4,M=0;M<a.length;++M){var D=a.charCodeAt(M);if(D>=55296&&D<=57343){var u=a.charCodeAt(++M);D=65536+((D&1023)<<10)|u&1023}if(z[o>>2]=D,o+=4,o+4>B)break}return z[o>>2]=0,o-E},rs=a=>{for(var o=0,R=0;R<a.length;++R){var E=a.charCodeAt(R);E>=55296&&E<=57343&&++R,o+=4}return o},Ns=function(a,o,R){R=Nh(R);var E,B,M,D,u;o===2?(E=Rs,B=Gs,D=Fs,M=()=>EZ,u=1):o===4&&(E=ds,B=ss,D=rs,M=()=>nZ,u=2),EY(a,{name:R,fromWireType:function(w){for(var P=nZ[w>>2],iZ=M(),VZ,AZ=w+4,aZ=0;aZ<=P;++aZ){var FZ=w+4+aZ*o;if(aZ==P||iZ[FZ>>u]==0){var SZ=FZ-AZ,Ym=E(AZ,SZ);VZ===void 0?VZ=Ym:(VZ+=String.fromCharCode(0),VZ+=Ym),AZ=FZ+o}}return JY(w),VZ},toWireType:function(w,P){typeof P!="string"&&yZ(`Cannot pass non-string to C++ string type ${R}`);var iZ=D(P),VZ=gA(4+iZ+o);return nZ[VZ>>2]=iZ>>u,B(P,VZ+4,iZ+o),w!==null&&w.push(JY,VZ),VZ},argPackAdvance:8,readValueFromPointer:EA,destructorFunction:function(w){JY(w)}})};function Es(a,o){o=Nh(o),EY(a,{isVoid:!0,name:o,argPackAdvance:0,fromWireType:function(){},toWireType:function(R,E){}})}var ks=!0,Us=()=>ks;function rW(a,o){var R=Gn[a];return R===void 0&&yZ(o+" has unknown type "+lW(a)),R}function Js(a,o,R){a=vh.toValue(a),o=rW(o,"emval::as");var E=[],B=vh.toHandle(E);return nZ[R>>2]=B,o.toWireType(E,a)}function Qs(a,o){return a=vh.toValue(a),o=vh.toValue(o),vh.toHandle(a[o])}function Cs(a){a>4&&(Mh.get(a).refcount+=1)}var Bs={};function gs(a){var o=Bs[a];return o===void 0?Nh(a):o}function Is(a){return vh.toHandle(gs(a))}function ps(a){var o=vh.toValue(a);ja(o),ca(a)}function js(a,o){a=rW(a,"_emval_take_value");var R=a.readValueFromPointer(o);return vh.toHandle(R)}function NW(a,o){return Y(a==a>>>0||a==(a|0)),Y(o===(o|0)),o+2097152>>>0<4194305-!!a?(a>>>0)+o*4294967296:NaN}function cs(a,o,R){var E=NW(a,o),B=new Date(E*1e3);z[R>>2]=B.getUTCSeconds(),z[R+4>>2]=B.getUTCMinutes(),z[R+8>>2]=B.getUTCHours(),z[R+12>>2]=B.getUTCDate(),z[R+16>>2]=B.getUTCMonth(),z[R+20>>2]=B.getUTCFullYear()-1900,z[R+24>>2]=B.getUTCDay();var M=Date.UTC(B.getUTCFullYear(),0,1,0,0,0,0),D=(B.getTime()-M)/(1e3*60*60*24)|0;z[R+28>>2]=D}var Ni=a=>a%4===0&&(a%100!==0||a%400===0),Ts=[0,31,60,91,121,152,182,213,244,274,305,335],Ms=[0,31,59,90,120,151,181,212,243,273,304,334],Ss=a=>{var o=Ni(a.getFullYear()),R=o?Ts:Ms,E=R[a.getMonth()]+a.getDate()-1;return E},Ds=function(a){var o=(()=>{var R=new Date(z[a+20>>2]+1900,z[a+16>>2],z[a+12>>2],z[a+8>>2],z[a+4>>2],z[a>>2],0),E=z[a+32>>2],B=R.getTimezoneOffset(),M=new Date(R.getFullYear(),0,1),D=new Date(R.getFullYear(),6,1).getTimezoneOffset(),u=M.getTimezoneOffset(),w=Math.min(u,D);if(E<0)z[a+32>>2]=+(D!=u&&w==B);else if(E>0!=(w==B)){var P=Math.max(u,D),iZ=E>0?w:P;R.setTime(R.getTime()+(iZ-B)*6e4)}z[a+24>>2]=R.getDay();var VZ=Ss(R)|0;return z[a+28>>2]=VZ,z[a>>2]=R.getSeconds(),z[a+4>>2]=R.getMinutes(),z[a+8>>2]=R.getHours(),z[a+12>>2]=R.getDate(),z[a+16>>2]=R.getMonth(),z[a+20>>2]=R.getYear(),R.getTime()/1e3})();return Ur((pZ=o,+Math.abs(pZ)>=1?pZ>0?+Math.floor(pZ/4294967296)>>>0:~~+Math.ceil((pZ-+(~~pZ>>>0))/4294967296)>>>0:0)),o>>>0},EW=a=>{var o=xn(a)+1,R=gA(o);return R&&UA(a,R,o),R},fs=(a,o,R)=>{var E=new Date().getFullYear(),B=new Date(E,0,1),M=new Date(E,6,1),D=B.getTimezoneOffset(),u=M.getTimezoneOffset(),w=Math.max(D,u);nZ[a>>2]=w*60,z[o>>2]=+(D!=u);function P(FZ){var SZ=FZ.toTimeString().match(/\(([A-Za-z ]+)\)$/);return SZ?SZ[1]:"GMT"}var iZ=P(B),VZ=P(M),AZ=EW(iZ),aZ=EW(VZ);u<D?(nZ[R>>2]=AZ,nZ[R+4>>2]=aZ):(nZ[R>>2]=aZ,nZ[R+4>>2]=AZ)},us=()=>{L("native code called abort()")},JA=[],bs=(a,o)=>{Y(Array.isArray(JA)),Y(o%16==0),JA.length=0;var R;for(o>>=2;R=oZ[a++];){var E=String.fromCharCode(R),B=["d","f","i"];Y(B.includes(E),`Invalid character ${R}("${E}") in readEmAsmArgs! Use only [${B}], and do not specify "v" for void return argument.`),o+=R!=105&o,JA.push(R==105?z[o]:wZ[o++>>1]),++o}return JA},xs=(a,o,R)=>{var E=bs(o,R);return Sn.hasOwnProperty(a)||L(`No EM_ASM constant found at address ${a}`),Sn[a].apply(null,E)},_s=(a,o,R)=>xs(a,o,R);function Os(){return Date.now()}var kW;kW=()=>performance.now();var ws=(a,o,R)=>oZ.copyWithin(a,o,o+R),ys=()=>2147483648,Hs=a=>{var o=hZ.buffer,R=a-o.byteLength+65535>>>16;try{return hZ.grow(R),DZ(),1}catch(E){b(`growMemory: Attempted to grow heap from ${o.byteLength} bytes to ${a} bytes, but got error: ${E}`)}},zs=a=>{var o=oZ.length;a>>>=0,Y(a>o);var R=ys();if(a>R)return b(`Cannot enlarge memory, asked to go up to ${a} bytes, but the limit is ${R} bytes!`),!1;for(var E=(w,P)=>w+(P-w%P)%P,B=1;B<=4;B*=2){var M=o*(1+.2/B);M=Math.min(M,a+100663296);var D=Math.min(R,E(Math.max(a,M),65536)),u=Hs(D);if(u)return!0}return b(`Failed to grow the heap from ${o} bytes to ${D} bytes, not enough memory!`),!1},UW=a=>{var o=(globalThis.eval["\u2003"]=globalThis.eval)(Ch(a));if(o==null)return 0;o+="";var R=UW,E=xn(o);return(!R.bufferSize||R.bufferSize<E+1)&&(R.bufferSize&&JY(R.buffer),R.bufferSize=E+1,R.buffer=gA(R.bufferSize)),UA(o,R.buffer,R.bufferSize),R.buffer},Ma={},Xs=()=>W||"./this.program",Ei=()=>{if(!Ei.strings){var a=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",o={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:a,_:Xs()};for(var R in Ma)Ma[R]===void 0?delete o[R]:o[R]=Ma[R];var E=[];for(var R in o)E.push(`${R}=${o[R]}`);Ei.strings=E}return Ei.strings},Ls=(a,o)=>{for(var R=0;R<a.length;++R)Y(a.charCodeAt(R)===(a.charCodeAt(R)&255)),ZZ[o++>>0]=a.charCodeAt(R);ZZ[o>>0]=0},hm={isAbs:a=>a.charAt(0)==="/",splitPath:a=>{var o=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return o.exec(a).slice(1)},normalizeArray:(a,o)=>{for(var R=0,E=a.length-1;E>=0;E--){var B=a[E];B==="."?a.splice(E,1):B===".."?(a.splice(E,1),R++):R&&(a.splice(E,1),R--)}if(o)for(;R;R--)a.unshift("..");return a},normalize:a=>{var o=hm.isAbs(a),R=a.substr(-1)==="/";return a=hm.normalizeArray(a.split("/").filter(E=>!!E),!o).join("/"),!a&&!o&&(a="."),a&&R&&(a+="/"),(o?"/":"")+a},dirname:a=>{var o=hm.splitPath(a),R=o[0],E=o[1];return!R&&!E?".":(E&&(E=E.substr(0,E.length-1)),R+E)},basename:a=>{if(a==="/")return"/";a=hm.normalize(a),a=a.replace(/\/$/,"");var o=a.lastIndexOf("/");return o===-1?a:a.substr(o+1)},join:function(){var a=Array.prototype.slice.call(arguments);return hm.normalize(a.join("/"))},join2:(a,o)=>hm.normalize(a+"/"+o)},vs=()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return a=>crypto.getRandomValues(a);L("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: (array) => { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")},JW=a=>(JW=vs())(a),UY={resolve:function(){for(var a="",o=!1,R=arguments.length-1;R>=-1&&!o;R--){var E=R>=0?arguments[R]:C.cwd();if(typeof E!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!E)return"";a=E+"/"+a,o=hm.isAbs(E)}return a=hm.normalizeArray(a.split("/").filter(B=>!!B),!o).join("/"),(o?"/":"")+a||"."},relative:(a,o)=>{a=UY.resolve(a).substr(1),o=UY.resolve(o).substr(1);function R(P){for(var iZ=0;iZ<P.length&&P[iZ]==="";iZ++);for(var VZ=P.length-1;VZ>=0&&P[VZ]==="";VZ--);return iZ>VZ?[]:P.slice(iZ,VZ-iZ+1)}for(var E=R(a.split("/")),B=R(o.split("/")),M=Math.min(E.length,B.length),D=M,u=0;u<M;u++)if(E[u]!==B[u]){D=u;break}for(var w=[],u=D;u<E.length;u++)w.push("..");return w=w.concat(B.slice(D)),w.join("/")}},Sa=[];function QA(a,o,R){var E=R>0?R:xn(a)+1,B=new Array(E),M=Ta(a,B,0,B.length);return o&&(B.length=M),B}var Ps=()=>{if(!Sa.length){var a=null;if(typeof window<"u"&&typeof window.prompt=="function"?(a=window.prompt("Input: "),a!==null&&(a+=`
`)):typeof readline=="function"&&(a=readline(),a!==null&&(a+=`
`)),!a)return null;Sa=QA(a,!0)}return Sa.shift()},XY={ttys:[],init:function(){},shutdown:function(){},register:function(a,o){XY.ttys[a]={input:[],output:[],ops:o},C.registerDevice(a,XY.stream_ops)},stream_ops:{open:function(a){var o=XY.ttys[a.node.rdev];if(!o)throw new C.ErrnoError(43);a.tty=o,a.seekable=!1},close:function(a){a.tty.ops.fsync(a.tty)},fsync:function(a){a.tty.ops.fsync(a.tty)},read:function(a,o,R,E,B){if(!a.tty||!a.tty.ops.get_char)throw new C.ErrnoError(60);for(var M=0,D=0;D<E;D++){var u;try{u=a.tty.ops.get_char(a.tty)}catch{throw new C.ErrnoError(29)}if(u===void 0&&M===0)throw new C.ErrnoError(6);if(u==null)break;M++,o[R+D]=u}return M&&(a.node.timestamp=Date.now()),M},write:function(a,o,R,E,B){if(!a.tty||!a.tty.ops.put_char)throw new C.ErrnoError(60);try{for(var M=0;M<E;M++)a.tty.ops.put_char(a.tty,o[R+M])}catch{throw new C.ErrnoError(29)}return E&&(a.node.timestamp=Date.now()),M}},default_tty_ops:{get_char:function(a){return Ps()},put_char:function(a,o){o===null||o===10?(f(VY(a.output,0)),a.output=[]):o!=0&&a.output.push(o)},fsync:function(a){a.output&&a.output.length>0&&(f(VY(a.output,0)),a.output=[])},ioctl_tcgets:function(a){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets:function(a,o,R){return 0},ioctl_tiocgwinsz:function(a){return[24,80]}},default_tty1_ops:{put_char:function(a,o){o===null||o===10?(b(VY(a.output,0)),a.output=[]):o!=0&&a.output.push(o)},fsync:function(a){a.output&&a.output.length>0&&(b(VY(a.output,0)),a.output=[])}}},QW=a=>{L("internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported")},MZ={ops_table:null,mount(a){return MZ.createNode(null,"/",16895,0)},createNode(a,o,R,E){if(C.isBlkdev(R)||C.isFIFO(R))throw new C.ErrnoError(63);MZ.ops_table||(MZ.ops_table={dir:{node:{getattr:MZ.node_ops.getattr,setattr:MZ.node_ops.setattr,lookup:MZ.node_ops.lookup,mknod:MZ.node_ops.mknod,rename:MZ.node_ops.rename,unlink:MZ.node_ops.unlink,rmdir:MZ.node_ops.rmdir,readdir:MZ.node_ops.readdir,symlink:MZ.node_ops.symlink},stream:{llseek:MZ.stream_ops.llseek}},file:{node:{getattr:MZ.node_ops.getattr,setattr:MZ.node_ops.setattr},stream:{llseek:MZ.stream_ops.llseek,read:MZ.stream_ops.read,write:MZ.stream_ops.write,allocate:MZ.stream_ops.allocate,mmap:MZ.stream_ops.mmap,msync:MZ.stream_ops.msync}},link:{node:{getattr:MZ.node_ops.getattr,setattr:MZ.node_ops.setattr,readlink:MZ.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MZ.node_ops.getattr,setattr:MZ.node_ops.setattr},stream:C.chrdev_stream_ops}});var B=C.createNode(a,o,R,E);return C.isDir(B.mode)?(B.node_ops=MZ.ops_table.dir.node,B.stream_ops=MZ.ops_table.dir.stream,B.contents={}):C.isFile(B.mode)?(B.node_ops=MZ.ops_table.file.node,B.stream_ops=MZ.ops_table.file.stream,B.usedBytes=0,B.contents=null):C.isLink(B.mode)?(B.node_ops=MZ.ops_table.link.node,B.stream_ops=MZ.ops_table.link.stream):C.isChrdev(B.mode)&&(B.node_ops=MZ.ops_table.chrdev.node,B.stream_ops=MZ.ops_table.chrdev.stream),B.timestamp=Date.now(),a&&(a.contents[o]=B,a.timestamp=B.timestamp),B},getFileDataAsTypedArray(a){return a.contents?a.contents.subarray?a.contents.subarray(0,a.usedBytes):new Uint8Array(a.contents):new Uint8Array(0)},expandFileStorage(a,o){var R=a.contents?a.contents.length:0;if(!(R>=o)){var E=1024*1024;o=Math.max(o,R*(R<E?2:1.125)>>>0),R!=0&&(o=Math.max(o,256));var B=a.contents;a.contents=new Uint8Array(o),a.usedBytes>0&&a.contents.set(B.subarray(0,a.usedBytes),0)}},resizeFileStorage(a,o){if(a.usedBytes!=o)if(o==0)a.contents=null,a.usedBytes=0;else{var R=a.contents;a.contents=new Uint8Array(o),R&&a.contents.set(R.subarray(0,Math.min(o,a.usedBytes))),a.usedBytes=o}},node_ops:{getattr(a){var o={};return o.dev=C.isChrdev(a.mode)?a.id:1,o.ino=a.id,o.mode=a.mode,o.nlink=1,o.uid=0,o.gid=0,o.rdev=a.rdev,C.isDir(a.mode)?o.size=4096:C.isFile(a.mode)?o.size=a.usedBytes:C.isLink(a.mode)?o.size=a.link.length:o.size=0,o.atime=new Date(a.timestamp),o.mtime=new Date(a.timestamp),o.ctime=new Date(a.timestamp),o.blksize=4096,o.blocks=Math.ceil(o.size/o.blksize),o},setattr(a,o){o.mode!==void 0&&(a.mode=o.mode),o.timestamp!==void 0&&(a.timestamp=o.timestamp),o.size!==void 0&&MZ.resizeFileStorage(a,o.size)},lookup(a,o){throw C.genericErrors[44]},mknod(a,o,R,E){return MZ.createNode(a,o,R,E)},rename(a,o,R){if(C.isDir(a.mode)){var E;try{E=C.lookupNode(o,R)}catch{}if(E)for(var B in E.contents)throw new C.ErrnoError(55)}delete a.parent.contents[a.name],a.parent.timestamp=Date.now(),a.name=R,o.contents[R]=a,o.timestamp=a.parent.timestamp,a.parent=o},unlink(a,o){delete a.contents[o],a.timestamp=Date.now()},rmdir(a,o){var R=C.lookupNode(a,o);for(var E in R.contents)throw new C.ErrnoError(55);delete a.contents[o],a.timestamp=Date.now()},readdir(a){var o=[".",".."];for(var R in a.contents)a.contents.hasOwnProperty(R)&&o.push(R);return o},symlink(a,o,R){var E=MZ.createNode(a,o,41471,0);return E.link=R,E},readlink(a){if(!C.isLink(a.mode))throw new C.ErrnoError(28);return a.link}},stream_ops:{read(a,o,R,E,B){var M=a.node.contents;if(B>=a.node.usedBytes)return 0;var D=Math.min(a.node.usedBytes-B,E);if(Y(D>=0),D>8&&M.subarray)o.set(M.subarray(B,B+D),R);else for(var u=0;u<D;u++)o[R+u]=M[B+u];return D},write(a,o,R,E,B,M){if(Y(!(o instanceof ArrayBuffer)),o.buffer===ZZ.buffer&&(M=!1),!E)return 0;var D=a.node;if(D.timestamp=Date.now(),o.subarray&&(!D.contents||D.contents.subarray)){if(M)return Y(B===0,"canOwn must imply no weird position inside the file"),D.contents=o.subarray(R,R+E),D.usedBytes=E,E;if(D.usedBytes===0&&B===0)return D.contents=o.slice(R,R+E),D.usedBytes=E,E;if(B+E<=D.usedBytes)return D.contents.set(o.subarray(R,R+E),B),E}if(MZ.expandFileStorage(D,B+E),D.contents.subarray&&o.subarray)D.contents.set(o.subarray(R,R+E),B);else for(var u=0;u<E;u++)D.contents[B+u]=o[R+u];return D.usedBytes=Math.max(D.usedBytes,B+E),E},llseek(a,o,R){var E=o;if(R===1?E+=a.position:R===2&&C.isFile(a.node.mode)&&(E+=a.node.usedBytes),E<0)throw new C.ErrnoError(28);return E},allocate(a,o,R){MZ.expandFileStorage(a.node,o+R),a.node.usedBytes=Math.max(a.node.usedBytes,o+R)},mmap(a,o,R,E,B){if(!C.isFile(a.node.mode))throw new C.ErrnoError(43);var M,D,u=a.node.contents;if(!(B&2)&&u.buffer===ZZ.buffer)D=!1,M=u.byteOffset;else{if((R>0||R+o<u.length)&&(u.subarray?u=u.subarray(R,R+o):u=Array.prototype.slice.call(u,R,R+o)),D=!0,M=QW(o),!M)throw new C.ErrnoError(48);ZZ.set(u,M)}return{ptr:M,allocated:D}},msync(a,o,R,E,B){return MZ.stream_ops.write(a,o,0,E,R,!1),0}}},Ks=(a,o,R,E)=>{var B=E?"":c(`al ${a}`);p(a,M=>{Y(M,`Loading data file "${a}" failed (no arrayBuffer).`),o(new Uint8Array(M)),B&&$(B)},M=>{if(R)R();else throw`Loading data file "${a}" failed.`}),B&&x(B)},qs=h.preloadPlugins||[];function $s(a,o,R,E){typeof Browser<"u"&&Browser.init();var B=!1;return qs.forEach(function(M){B||M.canHandle(o)&&(M.handle(a,o,R,E),B=!0)}),B}function Zr(a,o,R,E,B,M,D,u,w,P){var iZ=o?UY.resolve(hm.join2(a,o)):a,VZ=c(`cp ${iZ}`);function AZ(aZ){function FZ(SZ){P&&P(),u||C.createDataFile(a,o,SZ,E,B,w),M&&M(),$(VZ)}$s(aZ,iZ,FZ,()=>{D&&D(),$(VZ)})||FZ(aZ)}x(VZ),typeof R=="string"?Ks(R,aZ=>AZ(aZ),D):AZ(R)}function mr(a){var o={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},R=o[a];if(typeof R>"u")throw new Error(`Unknown file open mode: ${a}`);return R}function Da(a,o){var R=0;return a&&(R|=365),o&&(R|=146),R}var hr={0:"Success",1:"Arg list too long",2:"Permission denied",3:"Address already in use",4:"Address not available",5:"Address family not supported by protocol family",6:"No more processes",7:"Socket already connected",8:"Bad file number",9:"Trying to read unreadable message",10:"Mount device busy",11:"Operation canceled",12:"No children",13:"Connection aborted",14:"Connection refused",15:"Connection reset by peer",16:"File locking deadlock error",17:"Destination address required",18:"Math arg out of domain of func",19:"Quota exceeded",20:"File exists",21:"Bad address",22:"File too large",23:"Host is unreachable",24:"Identifier removed",25:"Illegal byte sequence",26:"Connection already in progress",27:"Interrupted system call",28:"Invalid argument",29:"I/O error",30:"Socket is already connected",31:"Is a directory",32:"Too many symbolic links",33:"Too many open files",34:"Too many links",35:"Message too long",36:"Multihop attempted",37:"File or path name too long",38:"Network interface is not configured",39:"Connection reset by network",40:"Network is unreachable",41:"Too many open files in system",42:"No buffer space available",43:"No such device",44:"No such file or directory",45:"Exec format error",46:"No record locks available",47:"The link has been severed",48:"Not enough core",49:"No message of desired type",50:"Protocol not available",51:"No space left on device",52:"Function not implemented",53:"Socket is not connected",54:"Not a directory",55:"Directory not empty",56:"State not recoverable",57:"Socket operation on non-socket",59:"Not a typewriter",60:"No such device or address",61:"Value too large for defined data type",62:"Previous owner died",63:"Not super-user",64:"Broken pipe",65:"Protocol error",66:"Unknown protocol",67:"Protocol wrong type for socket",68:"Math result not representable",69:"Read only file system",70:"Illegal seek",71:"No such process",72:"Stale file handle",73:"Connection timed out",74:"Text file busy",75:"Cross-device link",100:"Device not a stream",101:"Bad font file fmt",102:"Invalid slot",103:"Invalid request code",104:"No anode",105:"Block device required",106:"Channel number out of range",107:"Level 3 halted",108:"Level 3 reset",109:"Link number out of range",110:"Protocol driver not attached",111:"No CSI structure available",112:"Level 2 halted",113:"Invalid exchange",114:"Invalid request descriptor",115:"Exchange full",116:"No data (for no delay io)",117:"Timer expired",118:"Out of streams resources",119:"Machine is not on the network",120:"Package not installed",121:"The object is remote",122:"Advertise error",123:"Srmount error",124:"Communication error on send",125:"Cross mount point (not really error)",126:"Given log. name not unique",127:"f.d. invalid for this operation",128:"Remote address changed",129:"Can   access a needed shared lib",130:"Accessing a corrupted shared lib",131:".lib section in a.out corrupted",132:"Attempting to link in too many libs",133:"Attempting to exec a shared library",135:"Streams pipe error",136:"Too many users",137:"Socket type not supported",138:"Not supported",139:"Protocol family not supported",140:"Can't send after socket shutdown",141:"Too many references",142:"Host is down",148:"No medium (in tape drive)",156:"Level 2 not synchronized"},fa={};function Yr(a){return Qh("warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling"),a}function nr(a){var o=/\b_Z[\w\d_]+/g;return a.replace(o,function(R){var E=Yr(R);return R===E?R:E+" ["+R+"]"})}var C={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(a,o={})=>{if(a=UY.resolve(a),!a)return{path:"",node:null};var R={follow_mount:!0,recurse_count:0};if(o=Object.assign(R,o),o.recurse_count>8)throw new C.ErrnoError(32);for(var E=a.split("/").filter(VZ=>!!VZ),B=C.root,M="/",D=0;D<E.length;D++){var u=D===E.length-1;if(u&&o.parent)break;if(B=C.lookupNode(B,E[D]),M=hm.join2(M,E[D]),C.isMountpoint(B)&&(!u||u&&o.follow_mount)&&(B=B.mounted.root),!u||o.follow)for(var w=0;C.isLink(B.mode);){var P=C.readlink(M);M=UY.resolve(hm.dirname(M),P);var iZ=C.lookupPath(M,{recurse_count:o.recurse_count+1});if(B=iZ.node,w++>40)throw new C.ErrnoError(32)}}return{path:M,node:B}},getPath:a=>{for(var o;;){if(C.isRoot(a)){var R=a.mount.mountpoint;return o?R[R.length-1]!=="/"?`${R}/${o}`:R+o:R}o=o?`${a.name}/${o}`:a.name,a=a.parent}},hashName:(a,o)=>{for(var R=0,E=0;E<o.length;E++)R=(R<<5)-R+o.charCodeAt(E)|0;return(a+R>>>0)%C.nameTable.length},hashAddNode:a=>{var o=C.hashName(a.parent.id,a.name);a.name_next=C.nameTable[o],C.nameTable[o]=a},hashRemoveNode:a=>{var o=C.hashName(a.parent.id,a.name);if(C.nameTable[o]===a)C.nameTable[o]=a.name_next;else for(var R=C.nameTable[o];R;){if(R.name_next===a){R.name_next=a.name_next;break}R=R.name_next}},lookupNode:(a,o)=>{var R=C.mayLookup(a);if(R)throw new C.ErrnoError(R,a);for(var E=C.hashName(a.id,o),B=C.nameTable[E];B;B=B.name_next){var M=B.name;if(B.parent.id===a.id&&M===o)return B}return C.lookup(a,o)},createNode:(a,o,R,E)=>{Y(typeof a=="object");var B=new C.FSNode(a,o,R,E);return C.hashAddNode(B),B},destroyNode:a=>{C.hashRemoveNode(a)},isRoot:a=>a===a.parent,isMountpoint:a=>!!a.mounted,isFile:a=>(a&61440)===32768,isDir:a=>(a&61440)===16384,isLink:a=>(a&61440)===40960,isChrdev:a=>(a&61440)===8192,isBlkdev:a=>(a&61440)===24576,isFIFO:a=>(a&61440)===4096,isSocket:a=>(a&49152)===49152,flagsToPermissionString:a=>{var o=["r","w","rw"][a&3];return a&512&&(o+="w"),o},nodePermissions:(a,o)=>C.ignorePermissions?0:o.includes("r")&&!(a.mode&292)||o.includes("w")&&!(a.mode&146)||o.includes("x")&&!(a.mode&73)?2:0,mayLookup:a=>{var o=C.nodePermissions(a,"x");return o||(a.node_ops.lookup?0:2)},mayCreate:(a,o)=>{try{var R=C.lookupNode(a,o);return 20}catch{}return C.nodePermissions(a,"wx")},mayDelete:(a,o,R)=>{var E;try{E=C.lookupNode(a,o)}catch(M){return M.errno}var B=C.nodePermissions(a,"wx");if(B)return B;if(R){if(!C.isDir(E.mode))return 54;if(C.isRoot(E)||C.getPath(E)===C.cwd())return 10}else if(C.isDir(E.mode))return 31;return 0},mayOpen:(a,o)=>a?C.isLink(a.mode)?32:C.isDir(a.mode)&&(C.flagsToPermissionString(o)!=="r"||o&512)?31:C.nodePermissions(a,C.flagsToPermissionString(o)):44,MAX_OPEN_FDS:4096,nextfd:()=>{for(var a=0;a<=C.MAX_OPEN_FDS;a++)if(!C.streams[a])return a;throw new C.ErrnoError(33)},getStreamChecked:a=>{var o=C.getStream(a);if(!o)throw new C.ErrnoError(8);return o},getStream:a=>C.streams[a],createStream:(a,o=-1)=>(C.FSStream||(C.FSStream=function(){this.shared={}},C.FSStream.prototype={},Object.defineProperties(C.FSStream.prototype,{object:{get(){return this.node},set(R){this.node=R}},isRead:{get(){return(this.flags&2097155)!==1}},isWrite:{get(){return(this.flags&2097155)!==0}},isAppend:{get(){return this.flags&1024}},flags:{get(){return this.shared.flags},set(R){this.shared.flags=R}},position:{get(){return this.shared.position},set(R){this.shared.position=R}}})),a=Object.assign(new C.FSStream,a),o==-1&&(o=C.nextfd()),a.fd=o,C.streams[o]=a,a),closeStream:a=>{C.streams[a]=null},chrdev_stream_ops:{open:a=>{var o=C.getDevice(a.node.rdev);a.stream_ops=o.stream_ops,a.stream_ops.open&&a.stream_ops.open(a)},llseek:()=>{throw new C.ErrnoError(70)}},major:a=>a>>8,minor:a=>a&255,makedev:(a,o)=>a<<8|o,registerDevice:(a,o)=>{C.devices[a]={stream_ops:o}},getDevice:a=>C.devices[a],getMounts:a=>{for(var o=[],R=[a];R.length;){var E=R.pop();o.push(E),R.push.apply(R,E.mounts)}return o},syncfs:(a,o)=>{typeof a=="function"&&(o=a,a=!1),C.syncFSRequests++,C.syncFSRequests>1&&b(`warning: ${C.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var R=C.getMounts(C.root.mount),E=0;function B(D){return Y(C.syncFSRequests>0),C.syncFSRequests--,o(D)}function M(D){if(D)return M.errored?void 0:(M.errored=!0,B(D));++E>=R.length&&B(null)}R.forEach(D=>{if(!D.type.syncfs)return M(null);D.type.syncfs(D,a,M)})},mount:(a,o,R)=>{if(typeof a=="string")throw a;var E=R==="/",B=!R,M;if(E&&C.root)throw new C.ErrnoError(10);if(!E&&!B){var D=C.lookupPath(R,{follow_mount:!1});if(R=D.path,M=D.node,C.isMountpoint(M))throw new C.ErrnoError(10);if(!C.isDir(M.mode))throw new C.ErrnoError(54)}var u={type:a,opts:o,mountpoint:R,mounts:[]},w=a.mount(u);return w.mount=u,u.root=w,E?C.root=w:M&&(M.mounted=u,M.mount&&M.mount.mounts.push(u)),w},unmount:a=>{var o=C.lookupPath(a,{follow_mount:!1});if(!C.isMountpoint(o.node))throw new C.ErrnoError(28);var R=o.node,E=R.mounted,B=C.getMounts(E);Object.keys(C.nameTable).forEach(D=>{for(var u=C.nameTable[D];u;){var w=u.name_next;B.includes(u.mount)&&C.destroyNode(u),u=w}}),R.mounted=null;var M=R.mount.mounts.indexOf(E);Y(M!==-1),R.mount.mounts.splice(M,1)},lookup:(a,o)=>a.node_ops.lookup(a,o),mknod:(a,o,R)=>{var E=C.lookupPath(a,{parent:!0}),B=E.node,M=hm.basename(a);if(!M||M==="."||M==="..")throw new C.ErrnoError(28);var D=C.mayCreate(B,M);if(D)throw new C.ErrnoError(D);if(!B.node_ops.mknod)throw new C.ErrnoError(63);return B.node_ops.mknod(B,M,o,R)},create:(a,o)=>(o=o!==void 0?o:438,o&=4095,o|=32768,C.mknod(a,o,0)),mkdir:(a,o)=>(o=o!==void 0?o:511,o&=1023,o|=16384,C.mknod(a,o,0)),mkdirTree:(a,o)=>{for(var R=a.split("/"),E="",B=0;B<R.length;++B)if(R[B]){E+="/"+R[B];try{C.mkdir(E,o)}catch(M){if(M.errno!=20)throw M}}},mkdev:(a,o,R)=>(typeof R>"u"&&(R=o,o=438),o|=8192,C.mknod(a,o,R)),symlink:(a,o)=>{if(!UY.resolve(a))throw new C.ErrnoError(44);var R=C.lookupPath(o,{parent:!0}),E=R.node;if(!E)throw new C.ErrnoError(44);var B=hm.basename(o),M=C.mayCreate(E,B);if(M)throw new C.ErrnoError(M);if(!E.node_ops.symlink)throw new C.ErrnoError(63);return E.node_ops.symlink(E,B,a)},rename:(a,o)=>{var R=hm.dirname(a),E=hm.dirname(o),B=hm.basename(a),M=hm.basename(o),D,u,w;if(D=C.lookupPath(a,{parent:!0}),u=D.node,D=C.lookupPath(o,{parent:!0}),w=D.node,!u||!w)throw new C.ErrnoError(44);if(u.mount!==w.mount)throw new C.ErrnoError(75);var P=C.lookupNode(u,B),iZ=UY.relative(a,E);if(iZ.charAt(0)!==".")throw new C.ErrnoError(28);if(iZ=UY.relative(o,R),iZ.charAt(0)!==".")throw new C.ErrnoError(55);var VZ;try{VZ=C.lookupNode(w,M)}catch{}if(P!==VZ){var AZ=C.isDir(P.mode),aZ=C.mayDelete(u,B,AZ);if(aZ)throw new C.ErrnoError(aZ);if(aZ=VZ?C.mayDelete(w,M,AZ):C.mayCreate(w,M),aZ)throw new C.ErrnoError(aZ);if(!u.node_ops.rename)throw new C.ErrnoError(63);if(C.isMountpoint(P)||VZ&&C.isMountpoint(VZ))throw new C.ErrnoError(10);if(w!==u&&(aZ=C.nodePermissions(u,"w"),aZ))throw new C.ErrnoError(aZ);C.hashRemoveNode(P);try{u.node_ops.rename(P,w,M)}catch(FZ){throw FZ}finally{C.hashAddNode(P)}}},rmdir:a=>{var o=C.lookupPath(a,{parent:!0}),R=o.node,E=hm.basename(a),B=C.lookupNode(R,E),M=C.mayDelete(R,E,!0);if(M)throw new C.ErrnoError(M);if(!R.node_ops.rmdir)throw new C.ErrnoError(63);if(C.isMountpoint(B))throw new C.ErrnoError(10);R.node_ops.rmdir(R,E),C.destroyNode(B)},readdir:a=>{var o=C.lookupPath(a,{follow:!0}),R=o.node;if(!R.node_ops.readdir)throw new C.ErrnoError(54);return R.node_ops.readdir(R)},unlink:a=>{var o=C.lookupPath(a,{parent:!0}),R=o.node;if(!R)throw new C.ErrnoError(44);var E=hm.basename(a),B=C.lookupNode(R,E),M=C.mayDelete(R,E,!1);if(M)throw new C.ErrnoError(M);if(!R.node_ops.unlink)throw new C.ErrnoError(63);if(C.isMountpoint(B))throw new C.ErrnoError(10);R.node_ops.unlink(R,E),C.destroyNode(B)},readlink:a=>{var o=C.lookupPath(a),R=o.node;if(!R)throw new C.ErrnoError(44);if(!R.node_ops.readlink)throw new C.ErrnoError(28);return UY.resolve(C.getPath(R.parent),R.node_ops.readlink(R))},stat:(a,o)=>{var R=C.lookupPath(a,{follow:!o}),E=R.node;if(!E)throw new C.ErrnoError(44);if(!E.node_ops.getattr)throw new C.ErrnoError(63);return E.node_ops.getattr(E)},lstat:a=>C.stat(a,!0),chmod:(a,o,R)=>{var E;if(typeof a=="string"){var B=C.lookupPath(a,{follow:!R});E=B.node}else E=a;if(!E.node_ops.setattr)throw new C.ErrnoError(63);E.node_ops.setattr(E,{mode:o&4095|E.mode&-4096,timestamp:Date.now()})},lchmod:(a,o)=>{C.chmod(a,o,!0)},fchmod:(a,o)=>{var R=C.getStreamChecked(a);C.chmod(R.node,o)},chown:(a,o,R,E)=>{var B;if(typeof a=="string"){var M=C.lookupPath(a,{follow:!E});B=M.node}else B=a;if(!B.node_ops.setattr)throw new C.ErrnoError(63);B.node_ops.setattr(B,{timestamp:Date.now()})},lchown:(a,o,R)=>{C.chown(a,o,R,!0)},fchown:(a,o,R)=>{var E=C.getStreamChecked(a);C.chown(E.node,o,R)},truncate:(a,o)=>{if(o<0)throw new C.ErrnoError(28);var R;if(typeof a=="string"){var E=C.lookupPath(a,{follow:!0});R=E.node}else R=a;if(!R.node_ops.setattr)throw new C.ErrnoError(63);if(C.isDir(R.mode))throw new C.ErrnoError(31);if(!C.isFile(R.mode))throw new C.ErrnoError(28);var B=C.nodePermissions(R,"w");if(B)throw new C.ErrnoError(B);R.node_ops.setattr(R,{size:o,timestamp:Date.now()})},ftruncate:(a,o)=>{var R=C.getStreamChecked(a);if(!(R.flags&2097155))throw new C.ErrnoError(28);C.truncate(R.node,o)},utime:(a,o,R)=>{var E=C.lookupPath(a,{follow:!0}),B=E.node;B.node_ops.setattr(B,{timestamp:Math.max(o,R)})},open:(a,o,R)=>{if(a==="")throw new C.ErrnoError(44);o=typeof o=="string"?mr(o):o,R=typeof R>"u"?438:R,o&64?R=R&4095|32768:R=0;var E;if(typeof a=="object")E=a;else{a=hm.normalize(a);try{var B=C.lookupPath(a,{follow:!(o&131072)});E=B.node}catch{}}var M=!1;if(o&64)if(E){if(o&128)throw new C.ErrnoError(20)}else E=C.mknod(a,R,0),M=!0;if(!E)throw new C.ErrnoError(44);if(C.isChrdev(E.mode)&&(o&=-513),o&65536&&!C.isDir(E.mode))throw new C.ErrnoError(54);if(!M){var D=C.mayOpen(E,o);if(D)throw new C.ErrnoError(D)}o&512&&!M&&C.truncate(E,0),o&=-131713;var u=C.createStream({node:E,path:C.getPath(E),flags:o,seekable:!0,position:0,stream_ops:E.stream_ops,ungotten:[],error:!1});return u.stream_ops.open&&u.stream_ops.open(u),h.logReadFiles&&!(o&1)&&(C.readFiles||(C.readFiles={}),a in C.readFiles||(C.readFiles[a]=1)),u},close:a=>{if(C.isClosed(a))throw new C.ErrnoError(8);a.getdents&&(a.getdents=null);try{a.stream_ops.close&&a.stream_ops.close(a)}catch(o){throw o}finally{C.closeStream(a.fd)}a.fd=null},isClosed:a=>a.fd===null,llseek:(a,o,R)=>{if(C.isClosed(a))throw new C.ErrnoError(8);if(!a.seekable||!a.stream_ops.llseek)throw new C.ErrnoError(70);if(R!=0&&R!=1&&R!=2)throw new C.ErrnoError(28);return a.position=a.stream_ops.llseek(a,o,R),a.ungotten=[],a.position},read:(a,o,R,E,B)=>{if(Y(R>=0),E<0||B<0)throw new C.ErrnoError(28);if(C.isClosed(a))throw new C.ErrnoError(8);if((a.flags&2097155)===1)throw new C.ErrnoError(8);if(C.isDir(a.node.mode))throw new C.ErrnoError(31);if(!a.stream_ops.read)throw new C.ErrnoError(28);var M=typeof B<"u";if(!M)B=a.position;else if(!a.seekable)throw new C.ErrnoError(70);var D=a.stream_ops.read(a,o,R,E,B);return M||(a.position+=D),D},write:(a,o,R,E,B,M)=>{if(Y(R>=0),E<0||B<0)throw new C.ErrnoError(28);if(C.isClosed(a))throw new C.ErrnoError(8);if(!(a.flags&2097155))throw new C.ErrnoError(8);if(C.isDir(a.node.mode))throw new C.ErrnoError(31);if(!a.stream_ops.write)throw new C.ErrnoError(28);a.seekable&&a.flags&1024&&C.llseek(a,0,2);var D=typeof B<"u";if(!D)B=a.position;else if(!a.seekable)throw new C.ErrnoError(70);var u=a.stream_ops.write(a,o,R,E,B,M);return D||(a.position+=u),u},allocate:(a,o,R)=>{if(C.isClosed(a))throw new C.ErrnoError(8);if(o<0||R<=0)throw new C.ErrnoError(28);if(!(a.flags&2097155))throw new C.ErrnoError(8);if(!C.isFile(a.node.mode)&&!C.isDir(a.node.mode))throw new C.ErrnoError(43);if(!a.stream_ops.allocate)throw new C.ErrnoError(138);a.stream_ops.allocate(a,o,R)},mmap:(a,o,R,E,B)=>{if(E&2&&!(B&2)&&(a.flags&2097155)!==2)throw new C.ErrnoError(2);if((a.flags&2097155)===1)throw new C.ErrnoError(2);if(!a.stream_ops.mmap)throw new C.ErrnoError(43);return a.stream_ops.mmap(a,o,R,E,B)},msync:(a,o,R,E,B)=>(Y(R>=0),a.stream_ops.msync?a.stream_ops.msync(a,o,R,E,B):0),munmap:a=>0,ioctl:(a,o,R)=>{if(!a.stream_ops.ioctl)throw new C.ErrnoError(59);return a.stream_ops.ioctl(a,o,R)},readFile:(a,o={})=>{if(o.flags=o.flags||0,o.encoding=o.encoding||"binary",o.encoding!=="utf8"&&o.encoding!=="binary")throw new Error(`Invalid encoding type "${o.encoding}"`);var R,E=C.open(a,o.flags),B=C.stat(a),M=B.size,D=new Uint8Array(M);return C.read(E,D,0,M,0),o.encoding==="utf8"?R=VY(D,0):o.encoding==="binary"&&(R=D),C.close(E),R},writeFile:(a,o,R={})=>{R.flags=R.flags||577;var E=C.open(a,R.flags,R.mode);if(typeof o=="string"){var B=new Uint8Array(xn(o)+1),M=Ta(o,B,0,B.length);C.write(E,B,0,M,void 0,R.canOwn)}else if(ArrayBuffer.isView(o))C.write(E,o,0,o.byteLength,void 0,R.canOwn);else throw new Error("Unsupported data type");C.close(E)},cwd:()=>C.currentPath,chdir:a=>{var o=C.lookupPath(a,{follow:!0});if(o.node===null)throw new C.ErrnoError(44);if(!C.isDir(o.node.mode))throw new C.ErrnoError(54);var R=C.nodePermissions(o.node,"x");if(R)throw new C.ErrnoError(R);C.currentPath=o.path},createDefaultDirectories:()=>{C.mkdir("/tmp"),C.mkdir("/home"),C.mkdir("/home/web_user")},createDefaultDevices:()=>{C.mkdir("/dev"),C.registerDevice(C.makedev(1,3),{read:()=>0,write:(E,B,M,D,u)=>D}),C.mkdev("/dev/null",C.makedev(1,3)),XY.register(C.makedev(5,0),XY.default_tty_ops),XY.register(C.makedev(6,0),XY.default_tty1_ops),C.mkdev("/dev/tty",C.makedev(5,0)),C.mkdev("/dev/tty1",C.makedev(6,0));var a=new Uint8Array(1024),o=0,R=()=>(o===0&&(o=JW(a).byteLength),a[--o]);C.createDevice("/dev","random",R),C.createDevice("/dev","urandom",R),C.mkdir("/dev/shm"),C.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{C.mkdir("/proc");var a=C.mkdir("/proc/self");C.mkdir("/proc/self/fd"),C.mount({mount:()=>{var o=C.createNode(a,"fd",16895,73);return o.node_ops={lookup:(R,E)=>{var B=+E,M=C.getStreamChecked(B),D={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>M.path}};return D.parent=D,D}},o}},{},"/proc/self/fd")},createStandardStreams:()=>{h.stdin?C.createDevice("/dev","stdin",h.stdin):C.symlink("/dev/tty","/dev/stdin"),h.stdout?C.createDevice("/dev","stdout",null,h.stdout):C.symlink("/dev/tty","/dev/stdout"),h.stderr?C.createDevice("/dev","stderr",null,h.stderr):C.symlink("/dev/tty1","/dev/stderr");var a=C.open("/dev/stdin",0),o=C.open("/dev/stdout",1),R=C.open("/dev/stderr",1);Y(a.fd===0,`invalid handle for stdin (${a.fd})`),Y(o.fd===1,`invalid handle for stdout (${o.fd})`),Y(R.fd===2,`invalid handle for stderr (${R.fd})`)},ensureErrnoError:()=>{C.ErrnoError||(C.ErrnoError=function(o,R){this.name="ErrnoError",this.node=R,this.setErrno=function(E){this.errno=E;for(var B in fa)if(fa[B]===E){this.code=B;break}},this.setErrno(o),this.message=hr[o],this.stack&&(Object.defineProperty(this,"stack",{value:new Error().stack,writable:!0}),this.stack=nr(this.stack))},C.ErrnoError.prototype=new Error,C.ErrnoError.prototype.constructor=C.ErrnoError,[44].forEach(a=>{C.genericErrors[a]=new C.ErrnoError(a),C.genericErrors[a].stack="<generic error, no stack>"}))},staticInit:()=>{C.ensureErrnoError(),C.nameTable=new Array(4096),C.mount(MZ,{},"/"),C.createDefaultDirectories(),C.createDefaultDevices(),C.createSpecialDirectories(),C.filesystems={MEMFS:MZ}},init:(a,o,R)=>{Y(!C.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),C.init.initialized=!0,C.ensureErrnoError(),h.stdin=a||h.stdin,h.stdout=o||h.stdout,h.stderr=R||h.stderr,C.createStandardStreams()},quit:()=>{C.init.initialized=!1,Er(0);for(var a=0;a<C.streams.length;a++){var o=C.streams[a];o&&C.close(o)}},findObject:(a,o)=>{var R=C.analyzePath(a,o);return R.exists?R.object:null},analyzePath:(a,o)=>{try{var R=C.lookupPath(a,{follow:!o});a=R.path}catch{}var E={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var R=C.lookupPath(a,{parent:!0});E.parentExists=!0,E.parentPath=R.path,E.parentObject=R.node,E.name=hm.basename(a),R=C.lookupPath(a,{follow:!o}),E.exists=!0,E.path=R.path,E.object=R.node,E.name=R.node.name,E.isRoot=R.path==="/"}catch(B){E.error=B.errno}return E},createPath:(a,o,R,E)=>{a=typeof a=="string"?a:C.getPath(a);for(var B=o.split("/").reverse();B.length;){var M=B.pop();if(M){var D=hm.join2(a,M);try{C.mkdir(D)}catch{}a=D}}return D},createFile:(a,o,R,E,B)=>{var M=hm.join2(typeof a=="string"?a:C.getPath(a),o),D=Da(E,B);return C.create(M,D)},createDataFile:(a,o,R,E,B,M)=>{var D=o;a&&(a=typeof a=="string"?a:C.getPath(a),D=o?hm.join2(a,o):a);var u=Da(E,B),w=C.create(D,u);if(R){if(typeof R=="string"){for(var P=new Array(R.length),iZ=0,VZ=R.length;iZ<VZ;++iZ)P[iZ]=R.charCodeAt(iZ);R=P}C.chmod(w,u|146);var AZ=C.open(w,577);C.write(AZ,R,0,R.length,0,M),C.close(AZ),C.chmod(w,u)}return w},createDevice:(a,o,R,E)=>{var B=hm.join2(typeof a=="string"?a:C.getPath(a),o),M=Da(!!R,!!E);C.createDevice.major||(C.createDevice.major=64);var D=C.makedev(C.createDevice.major++,0);return C.registerDevice(D,{open:u=>{u.seekable=!1},close:u=>{E&&E.buffer&&E.buffer.length&&E(10)},read:(u,w,P,iZ,VZ)=>{for(var AZ=0,aZ=0;aZ<iZ;aZ++){var FZ;try{FZ=R()}catch{throw new C.ErrnoError(29)}if(FZ===void 0&&AZ===0)throw new C.ErrnoError(6);if(FZ==null)break;AZ++,w[P+aZ]=FZ}return AZ&&(u.node.timestamp=Date.now()),AZ},write:(u,w,P,iZ,VZ)=>{for(var AZ=0;AZ<iZ;AZ++)try{E(w[P+AZ])}catch{throw new C.ErrnoError(29)}return iZ&&(u.node.timestamp=Date.now()),AZ}}),C.mkdev(B,M,D)},forceLoadFile:a=>{if(a.isDevice||a.isFolder||a.link||a.contents)return!0;if(typeof XMLHttpRequest<"u")throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(Q)try{a.contents=QA(Q(a.url),!0),a.usedBytes=a.contents.length}catch{throw new C.ErrnoError(29)}else throw new Error("Cannot load without read() or XMLHttpRequest.")},createLazyFile:(a,o,R,E,B)=>{function M(){this.lengthKnown=!1,this.chunks=[]}if(M.prototype.get=function(aZ){if(!(aZ>this.length-1||aZ<0)){var FZ=aZ%this.chunkSize,SZ=aZ/this.chunkSize|0;return this.getter(SZ)[FZ]}},M.prototype.setDataGetter=function(aZ){this.getter=aZ},M.prototype.cacheLength=function(){var aZ=new XMLHttpRequest;if(aZ.open("HEAD",R,!1),aZ.send(null),!(aZ.status>=200&&aZ.status<300||aZ.status===304))throw new Error("Couldn't load "+R+". Status: "+aZ.status);var FZ=Number(aZ.getResponseHeader("Content-length")),SZ,Ym=(SZ=aZ.getResponseHeader("Accept-Ranges"))&&SZ==="bytes",tm=(SZ=aZ.getResponseHeader("Content-Encoding"))&&SZ==="gzip",mZ=1024*1024;Ym||(mZ=FZ);var GZ=(Wm,Eh)=>{if(Wm>Eh)throw new Error("invalid range ("+Wm+", "+Eh+") or no bytes requested!");if(Eh>FZ-1)throw new Error("only "+FZ+" bytes available! programmer error!");var cm=new XMLHttpRequest;if(cm.open("GET",R,!1),FZ!==mZ&&cm.setRequestHeader("Range","bytes="+Wm+"-"+Eh),cm.responseType="arraybuffer",cm.overrideMimeType&&cm.overrideMimeType("text/plain; charset=x-user-defined"),cm.send(null),!(cm.status>=200&&cm.status<300||cm.status===304))throw new Error("Couldn't load "+R+". Status: "+cm.status);return cm.response!==void 0?new Uint8Array(cm.response||[]):QA(cm.responseText||"",!0)},Hm=this;Hm.setDataGetter(Wm=>{var Eh=Wm*mZ,cm=(Wm+1)*mZ-1;if(cm=Math.min(cm,FZ-1),typeof Hm.chunks[Wm]>"u"&&(Hm.chunks[Wm]=GZ(Eh,cm)),typeof Hm.chunks[Wm]>"u")throw new Error("doXHR failed!");return Hm.chunks[Wm]}),(tm||!FZ)&&(mZ=FZ=1,FZ=this.getter(0).length,mZ=FZ,f("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=FZ,this._chunkSize=mZ,this.lengthKnown=!0},typeof XMLHttpRequest<"u"){if(!F)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var D=new M;Object.defineProperties(D,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var u={isDevice:!1,contents:D}}else var u={isDevice:!1,url:R};var w=C.createFile(a,o,u,E,B);u.contents?w.contents=u.contents:u.url&&(w.contents=null,w.url=u.url),Object.defineProperties(w,{usedBytes:{get:function(){return this.contents.length}}});var P={},iZ=Object.keys(w.stream_ops);iZ.forEach(AZ=>{var aZ=w.stream_ops[AZ];P[AZ]=function(){return C.forceLoadFile(w),aZ.apply(null,arguments)}});function VZ(AZ,aZ,FZ,SZ,Ym){var tm=AZ.node.contents;if(Ym>=tm.length)return 0;var mZ=Math.min(tm.length-Ym,SZ);if(Y(mZ>=0),tm.slice)for(var GZ=0;GZ<mZ;GZ++)aZ[FZ+GZ]=tm[Ym+GZ];else for(var GZ=0;GZ<mZ;GZ++)aZ[FZ+GZ]=tm.get(Ym+GZ);return mZ}return P.read=(AZ,aZ,FZ,SZ,Ym)=>(C.forceLoadFile(w),VZ(AZ,aZ,FZ,SZ,Ym)),P.mmap=(AZ,aZ,FZ,SZ,Ym)=>{C.forceLoadFile(w);var tm=QW(aZ);if(!tm)throw new C.ErrnoError(48);return VZ(AZ,ZZ,tm,aZ,FZ),{ptr:tm,allocated:!0}},w.stream_ops=P,w},absolutePath:()=>{L("FS.absolutePath has been removed; use PATH_FS.resolve instead")},createFolder:()=>{L("FS.createFolder has been removed; use FS.mkdir instead")},createLink:()=>{L("FS.createLink has been removed; use FS.symlink instead")},joinPath:()=>{L("FS.joinPath has been removed; use PATH.join instead")},mmapAlloc:()=>{L("FS.mmapAlloc has been replaced by the top level function mmapAlloc")},standardizePath:()=>{L("FS.standardizePath has been removed; use PATH.normalize instead")}},LY={DEFAULT_POLLMASK:5,calculateAt:function(a,o,R){if(hm.isAbs(o))return o;var E;if(a===-100)E=C.cwd();else{var B=LY.getStreamFromFD(a);E=B.path}if(o.length==0){if(!R)throw new C.ErrnoError(44);return E}return hm.join2(E,o)},doStat:function(a,o,R){try{var E=a(o)}catch(u){if(u&&u.node&&hm.normalize(o)!==hm.normalize(C.getPath(u.node)))return-54;throw u}z[R>>2]=E.dev,z[R+4>>2]=E.mode,nZ[R+8>>2]=E.nlink,z[R+12>>2]=E.uid,z[R+16>>2]=E.gid,z[R+20>>2]=E.rdev,jm=[E.size>>>0,(pZ=E.size,+Math.abs(pZ)>=1?pZ>0?+Math.floor(pZ/4294967296)>>>0:~~+Math.ceil((pZ-+(~~pZ>>>0))/4294967296)>>>0:0)],z[R+24>>2]=jm[0],z[R+28>>2]=jm[1],z[R+32>>2]=4096,z[R+36>>2]=E.blocks;var B=E.atime.getTime(),M=E.mtime.getTime(),D=E.ctime.getTime();return jm=[Math.floor(B/1e3)>>>0,(pZ=Math.floor(B/1e3),+Math.abs(pZ)>=1?pZ>0?+Math.floor(pZ/4294967296)>>>0:~~+Math.ceil((pZ-+(~~pZ>>>0))/4294967296)>>>0:0)],z[R+40>>2]=jm[0],z[R+44>>2]=jm[1],nZ[R+48>>2]=B%1e3*1e3,jm=[Math.floor(M/1e3)>>>0,(pZ=Math.floor(M/1e3),+Math.abs(pZ)>=1?pZ>0?+Math.floor(pZ/4294967296)>>>0:~~+Math.ceil((pZ-+(~~pZ>>>0))/4294967296)>>>0:0)],z[R+56>>2]=jm[0],z[R+60>>2]=jm[1],nZ[R+64>>2]=M%1e3*1e3,jm=[Math.floor(D/1e3)>>>0,(pZ=Math.floor(D/1e3),+Math.abs(pZ)>=1?pZ>0?+Math.floor(pZ/4294967296)>>>0:~~+Math.ceil((pZ-+(~~pZ>>>0))/4294967296)>>>0:0)],z[R+72>>2]=jm[0],z[R+76>>2]=jm[1],nZ[R+80>>2]=D%1e3*1e3,jm=[E.ino>>>0,(pZ=E.ino,+Math.abs(pZ)>=1?pZ>0?+Math.floor(pZ/4294967296)>>>0:~~+Math.ceil((pZ-+(~~pZ>>>0))/4294967296)>>>0:0)],z[R+88>>2]=jm[0],z[R+92>>2]=jm[1],0},doMsync:function(a,o,R,E,B){if(!C.isFile(o.node.mode))throw new C.ErrnoError(43);if(E&2)return 0;var M=oZ.slice(a,a+R);C.msync(o,M,B,R,E)},varargs:void 0,get(){Y(LY.varargs!=null),LY.varargs+=4;var a=z[LY.varargs-4>>2];return a},getStr(a){var o=Ch(a);return o},getStreamFromFD:function(a){var o=C.getStreamChecked(a);return o}},ir=(a,o)=>{var R=0;return Ei().forEach(function(E,B){var M=o+R;nZ[a+B*4>>2]=M,Ls(E,M),R+=E.length+1}),0},Ar=(a,o)=>{var R=Ei();nZ[a>>2]=R.length;var E=0;return R.forEach(function(B){E+=B.length+1}),nZ[o>>2]=E,0};function ar(a){try{var o=LY.getStreamFromFD(a);return C.close(o),0}catch(R){if(typeof C>"u"||R.name!=="ErrnoError")throw R;return R.errno}}var tr=(a,o,R,E)=>{for(var B=0,M=0;M<R;M++){var D=nZ[o>>2],u=nZ[o+4>>2];o+=8;var w=C.read(a,ZZ,D,u,E);if(w<0)return-1;if(B+=w,w<u)break;typeof E<"u"&&(E+=w)}return B};function Wr(a,o,R,E){try{var B=LY.getStreamFromFD(a),M=tr(B,o,R);return nZ[E>>2]=M,0}catch(D){if(typeof C>"u"||D.name!=="ErrnoError")throw D;return D.errno}}function er(a,o,R,E,B){var M=NW(o,R);try{if(isNaN(M))return 61;var D=LY.getStreamFromFD(a);return C.llseek(D,M,E),jm=[D.position>>>0,(pZ=D.position,+Math.abs(pZ)>=1?pZ>0?+Math.floor(pZ/4294967296)>>>0:~~+Math.ceil((pZ-+(~~pZ>>>0))/4294967296)>>>0:0)],z[B>>2]=jm[0],z[B+4>>2]=jm[1],D.getdents&&M===0&&E===0&&(D.getdents=null),0}catch(u){if(typeof C>"u"||u.name!=="ErrnoError")throw u;return u.errno}}var or=(a,o,R,E)=>{for(var B=0,M=0;M<R;M++){var D=nZ[o>>2],u=nZ[o+4>>2];o+=8;var w=C.write(a,ZZ,D,u,E);if(w<0)return-1;B+=w,typeof E<"u"&&(E+=w)}return B};function Vr(a,o,R,E){try{var B=LY.getStreamFromFD(a),M=or(B,o,R);return nZ[E>>2]=M,0}catch(D){if(typeof C>"u"||D.name!=="ErrnoError")throw D;return D.errno}}var lr=(a,o)=>{for(var R=0,E=0;E<=o;R+=a[E++]);return R},CW=[31,29,31,30,31,30,31,31,30,31,30,31],BW=[31,28,31,30,31,30,31,31,30,31,30,31],Rr=(a,o)=>{for(var R=new Date(a.getTime());o>0;){var E=Ni(R.getFullYear()),B=R.getMonth(),M=(E?CW:BW)[B];if(o>M-R.getDate())o-=M-R.getDate()+1,R.setDate(1),B<11?R.setMonth(B+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else return R.setDate(R.getDate()+o),R}return R},gW=(a,o)=>{Y(a.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)"),ZZ.set(a,o)},Gr=(a,o,R,E)=>{var B=z[E+40>>2],M={tm_sec:z[E>>2],tm_min:z[E+4>>2],tm_hour:z[E+8>>2],tm_mday:z[E+12>>2],tm_mon:z[E+16>>2],tm_year:z[E+20>>2],tm_wday:z[E+24>>2],tm_yday:z[E+28>>2],tm_isdst:z[E+32>>2],tm_gmtoff:z[E+36>>2],tm_zone:B?Ch(B):""},D=Ch(R),u={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var w in u)D=D.replace(new RegExp(w,"g"),u[w]);var P=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],iZ=["January","February","March","April","May","June","July","August","September","October","November","December"];function VZ(mZ,GZ,Hm){for(var Wm=typeof mZ=="number"?mZ.toString():mZ||"";Wm.length<GZ;)Wm=Hm[0]+Wm;return Wm}function AZ(mZ,GZ){return VZ(mZ,GZ,"0")}function aZ(mZ,GZ){function Hm(Eh){return Eh<0?-1:Eh>0?1:0}var Wm;return(Wm=Hm(mZ.getFullYear()-GZ.getFullYear()))===0&&(Wm=Hm(mZ.getMonth()-GZ.getMonth()))===0&&(Wm=Hm(mZ.getDate()-GZ.getDate())),Wm}function FZ(mZ){switch(mZ.getDay()){case 0:return new Date(mZ.getFullYear()-1,11,29);case 1:return mZ;case 2:return new Date(mZ.getFullYear(),0,3);case 3:return new Date(mZ.getFullYear(),0,2);case 4:return new Date(mZ.getFullYear(),0,1);case 5:return new Date(mZ.getFullYear()-1,11,31);case 6:return new Date(mZ.getFullYear()-1,11,30)}}function SZ(mZ){var GZ=Rr(new Date(mZ.tm_year+1900,0,1),mZ.tm_yday),Hm=new Date(GZ.getFullYear(),0,4),Wm=new Date(GZ.getFullYear()+1,0,4),Eh=FZ(Hm),cm=FZ(Wm);return aZ(Eh,GZ)<=0?aZ(cm,GZ)<=0?GZ.getFullYear()+1:GZ.getFullYear():GZ.getFullYear()-1}var Ym={"%a":mZ=>P[mZ.tm_wday].substring(0,3),"%A":mZ=>P[mZ.tm_wday],"%b":mZ=>iZ[mZ.tm_mon].substring(0,3),"%B":mZ=>iZ[mZ.tm_mon],"%C":mZ=>{var GZ=mZ.tm_year+1900;return AZ(GZ/100|0,2)},"%d":mZ=>AZ(mZ.tm_mday,2),"%e":mZ=>VZ(mZ.tm_mday,2," "),"%g":mZ=>SZ(mZ).toString().substring(2),"%G":mZ=>SZ(mZ),"%H":mZ=>AZ(mZ.tm_hour,2),"%I":mZ=>{var GZ=mZ.tm_hour;return GZ==0?GZ=12:GZ>12&&(GZ-=12),AZ(GZ,2)},"%j":mZ=>AZ(mZ.tm_mday+lr(Ni(mZ.tm_year+1900)?CW:BW,mZ.tm_mon-1),3),"%m":mZ=>AZ(mZ.tm_mon+1,2),"%M":mZ=>AZ(mZ.tm_min,2),"%n":()=>`
`,"%p":mZ=>mZ.tm_hour>=0&&mZ.tm_hour<12?"AM":"PM","%S":mZ=>AZ(mZ.tm_sec,2),"%t":()=>"	","%u":mZ=>mZ.tm_wday||7,"%U":mZ=>{var GZ=mZ.tm_yday+7-mZ.tm_wday;return AZ(Math.floor(GZ/7),2)},"%V":mZ=>{var GZ=Math.floor((mZ.tm_yday+7-(mZ.tm_wday+6)%7)/7);if((mZ.tm_wday+371-mZ.tm_yday-2)%7<=2&&GZ++,GZ){if(GZ==53){var Wm=(mZ.tm_wday+371-mZ.tm_yday)%7;Wm!=4&&(Wm!=3||!Ni(mZ.tm_year))&&(GZ=1)}}else{GZ=52;var Hm=(mZ.tm_wday+7-mZ.tm_yday-1)%7;(Hm==4||Hm==5&&Ni(mZ.tm_year%400-1))&&GZ++}return AZ(GZ,2)},"%w":mZ=>mZ.tm_wday,"%W":mZ=>{var GZ=mZ.tm_yday+7-(mZ.tm_wday+6)%7;return AZ(Math.floor(GZ/7),2)},"%y":mZ=>(mZ.tm_year+1900).toString().substring(2),"%Y":mZ=>mZ.tm_year+1900,"%z":mZ=>{var GZ=mZ.tm_gmtoff,Hm=GZ>=0;return GZ=Math.abs(GZ)/60,GZ=GZ/60*100+GZ%60,(Hm?"+":"-")+("0000"+GZ).slice(-4)},"%Z":mZ=>mZ.tm_zone,"%%":()=>"%"};D=D.replace(/%%/g,"\0\0");for(var w in Ym)D.includes(w)&&(D=D.replace(new RegExp(w,"g"),Ym[w](M)));D=D.replace(/\0\0/g,"%");var tm=QA(D,!1);return tm.length>o?0:(gW(tm,a),tm.length-1)},Fr=(a,o,R,E,B)=>Gr(a,o,R,E);function dr(a){var o=h["_"+a];return Y(o,"Cannot call unknown function "+a+", make sure it is exported"),o}var sr=a=>{var o=xn(a)+1,R=TW(o);return UA(a,R,o),R},IW=function(a,o,R,E,B){var M={string:FZ=>{var SZ=0;return FZ!=null&&FZ!==0&&(SZ=sr(FZ)),SZ},array:FZ=>{var SZ=TW(FZ.length);return gW(FZ,SZ),SZ}};function D(FZ){return o==="string"?Ch(FZ):o==="boolean"?!!FZ:FZ}var u=dr(a),w=[],P=0;if(Y(o!=="array",'Return type should not be "array".'),E)for(var iZ=0;iZ<E.length;iZ++){var VZ=M[R[iZ]];VZ?(P===0&&(P=Cr()),w[iZ]=VZ(E[iZ])):w[iZ]=E[iZ]}var AZ=u.apply(null,w);function aZ(FZ){return P!==0&&Br(P),D(FZ)}return AZ=aZ(AZ),AZ};function rr(a,o,R,E){return function(){return IW(a,o,R,arguments,E)}}N2(),un=h.BindingError=class extends Error{constructor(o){super(o),this.name="BindingError"}},iW=h.InternalError=class extends Error{constructor(o){super(o),this.name="InternalError"}},D2(),I2(),X2(),VW=h.UnboundTypeError=q2(Error,"UnboundTypeError"),ns(),As();var pW=function(a,o,R,E){a||(a=this),this.parent=a,this.mount=a.mount,this.mounted=null,this.id=C.nextInode++,this.name=o,this.mode=R,this.node_ops={},this.stream_ops={},this.rdev=E},CA=365,BA=146;Object.defineProperties(pW.prototype,{read:{get:function(){return(this.mode&CA)===CA},set:function(a){a?this.mode|=CA:this.mode&=~CA}},write:{get:function(){return(this.mode&BA)===BA},set:function(a){a?this.mode|=BA:this.mode&=~BA}},isFolder:{get:function(){return C.isDir(this.mode)}},isDevice:{get:function(){return C.isChrdev(this.mode)}}}),C.FSNode=pW,C.createPreloadedFile=Zr,C.staticInit(),fa={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Nr(){ti("fetchSettings")}var jW={__assert_fail:Vi,__cxa_throw:s2,_embind_register_bigint:r2,_embind_register_bool:k2,_embind_register_class:$2,_embind_register_class_constructor:ms,_embind_register_class_function:hs,_embind_register_class_property:Ys,_embind_register_emval:as,_embind_register_float:Ws,_embind_register_integer:os,_embind_register_memory_view:Vs,_embind_register_std_string:ls,_embind_register_std_wstring:Ns,_embind_register_void:Es,_emscripten_get_now_is_monotonic:Us,_emval_as:Js,_emval_decref:ca,_emval_get_property:Qs,_emval_incref:Cs,_emval_new_cstring:Is,_emval_run_destructors:ps,_emval_take_value:js,_gmtime_js:cs,_mktime_js:Ds,_tzset_js:fs,abort:us,emscripten_asm_const_int:_s,emscripten_date_now:Os,emscripten_get_now:kW,emscripten_memcpy_big:ws,emscripten_resize_heap:zs,emscripten_run_script_string:UW,environ_get:ir,environ_sizes_get:Ar,fd_close:ar,fd_read:Wr,fd_seek:er,fd_write:Vr,strftime_l:Fr},AQ=ai(),aQ=fZ("__wasm_call_ctors"),gA=h._malloc=fZ("malloc"),JY=h._free=fZ("free"),tQ=h._inflateEllipsoid=fZ("inflateEllipsoid"),WQ=h._getCoveragePositions=fZ("getCoveragePositions"),Er=h._fflush=fZ("fflush"),kr=fZ("__getTypeName"),eQ=h.__embind_initialize_bindings=fZ("_embind_initialize_bindings"),oQ=fZ("__errno_location"),Ur=fZ("setTempRet0"),cW=()=>(cW=K.emscripten_stack_init)(),Jr=()=>(Jr=K.emscripten_stack_get_free)(),Qr=()=>(Qr=K.emscripten_stack_get_base)(),ua=()=>(ua=K.emscripten_stack_get_end)(),Cr=fZ("stackSave"),Br=fZ("stackRestore"),TW=fZ("stackAlloc"),gr=()=>(gr=K.emscripten_stack_get_current)(),VQ=fZ("__cxa_increment_exception_refcount"),Ir=fZ("__cxa_is_pointer_type"),lQ=h.dynCall_jiji=fZ("dynCall_jiji"),RQ=h.dynCall_iiiiij=fZ("dynCall_iiiiij"),GQ=h.dynCall_iiiiijj=fZ("dynCall_iiiiijj"),FQ=h.dynCall_iiiiiijj=fZ("dynCall_iiiiiijj"),dQ=h.dynCall_viijii=fZ("dynCall_viijii");function pr(a){try{for(var o=atob(a),R=new Uint8Array(o.length),E=0;E<o.length;++E)R[E]=o.charCodeAt(E);return R}catch{throw new Error("Converting base64 string to bytes failed.")}}function jr(a){if(uZ(a))return pr(a.slice(IZ.length))}h.ccall=IW,h.cwrap=rr;var cr=["writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertU32PairToI53","exitJS","setErrNo","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","getHostByName","getCallstack","emscriptenLog","convertPCtoSourceLocation","runMainThreadEmAsm","jstoi_q","jstoi_s","listenOnce","autoResumeAudioContext","handleException","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","safeSetTimeout","asmjsMangle","getNativeTypeSize","STACK_SIZE","STACK_ALIGN","POINTER_SIZE","ASSERTIONS","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","getFunctionAddress","addFunction","removeFunction","reallyNegative","unSign","strLen","reSign","formatString","intArrayToString","AsciiToString","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","findCanvasEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","jsStackTrace","stackTrace","checkWasiClock","wasiRightsToMuslOFlags","wasiOFlagsToMuslOFlags","createDyncallWrapper","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","getPromise","makePromise","idsToPromises","makePromiseCallback","findMatchingCatch","setMainLoop","getSocketFromFD","getSocketAddress","_setNetworkCallback","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","webgl_enable_WEBGL_multi_draw","emscriptenWebGLGet","computeUnpackAlignedImageSize","colorChannelsInGlTextureFormat","emscriptenWebGLGetTexPixelData","__glGenObject","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","__glGetActiveAttribOrUniform","writeGLArray","registerWebGlEventCallback","runAndAbortIfError","SDL_unicode","SDL_ttfContext","SDL_audio","GLFW_Window","ALLOC_NORMAL","ALLOC_STACK","allocate","writeStringToMemory","writeAsciiToMemory","registerInheritedInstance","unregisterInheritedInstance","enumReadValueFromPointer","craftEmvalAllocator","emval_get_global","emval_lookupTypes","emval_allocateDestructors","emval_addMethodCaller"];cr.forEach(ei);var Tr=["run","addOnPreRun","addOnInit","addOnPreMain","addOnExit","addOnPostRun","addRunDependency","removeRunDependency","FS_createFolder","FS_createPath","FS_createDataFile","FS_createLazyFile","FS_createLink","FS_createDevice","FS_unlink","out","err","callMain","abort","keepRuntimeAlive","wasmMemory","wasmTable","wasmExports","stackAlloc","stackSave","stackRestore","getTempRet0","setTempRet0","writeStackCookie","checkStackCookie","intArrayFromBase64","tryParseAsDataURI","convertI32PairToI53Checked","ptrToString","zeroMemory","getHeapMax","growMemory","ENV","MONTH_DAYS_REGULAR","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR_CUMULATIVE","MONTH_DAYS_LEAP_CUMULATIVE","isLeapYear","ydayFromDate","arraySum","addDays","ERRNO_CODES","ERRNO_MESSAGES","DNS","Protocols","Sockets","initRandomFill","randomFill","timers","warnOnce","UNWIND_CACHE","readEmAsmArgsArray","readEmAsmArgs","runEmAsmFunction","getExecutableName","dynCallLegacy","getDynCaller","dynCall","asyncLoad","alignMemory","mmapAlloc","handleAllocatorInit","HandleAllocator","getCFunc","freeTableIndexes","functionsInTableMap","setValue","getValue","PATH","PATH_FS","UTF8Decoder","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","intArrayFromString","stringToAscii","UTF16Decoder","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","stringToNewUTF8","stringToUTF8OnStack","writeArrayToMemory","JSEvents","specialHTMLTargets","currentFullscreenStrategy","restoreOldWindowedStyle","demangle","demangleAll","ExitStatus","getEnvStrings","doReadv","doWritev","promiseMap","uncaughtExceptionCount","exceptionLast","exceptionCaught","ExceptionInfo","Browser","wget","SYSCALLS","preloadPlugins","FS_createPreloadedFile","FS_modeStringToFlags","FS_getMode","FS_stdin_getChar_buffer","FS_stdin_getChar","FS","MEMFS","TTY","PIPEFS","SOCKFS","tempFixedLengthArray","miniTempWebGLFloatBuffers","miniTempWebGLIntBuffers","GL","emscripten_webgl_power_preferences","AL","GLUT","EGL","GLEW","IDBStore","SDL","SDL_gfx","GLFW","allocateUTF8","allocateUTF8OnStack","InternalError","BindingError","throwInternalError","throwBindingError","registeredTypes","awaitingDependencies","typeDependencies","tupleRegistrations","structRegistrations","sharedRegisterType","whenDependentTypesAreResolved","embind_charCodes","embind_init_charCodes","readLatin1String","getTypeName","heap32VectorToArray","requireRegisteredType","UnboundTypeError","PureVirtualError","init_embind","throwUnboundTypeError","ensureOverloadTable","exposePublicSymbol","replacePublicSymbol","extendError","createNamedFunction","embindRepr","registeredInstances","getBasestPointer","getInheritedInstance","getInheritedInstanceCount","getLiveInheritedInstances","registeredPointers","registerType","getShiftFromSize","integerReadValueFromPointer","floatReadValueFromPointer","simpleReadValueFromPointer","runDestructors","newFunc","craftInvokerFunction","embind__requireFunction","genericPointerToWireType","constNoSmartPtrRawPointerToWireType","nonConstNoSmartPtrRawPointerToWireType","init_RegisteredPointer","RegisteredPointer","RegisteredPointer_getPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","RegisteredPointer_fromWireType","runDestructor","releaseClassHandle","finalizationRegistry","detachFinalizer_deps","detachFinalizer","attachFinalizer","makeClassHandle","init_ClassHandle","ClassHandle","ClassHandle_isAliasOf","throwInstanceAlreadyDeleted","ClassHandle_clone","ClassHandle_delete","deletionQueue","ClassHandle_isDeleted","ClassHandle_deleteLater","flushPendingDeletes","delayFunction","setDelayFunction","RegisteredClass","shallowCopyInternalPointer","downcastPointer","upcastPointer","validateThis","char_0","char_9","makeLegalFunctionName","emval_handles","emval_symbols","init_emval","count_emval_handles","getStringOrSymbol","Emval","emval_newers","emval_methodCallers","emval_registeredMethods"];Tr.forEach(Mn);var IA;s=function a(){IA||MW(),IA||(s=a)};function Mr(){cW(),LZ()}function MW(){if(Em>0||(Mr(),Zh(),Em>0))return;function a(){IA||(IA=!0,h.calledRun=!0,!tZ&&(mh(),n(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),Y(!h._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),vm()))}h.setStatus?(h.setStatus("Running..."),setTimeout(function(){setTimeout(function(){h.setStatus("")},1),a()},1)):a(),Cm()}if(h.preInit)for(typeof h.preInit=="function"&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();return MW(),m.ready}})(),Na=$J;globalThis.Buffer=globalThis.Buffer||{};var t2=(Na.hasOwnProperty("then")?Na:Promise.resolve(Na())).then(Z=>{let m={find_nearby_indices:{rval:"boolean",params:["number","number"]},getCoveragePositions:{rval:null,params:["number","number","number","number","number"]},inflateEllipsoid:{rval:null,params:["number"]}},h={wasm:Z};return Object.keys(m).forEach(n=>{h[n]=m[n].params?Z.cwrap(n,m[n].rval,m[n].params):Z.cwrap(n,m[n].rval)}),h});var _Z={LEO:"Low Earth Orbit",MEO:"Medium Earth Orbit",HEO:"High Earth Orbit",GEO:"Geostationary Orbit",IGO:"Inclined Geosynchronous Orbit",EGO:"Extended Geostationary Orbit",GEOIADC:"IADC GEO Protected Region",GEOSYNC:"Geosynchronous Orbit",SUNSYNC:"Sun Synchronous Orbit",SEMISYNC:"Semi Synchronous Orbit",POLAR:"POLAR Orbit",UNKNOWN:"UNKNOWN"},mW=86164.0905;function W2(Z){let m=[],h=Z.properties.CAT.getValue(),n=Z.properties.OMM.getValue(),i=n.SEMI_MAJOR_AXIS;if(h.PERIOD<128*60&&n.ECCENTRICITY<.25&&m.push(_Z.LEO),i>36e3){let A=kZ.now(),t=kZ.addMinutes(A,1440,new kZ),W=10,e=1/0,G=-1/0;for(let F=A;kZ.lessThan(F,t);F=kZ.addMinutes(F,W,new kZ)){let d=Z.position.getValue(F),{latitude:J}=nm.fromCartesian(d,pA.WGS84)||{latitude:0},k=gZ.toDegrees(J);e=Math.min(e,k),G=Math.max(G,k)}h.PERIOD>mW-60&&h.PERIOD<mW+60&&(n.INCLINATION<1?m.push(_Z.GEO):m.push(_Z.GEOSYNC)),n.INCLINATION>=25&&n.INCLINATION<=180&&i>=37948&&i<=46380&&n.ECCENTRICITY<=.25&&m.push(_Z.IGO),n.INCLINATION>=0&&n.INCLINATION<=25&&i>=37948&&i<=46380&&n.ECCENTRICITY<=.25&&m.push(_Z.EGO),e>=-15&&G<=15&&h.PERIGEE>=35586&&h.PERIGEE<=35986&&m.push(_Z.GEOIADC)}return h.PERIGEE>=2e3&&h.PERIGEE<35700?m.push(_Z.MEO):h.PERIGEE>35786&&m.push(_Z.HEO),n.INCLINATION>97&&n.INCLINATION<99&&m.push(_Z.SUNSYNC),Math.abs(h.PERIOD-.5*mW)<1&&m.push(_Z.SEMISYNC),n.INCLINATION>=80&&n.INCLINATION<=100&&m.push(_Z.POLAR),m.length===0&&m.push(_Z.UNKNOWN),m}function ln(){U.throwInstantiationError()}Object.defineProperties(ln.prototype,{credits:{get:U.throwInstantiationError},waterMask:{get:U.throwInstantiationError}});ln.prototype.interpolateHeight=U.throwInstantiationError;ln.prototype.isChildAvailable=U.throwInstantiationError;ln.prototype.createMesh=U.throwInstantiationError;ln.prototype.upsample=U.throwInstantiationError;ln.prototype.wasCreatedByUpsampling=U.throwInstantiationError;ln.maximumAsynchronousTasks=5;var e2=ln;function ZQ(Z,m,h,n,i,A,t,W,e,G,F,d,J,k,r,Q){this.center=Z,this.vertices=m,this.stride=l(G,6),this.indices=h,this.indexCountWithoutSkirts=n,this.vertexCountWithoutSkirts=i,this.minimumHeight=A,this.maximumHeight=t,this.boundingSphere3D=W,this.occludeePointInScaledSpace=e,this.orientedBoundingBox=F,this.encoding=d,this.westIndicesSouthToNorth=J,this.southIndicesEastToWest=k,this.eastIndicesNorthToSouth=r,this.northIndicesWestToEast=Q}var hW=ZQ;function OY(Z){if(!V(Z)||!V(Z.buffer))throw new U("options.buffer is required.");if(!V(Z.width))throw new U("options.width is required.");if(!V(Z.height))throw new U("options.height is required.");this._buffer=Z.buffer,this._width=Z.width,this._height=Z.height,this._childTileMask=l(Z.childTileMask,15),this._encoding=l(Z.encoding,DA.NONE);let m=ya.DEFAULT_STRUCTURE,h=Z.structure;V(h)?h!==m&&(h.heightScale=l(h.heightScale,m.heightScale),h.heightOffset=l(h.heightOffset,m.heightOffset),h.elementsPerHeight=l(h.elementsPerHeight,m.elementsPerHeight),h.stride=l(h.stride,m.stride),h.elementMultiplier=l(h.elementMultiplier,m.elementMultiplier),h.isBigEndian=l(h.isBigEndian,m.isBigEndian)):h=m,this._structure=h,this._createdByUpsampling=l(Z.createdByUpsampling,!1),this._waterMask=Z.waterMask,this._skirtHeight=void 0,this._bufferType=this._encoding===DA.LERC?Float32Array:this._buffer.constructor,this._mesh=void 0}Object.defineProperties(OY.prototype,{credits:{get:function(){}},waterMask:{get:function(){return this._waterMask}},childTileMask:{get:function(){return this._childTileMask}}});var o2="createVerticesFromHeightmap",mQ=new $Y(o2),hQ=new $Y(o2,e2.maximumAsynchronousTasks);OY.prototype.createMesh=function(Z){Z=l(Z,l.EMPTY_OBJECT),y.typeOf.object("options.tilingScheme",Z.tilingScheme),y.typeOf.number("options.x",Z.x),y.typeOf.number("options.y",Z.y),y.typeOf.number("options.level",Z.level);let m=Z.tilingScheme,h=Z.x,n=Z.y,i=Z.level,A=l(Z.exaggeration,1),t=l(Z.exaggerationRelativeHeight,0),W=l(Z.throttle,!0),e=m.ellipsoid,G=m.tileXYToNativeRectangle(h,n,i),F=m.tileXYToRectangle(h,n,i),d=e.cartographicToCartesian(QY.center(F)),J=this._structure,r=BY.getEstimatedLevelZeroGeometricErrorForAHeightmap(e,this._width,m.getNumberOfXTilesAtLevel(0))/(1<<i);this._skirtHeight=Math.min(r*4,1e3);let p=(W?hQ:mQ).scheduleTask({heightmap:this._buffer,structure:J,includeWebMercatorT:!0,width:this._width,height:this._height,nativeRectangle:G,rectangle:F,relativeToCenter:d,ellipsoid:e,skirtHeight:this._skirtHeight,isGeographic:m.projection instanceof xa,exaggeration:A,exaggerationRelativeHeight:t,encoding:this._encoding});if(!V(p))return;let T=this;return Promise.resolve(p).then(function(I){let f;T._skirtHeight>0?f=BY.getRegularGridAndSkirtIndicesAndEdgeIndices(I.gridWidth,I.gridHeight):f=BY.getRegularGridIndicesAndEdgeIndices(I.gridWidth,I.gridHeight);let b=I.gridWidth*I.gridHeight;return T._mesh=new hW(d,new Float32Array(I.vertices),f.indices,f.indexCountWithoutSkirts,b,I.minimumHeight,I.maximumHeight,BZ.clone(I.boundingSphere3D),_.clone(I.occludeePointInScaledSpace),I.numberOfAttributes,MA.clone(I.orientedBoundingBox),PW.clone(I.encoding),f.westIndicesSouthToNorth,f.southIndicesEastToWest,f.eastIndicesNorthToSouth,f.northIndicesWestToEast),T._buffer=void 0,T._mesh})};OY.prototype._createMeshSync=function(Z){y.typeOf.object("options.tilingScheme",Z.tilingScheme),y.typeOf.number("options.x",Z.x),y.typeOf.number("options.y",Z.y),y.typeOf.number("options.level",Z.level);let m=Z.tilingScheme,h=Z.x,n=Z.y,i=Z.level,A=l(Z.exaggeration,1),t=l(Z.exaggerationRelativeHeight,0),W=m.ellipsoid,e=m.tileXYToNativeRectangle(h,n,i),G=m.tileXYToRectangle(h,n,i),F=W.cartographicToCartesian(QY.center(G)),d=this._structure,k=BY.getEstimatedLevelZeroGeometricErrorForAHeightmap(W,this._width,m.getNumberOfXTilesAtLevel(0))/(1<<i);this._skirtHeight=Math.min(k*4,1e3);let r=ya.computeVertices({heightmap:this._buffer,structure:d,includeWebMercatorT:!0,width:this._width,height:this._height,nativeRectangle:e,rectangle:G,relativeToCenter:F,ellipsoid:W,skirtHeight:this._skirtHeight,isGeographic:m.projection instanceof xa,exaggeration:A,exaggerationRelativeHeight:t});this._buffer=void 0;let Q;this._skirtHeight>0?Q=BY.getRegularGridAndSkirtIndicesAndEdgeIndices(this._width,this._height):Q=BY.getRegularGridIndicesAndEdgeIndices(this._width,this._height);let p=r.gridWidth*r.gridHeight;return this._mesh=new hW(F,r.vertices,Q.indices,Q.indexCountWithoutSkirts,p,r.minimumHeight,r.maximumHeight,r.boundingSphere3D,r.occludeePointInScaledSpace,r.encoding.stride,r.orientedBoundingBox,r.encoding,Q.westIndicesSouthToNorth,Q.southIndicesEastToWest,Q.eastIndicesNorthToSouth,Q.northIndicesWestToEast),this._mesh};OY.prototype.interpolateHeight=function(Z,m,h){let n=this._width,i=this._height,A=this._structure,t=A.stride,W=A.elementsPerHeight,e=A.elementMultiplier,G=A.isBigEndian,F=A.heightOffset,d=A.heightScale,J=V(this._mesh),k=this._encoding===DA.LERC;if(!J&&k)return;let Q;if(J){let p=this._mesh.vertices,T=this._mesh.encoding;Q=V2(p,T,F,d,Z,n,i,m,h)}else Q=YQ(this._buffer,W,e,t,G,Z,n,i,m,h),Q=Q*d+F;return Q};OY.prototype.upsample=function(Z,m,h,n,i,A,t){if(!V(Z))throw new U("tilingScheme is required.");if(!V(m))throw new U("thisX is required.");if(!V(h))throw new U("thisY is required.");if(!V(n))throw new U("thisLevel is required.");if(!V(i))throw new U("descendantX is required.");if(!V(A))throw new U("descendantY is required.");if(!V(t))throw new U("descendantLevel is required.");if(t-n>1)throw new U("Upsampling through more than one level at a time is not currently supported.");let e=this._mesh;if(!V(e))return;let G=this._width,F=this._height,d=this._structure,J=d.stride,k=new this._bufferType(G*F*J),r=e.vertices,Q=e.encoding,p=Z.tileXYToRectangle(m,h,n),T=Z.tileXYToRectangle(i,A,t),I=d.heightOffset,f=d.heightScale,b=d.elementsPerHeight,O=d.elementMultiplier,v=d.isBigEndian,hZ=Math.pow(O,b-1);for(let K=0;K<F;++K){let tZ=gZ.lerp(T.north,T.south,K/(F-1));for(let NZ=0;NZ<G;++NZ){let Y=gZ.lerp(T.west,T.east,NZ/(G-1)),ZZ=V2(r,Q,I,f,p,G,F,Y,tZ);ZZ=ZZ<d.lowestEncodedHeight?d.lowestEncodedHeight:ZZ,ZZ=ZZ>d.highestEncodedHeight?d.highestEncodedHeight:ZZ,nQ(k,b,O,hZ,J,v,K*G+NZ,ZZ)}}return Promise.resolve(new OY({buffer:k,width:G,height:F,childTileMask:0,structure:this._structure,createdByUpsampling:!0}))};OY.prototype.isChildAvailable=function(Z,m,h,n){if(!V(Z))throw new U("thisX is required.");if(!V(m))throw new U("thisY is required.");if(!V(h))throw new U("childX is required.");if(!V(n))throw new U("childY is required.");let i=2;return h!==Z*2&&++i,n!==m*2&&(i-=2),(this._childTileMask&1<<i)!==0};OY.prototype.wasCreatedByUpsampling=function(){return this._createdByUpsampling};function YQ(Z,m,h,n,i,A,t,W,e,G){let F=(e-A.west)*(t-1)/(A.east-A.west),d=(G-A.south)*(W-1)/(A.north-A.south),J=F|0,k=J+1;k>=t&&(k=t-1,J=t-2);let r=d|0,Q=r+1;Q>=W&&(Q=W-1,r=W-2);let p=F-J,T=d-r;r=W-1-r,Q=W-1-Q;let I=Ea(Z,m,h,n,i,r*t+J),f=Ea(Z,m,h,n,i,r*t+k),b=Ea(Z,m,h,n,i,Q*t+J),O=Ea(Z,m,h,n,i,Q*t+k);return l2(p,T,I,f,b,O)}function V2(Z,m,h,n,i,A,t,W,e){let G=(W-i.west)*(A-1)/(i.east-i.west),F=(e-i.south)*(t-1)/(i.north-i.south),d=G|0,J=d+1;J>=A&&(J=A-1,d=A-2);let k=F|0,r=k+1;r>=t&&(r=t-1,k=t-2);let Q=G-d,p=F-k;k=t-1-k,r=t-1-r;let T=(m.decodeHeight(Z,k*A+d)-h)/n,I=(m.decodeHeight(Z,k*A+J)-h)/n,f=(m.decodeHeight(Z,r*A+d)-h)/n,b=(m.decodeHeight(Z,r*A+J)-h)/n;return l2(Q,p,T,I,f,b)}function l2(Z,m,h,n,i,A){return m<Z?h+Z*(n-h)+m*(A-n):h+Z*(A-i)+m*(i-h)}function Ea(Z,m,h,n,i,A){A*=n;let t=0,W;if(i)for(W=0;W<m;++W)t=t*h+Z[A+W];else for(W=m-1;W>=0;--W)t=t*h+Z[A+W];return t}function nQ(Z,m,h,n,i,A,t,W){t*=i;let e;if(A)for(e=0;e<m-1;++e)Z[t+e]=W/n|0,W-=Z[t+e]*n,n/=h;else for(e=m-1;e>0;--e)Z[t+e]=W/n|0,W-=Z[t+e]*n,n/=h;Z[t+e]=W}var R2=OY;function ni(Z){Z=l(Z,l.EMPTY_OBJECT),this._tilingScheme=Z.tilingScheme,V(this._tilingScheme)||(this._tilingScheme=new HW({ellipsoid:l(Z.ellipsoid,pA.WGS84)})),this._levelZeroMaximumGeometricError=BY.getEstimatedLevelZeroGeometricErrorForAHeightmap(this._tilingScheme.ellipsoid,64,this._tilingScheme.getNumberOfXTilesAtLevel(0)),this._errorEvent=new sZ}Object.defineProperties(ni.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){}},tilingScheme:{get:function(){return this._tilingScheme}},hasWaterMask:{get:function(){return!1}},hasVertexNormals:{get:function(){return!1}},availability:{get:function(){}}});ni.prototype.requestTileGeometry=function(Z,m,h,n){return Promise.resolve(new R2({buffer:new Uint8Array(16*16),width:16,height:16}))};ni.prototype.getLevelMaximumGeometricError=function(Z){return this._levelZeroMaximumGeometricError/(1<<Z)};ni.prototype.getTileDataAvailable=function(Z,m,h){};ni.prototype.loadTileDataAvailability=function(Z,m,h){};var G2=ni;function ii(Z,m){this._callback=void 0,this._isConstant=void 0,this._definitionChanged=new sZ,this.setCallback(Z,m)}Object.defineProperties(ii.prototype,{isConstant:{get:function(){return this._isConstant}},definitionChanged:{get:function(){return this._definitionChanged}}});ii.prototype.getValue=function(Z,m){return this._callback(Z,m)};ii.prototype.setCallback=function(Z,m){if(!V(Z))throw new U("callback is required.");if(!V(m))throw new U("isConstant is required.");let h=this._callback!==Z||this._isConstant!==m;this._callback=Z,this._isConstant=m,h&&this._definitionChanged.raiseEvent(this)};ii.prototype.equals=function(Z){return this===Z||Z instanceof ii&&this._callback===Z._callback&&this._isConstant===Z._isConstant};var F2=ii;var YW=class extends oA{constructor(m){if(!(m.sdc instanceof oA)||!m.sdc._wasmModule)throw new U("Invalid SpaceCatalogDataSource");super(`${m.sdc.name}_coverageGroup`),this.objectList=[],this.sdc=m.sdc,this.sdc.entities.collectionChanged.addEventListener((h,n,i,A)=>{for(let t=0;t<i.length;t++)~this.objectList.indexOf(i[t])&&this.remove(i[t]);for(let t=0;t<n.length;t++)!~this.objectList.indexOf(n[t])&&n[t]._coverageShowing&&this.push(n[t])}),this.coverageType=m.coverageType||0,this.color=m.color||H.fromRandom({alpha:.3}),this.groundCoverageOnly=m.groundCoverageOnly||!1,this.angle=m.angle,this.lastIntersectionTime=null,this.cachedPositions=[],this.wasmModule=this.sdc._wasmModule,this.samples=m.samples||10,this.scene=m.viewer,this.ecefPointer=this.wasmModule.wasm._malloc(24),this.ecefPoints=new Float64Array(this.wasmModule.wasm.HEAP8.buffer,this.ecefPointer,3),this.positions=new Float64Array(this.wasmModule.wasm.HEAP8.buffer,this.posArrayPointer,this._size),this.result=new _,this.ph=new SA,this.c3array=[]}get samples(){return this._samples}set samples(m){this._samples=m,this._size=6*this._samples,this._bytesSize=this._size*8,this.posArrayPointer&&this.wasmModule.wasm._free(this.posArrayPointer),this.posArrayPointer=this.wasmModule.wasm._malloc(this._bytesSize),this.positions=new Float64Array(this.wasmModule.wasm.HEAP8.buffer,this.posArrayPointer,this._size)}createGeometry(){let m="noclick:CoverageEntity";if(this.ph.satpos=[],!this.entities.getById(m)){let h=this.entities.add({id:m,polygon:{hierarchy:new F2(n=>{this.ph.positionsArray=[],this.ph.positions=[];for(let i=0;i<this.objectList.length;++i)if(this.objectList[i].show){if(this.c3array=[],this.result=this.objectList[i].position.getValue(n,this.result,!1),this.modelMatrix=this.objectList[i].computeModelMatrix(n),_.pack(this.result,this.ecefPoints),this.wasmModule.getCoveragePositions(this.ecefPointer,this.coverageType,this.angle,this.samples,this.posArrayPointer),this.positions.length%3===0){let A=_.unpackArray(this.positions,this.c3array);if(this.viewer?.scene&&!(this.viewer.scene.terrainProvider instanceof G2)&&this.samples>36){let t=new Date().getTime(),W=this.viewer.clock.currentTime;if((!this.lastClockTime||!kZ.equals(W,this.lastClockTime))&&(!this.lastIntersectionTime||t-this.lastIntersectionTime>1e3)){this.lastIntersectionTime=t,this.lastClockTime=W.clone(),this.lastClockTime=t.clone(),this.cachedPositions=[];for(let e=0;e<A.length;e++)try{let G=new XW(this.result,_.subtract(A[e],this.result,new _)),F=this.viewer.scene.globe.pick(G,this.viewer.scene);V(F)&&(A[e]=F),this.cachedPositions.push(A[e])}catch(G){console.log(G)}}else A=this.cachedPositions}this.ph.positionsArray[i]=A}else continue;this.groundCoverageOnly||(this.ph.satpos[i]=_.clone(this.result))}return this.ph},!1),perPositionHeight:!0,material:this.color},properties:{unselectable:!0}});Object.defineProperties(h,{show:{get:()=>!0,set:()=>{}}})}}getById(m){return this.objectList.filter(h=>h.id===m)}push(m){this.objectList.filter(h=>h.id===m.id).length||(this.objectList.push(m),this.createGeometry())}remove(m){this.objectList=this.objectList.filter(h=>h.id!==m.id),Object.defineProperties(m,{show:{configurable:!0,get:()=>m._show,set:h=>{m._show=h}}}),this.createGeometry()}},d2=YW;var ka=class extends oA{constructor(m={name=Km(),referenceFrame=Mm.FIXED,calcVelocity=!1,entityDefault={},scene=void 0}={}){super(m.name),m.scene||console.warn('The parameter "scene" is required.'),this.options=m,this._wasmModule=null,this._registered=!1,this._viewer=m.viewer,this._scene=m.scene,this._entityCollection.referenceFrame=m.referenceFrame||this._viewer?.referenceFrame||Mm.FIXED,this._entityCollection.calcVelocity=m.calcVelocity||!1;let h=(n,i,A,t)=>{A.filter(W=>W.properties?.pointer).forEach(W=>{this._wasmModule.removeEntity(W.properties.pointer)}),this._entityCollection.referenceFrame=this._scene.referenceFrame||this._entityCollection.referenceFrame};this._entityCollection.collectionChanged.addEventListener(h,this),this._orbits={[_Z.LEO]:[],[_Z.MEO]:[],[_Z.HEO]:[],[_Z.GEO]:[],[_Z.IGO]:[],[_Z.EGO]:[],[_Z.GEOIADC]:[],[_Z.GEOSYNC]:[],[_Z.SUNSYNC]:[],[_Z.SEMISYNC]:[],[_Z.POLAR]:[],[_Z.UNKNOWN]:[]}}onAdd(m){~m.getByName(this._coverageGroup.name).length&&m.add(this._coverageGroup)}onRemove(m){m.getByName(this._coverageGroup.name).length&&m.remove(this._coverageGroup)}async load(m){return await this.loadOMM(m,"tle")}loadOMM(m,h,n=!1){if(!m)throw new U('The parameter "omm" is required.');if(!h)throw new U('The parameter "satcat" is required.');return new Promise(async i=>{let A=await t2;this._previousLoad=!0,this._wasmModule=A,this._coverageGroup=this._coverageGroup||new d2({samples:72,sdc:this,coverageType:1,angle:90,groundCoverageOnly:!1,color:H.LIMEGREEN.withAlpha(.5),viewer:this._viewer}),this.entities.suspendEvents();let{wasm:t}=A,{SatelliteCatalog:W}=t;this._wasmSatelliteCatalog=this._wasmSatelliteCatalog||new W(this.name);let e=[];m instanceof ArrayBuffer||m instanceof Uint8Array?(m instanceof ArrayBuffer&&(m=new Uint8Array(m)),e=ZW(m,"OMM",ra).RECORDS):m instanceof ra.OMMCOLLECTIONT&&(e=m.RECORDS);let G=[];if(h instanceof ArrayBuffer||m instanceof Uint8Array){h instanceof ArrayBuffer&&(h=new Uint8Array(h));let F=await ZW(h,"CAT",$t).RECORDS;for(let d=0;d<F.length;d++)G[F[d].NORAD_CAT_ID]=F[d]}for(let F=0;F<e.length;F++){let d,J=e[F],k=n?n(J,G[J.NORAD_CAT_ID]):J.NORAD_CAT_ID;if(d=this.entities.getById(k))d.loadOMM(J);else{let r={id:k,properties:{CAT:G[J.NORAD_CAT_ID],OMM:J},point:{pixelSize:1},label:{show:!1,text:`${J.NORAD_CAT_ID.toString().padStart(5,0)}`,font:"1rem Helvetica",showBackground:!0,horizontalOrigin:ah.LEFT,backgroundColor:new H(.1,.1,.1,.9),pixelOffset:new _(10,0),scaleByDistance:new bZ(150,1.5,13e7,0),pixelOffsetScaleByDistance:new bZ(150,3,15e6,.5)}};for(let Q in this.options.entityDefault)this.options.entityDefault[Q]&&(r[Q]=Object.assign({},r[Q]||{},this.options.entityDefault[Q]));if(r&&A&&J)try{let Q=new da(r,A,this._wasmSatelliteCatalog,J);d=this.entities.add(Q,F)}catch(Q){globalThis.error||(console.log(Q),globalThis.error=Q)}}}this.entities._suspendCount&&this.entities.resumeEvents(),this.entities.referenceFrame=this._scene.referenceFrame,i(this)})}getEntitiesByOrbitType(m){return this._orbits[m]}categorizeSatellites(){for(let m in _Z)this._orbits[m]&&(this._orbits[m]=[]);for(let m=0;m<this.entities.values.length;m++){let h=this.entities.values[m],n=W2(h);for(let i in n)if(n[i]){let A=n[i];A===_Z.LEO?this.LEO.push(h):A===_Z.MEO?this.MEO.push(h):A===_Z.HEO?this.HEO.push(h):A===_Z.GEO?this.GEO.push(h):A===_Z.IGO?this.IGO.push(h):A===_Z.EGO?this.EGO.push(h):A===_Z.GEOIADC?this.GEOIADC.push(h):A===_Z.GEOSYNC?this.GEOSYNC.push(h):A===_Z.SUNSYNC?this.SUNSYNC.push(h):A===_Z.SEMISYNC?this.SEMISYNC.push(h):A===_Z.POLAR?this.POLAR.push(h):A===_Z.UNKNOWN&&this.UNKNOWN.push(h)}}}};async function iQ(Z){let{transferEntities:m,screeningObjectIds:h}=Z,n=[],{OMM:i,CAT:A}=m,t=new ka({name:"workerCatalog"});await t.loadOMM(i,A);let W=t._wasmSatelliteCatalog.conjunctionAssessment(Z.start,Z.stop,Z.step,Z.radius,h);for(let e=0;e<W.size();e++){let G=W.get(e);n.push({primary:G.primary.catalogNumber,secondary:G.secondary.catalogNumber,TCA:G.TCA,distance:G.distance})}return n}var Y5=fW(iQ);export{Y5 as default};
